<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="26">
  <CheatEntries>
    <CheatEntry>
      <ID>0</ID>
      <Description>"Enable"</Description>
      <Options moHideChildren="1"/>
      <LastState Activated="1"/>
      <Color>FF0000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
usemono()

label(pCharacter)
registersymbol(pCharacter)
label(bSprintKeyPressed)
registersymbol(bSprintKeyPressed)
label(dMoveSpeedMultiplier)
registersymbol(dMoveSpeedMultiplier)

alloc(newmem,2048,Okomotive.FarLoneSails:Character:Update+5) 
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov rsi,pCharacter
mov [rsi],rcx

originalcode:
sub rsp,08
mov rsi,rcx

exit:
jmp returnhere

///
pCharacter:
dq 0
bSprintKeyPressed:
dd 0
dMoveSpeedMultiplier:
dd (float)2
///

Okomotive.FarLoneSails:Character:Update+5:
jmp newmem
nop
nop
returnhere:

///******************************************///
label(pVehicle)
registersymbol(pVehicle)

alloc(newmem2,2048,Okomotive.FarLoneSails:Vehicle:Update+5)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
mov rsi,pVehicle
mov [rsi],rcx

originalcode2:
sub rsp,08
mov rsi,rcx

exit2:
jmp returnhere2

///
pVehicle:
///

Okomotive.FarLoneSails:Vehicle:Update+5:
jmp newmem2
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
Okomotive.FarLoneSails:Character:Update+5:
db 48 83 EC 08 48 8B F1
//Alt: sub rsp,08
//Alt: mov rsi,rcx

unregistersymbol(pCharacter)
unregistersymbol(bSprintKeyPressed)
unregistersymbol(dMoveSpeedMultiplier)

///******************************************///
dealloc(newmem2)
Okomotive.FarLoneSails:Vehicle:Update+5:
db 48 83 EC 08 48 8B F1
//Alt: sub rsp,08
//Alt: mov rsi,rcx

unregistersymbol(pVehicle)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>103902</ID>
          <Description>"Ignore Water"</Description>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanregion(motorWaterReadOnUseAOB,Okomotive.FarLoneSails:VehicleMotorButtonEngine:FixedUpdate,Okomotive.FarLoneSails:VehicleMotorButtonEngine:FixedUpdate+424,0F 82 ** ** ** ** 48 ** ** ** ** ** ** 48 8B C8 83 ** ** 48 ** ** ** 48 ** ** 83 ** ** F3 0F 10 ** ** F3 0F 5A C0 F2 0F 5A E8 F3 0F 11 ** ** F3 0F 10 ** ** F3 0F 5A C0 66 ** ** ** 66 ** ** ** 7A)
registersymbol(motorWaterReadOnUseAOB)

alloc(newmem,2048,motorWaterReadOnUseAOB+1d) //Okomotive.FarLoneSails:VehicleMotorButtonEngine:FixedUpdate+2ab)
label(returnhere)
label(originalcode_ignorewater)
registersymbol(originalcode_ignorewater)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push rax
mov eax,(float)10
movd xmm0,eax
pop eax
readmem(motorWaterReadOnUseAOB+1d,2)
db 5F
readmem(motorWaterReadOnUseAOB+20,2)
//maxss xmm0,[rax+20]
readmem(motorWaterReadOnUseAOB+1d,2)
db 11
readmem(motorWaterReadOnUseAOB+20,2)
//movss [rax+20],xmm0

originalcode_ignorewater:
readmem(motorWaterReadOnUseAOB+1d,5)
//movss xmm0,[rax+20]

exit:
jmp returnhere

///

motorWaterReadOnUseAOB+1d: //Okomotive.FarLoneSails:VehicleMotorButtonEngine:FixedUpdate+2ab:
jmp newmem
returnhere:

///**********************************************///
aobscanregion(motorWaterWriteOnUseAOB,Okomotive.FarLoneSails:VehicleMotorEnergy:SetValue,Okomotive.FarLoneSails:VehicleMotorEnergy:SetValue+66,F3 0F 11 ** ** C9 C3)
registersymbol(motorWaterWriteOnUseAOB)

alloc(newmem2,2048,motorWaterWriteOnUseAOB) //Okomotive.FarLoneSails:VehicleMotorEnergy:SetValue+57)
label(returnhere2)
label(originalcode2_ignorewater)
registersymbol(originalcode2_ignorewater)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push rax
mov eax,(float)10
movd xmm15,eax
pop rax
maxss xmm5,xmm15

originalcode2_ignorewater:
readmem(motorWaterWriteOnUseAOB,5)
//movss [rax+20],xmm5

exit2:
jmp returnhere2

///

motorWaterWriteOnUseAOB: //Okomotive.FarLoneSails:VehicleMotorEnergy:SetValue+57:
jmp newmem2
returnhere2:





[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
motorWaterReadOnUseAOB+1d: //Okomotive.FarLoneSails:VehicleMotorButtonEngine:FixedUpdate+2ab:
readmem(originalcode_ignorewater,5)
//db F3 0F 10 40 20
//Alt: movss xmm0,[rax+20]
unregistersymbol(originalcode_ignorewater)

///**********************************************///
dealloc(newmem2)
motorWaterWriteOnUseAOB: //Okomotive.FarLoneSails:VehicleMotorEnergy:SetValue+57:
readmem(originalcode2_ignorewater,5)
//db F3 0F 11 68 20
//Alt: movss [rax+20],xmm5
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>103888</ID>
          <Description>"Sprint Key"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
usemono()

aobscanregion(walkSpeedWriteOnGroundAOB,Okomotive.SideScrollerCharacterController:CharacterMotor:WalkingState,Okomotive.SideScrollerCharacterController:CharacterMotor:WalkingState+328,F3 0F 11 ** ** ** ** ** 48 ** ** ** C9 C3)
registersymbol(walkSpeedWriteOnGroundAOB)

label(bSprintKeyPressed)
registersymbol(bSprintKeyPressed)
label(dMoveSpeedMultiplier)
registersymbol(dMoveSpeedMultiplier)

alloc(newmem,2048,walkSpeedWriteOnGroundAOB) //Okomotive.SideScrollerCharacterController:CharacterMotor:WalkingState+30e)
label(returnhere)
label(originalcode_sprintkey)
registersymbol(originalcode_sprintkey)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push rax
mov rax,bSprintKeyPressed
cmp byte ptr [bSprintKeyPressed],1
jne @f
mov rax,dMoveSpeedMultiplier
mulss xmm5,[rax]

@@:
pop rax

originalcode_sprintkey:
readmem(walkSpeedWriteOnGroundAOB,8)
//movss [rsi+000000AC],xmm5

exit:
jmp returnhere

///
bSprintKeyPressed:
dd 0
dMoveSpeedMultiplier:
dd (float)2
///

walkSpeedWriteOnGroundAOB: //Okomotive.SideScrollerCharacterController:CharacterMotor:WalkingState+30e:
jmp newmem
nop
nop
nop
returnhere:

///********************************************************///
aobscanregion(walkSpeedWriteOnJumpAOB,Okomotive.SideScrollerCharacterController:CharacterMotor:JumpingState,Okomotive.SideScrollerCharacterController:CharacterMotor:JumpingState+235,F3 0F 11 ** ** ** ** ** 48 ** ** ** C9 C3)
registersymbol(walkSpeedWriteOnJumpAOB)

alloc(newmem2,2048,walkSpeedWriteOnJumpAOB) //Okomotive.SideScrollerCharacterController:CharacterMotor:JumpingState+1f9)
label(returnhere2)
label(originalcode2_sprintkey)
registersymbol(originalcode2_sprintkey)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push rax
mov rax,bSprintKeyPressed
cmp byte ptr [bSprintKeyPressed],1
jne @f
mov rax,dMoveSpeedMultiplier
mulss xmm5,[rax]

@@:
pop rax

originalcode2_sprintkey:
readmem(walkSpeedWriteOnJumpAOB,8)
//movss [rsi+000000AC],xmm5

exit2:
jmp returnhere2

///

walkSpeedWriteOnJumpAOB: //Okomotive.SideScrollerCharacterController:CharacterMotor:JumpingState+1f9:
jmp newmem2
nop
nop
nop
returnhere2:

///********************************************************///
aobscanregion(walkSpeedWriteOnFallAOB,Okomotive.SideScrollerCharacterController:CharacterMotor:FallingState,Okomotive.SideScrollerCharacterController:CharacterMotor:FallingState+1e7,F3 0F 11 ** ** ** ** ** 0F B6 ** ** ** ** ** 85 C0 0F 84)
registersymbol(walkSpeedWriteOnFallAOB)

alloc(newmem6,2048,walkSpeedWriteOnFallAOB) //Okomotive.SideScrollerCharacterController:CharacterMotor:FallingState+148)
label(returnhere6)
label(originalcode6_sprintkey)
registersymbol(originalcode6_sprintkey)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
push rax
mov rax,bSprintKeyPressed
cmp byte ptr [bSprintKeyPressed],1
jne @f
mov rax,dMoveSpeedMultiplier
mulss xmm5,[rax]

@@:
pop rax

originalcode6_sprintkey:
readmem(walkSpeedWriteOnFallAOB,8)
//movss [rsi+000000AC],xmm5

exit6:
jmp returnhere6

///

walkSpeedWriteOnFallAOB: //Okomotive.SideScrollerCharacterController:CharacterMotor:FallingState+148:
jmp newmem6
nop
nop
nop
returnhere6:

///********************************************************///
label(bEndThread_sprint_key_mem)
registersymbol(bEndThread_sprint_key_mem)

alloc(sprint_key_mem,1024,"FarLoneSails.exe")
registersymbol(sprint_key_mem)
createthread(sprint_key_mem)
label(sprintkeystart)
label(sprintkeyend)
label(sprintkeyexit)

sprint_key_mem:
sub rsp,28

sprintkeystart:
mov rcx,14 //CAPS LOCK key
//push rcx
call GetAsyncKeyState
//add rsp,08
shr ax,#15
mov [bSprintKeyPressed],ax

sprintkeyend:
mov rcx,#100
call Sleep
mov rbx,bEndThread_sprint_key_mem
cmp dword ptr [rbx],1
jne sprintkeystart

sprintkeyexit:
add rsp,28
mov rbx,bEndThread_sprint_key_mem
mov dword ptr [rbx],2
ret

///
bEndThread_sprint_key_mem:
dd 0
///




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
//obtained from SubBeam's ACS script - start//
{$lua}

if( syntaxcheck == false ) then --actual execution
  local starttime = getTickCount()

if readInteger( "bEndThread_sprint_key_mem" ) == 0 then --could be 2 already
  writeInteger( "bEndThread_sprint_key_mem", 1 ) --tell the thread to kill itself
end

while( getTickCount() &lt; starttime + 1000 ) and ( readInteger( "bEndThread_sprint_key_mem" ) ~=2 ) do --wait till it has finished
  sleep( 20 )
end

if( getTickCount() &gt; starttime + 1000 ) then --could happen when the window is shown
  showMessage( 'Disabling the thread failed!' )
  error( 'Thread disabling failed!' )
end
  sleep( 1 )
end

{$asm}
//obtained from SubBeam's ACS script - end//

//bEndThread_sprint_key_mem:
//dd 1

///********************************************************///
dealloc(newmem)
walkSpeedWriteOnGroundAOB: //Okomotive.SideScrollerCharacterController:CharacterMotor:WalkingState+30e:
db F3 0F 11 AE AC 00 00 00
//Alt: movss [rsi+000000AC],xmm5
unregistersymbol(originalcode_sprintkey)

unregistersymbol(bSprintKeyPressed)
unregistersymbol(dMoveSpeedMultiplier)
unregistersymbol(dMoveSpeedMultiplierCal)

///********************************************************///
dealloc(newmem2)
walkSpeedWriteOnJumpAOB: //Okomotive.SideScrollerCharacterController:CharacterMotor:JumpingState+1f9:
readmem(originalcode2_sprintkey,8)
//db F3 0F 11 AE AC 00 00 00
//Alt: movss [rsi+000000AC],xmm5
unregistersymbol(originalcode2_sprintkey)

///********************************************************///
dealloc(newmem6)
walkSpeedWriteOnFallAOB: //Okomotive.SideScrollerCharacterController:CharacterMotor:FallingState+148:
readmem(originalcode6_sprintkey,8)
//db F3 0F 11 AE AC 00 00 00
//Alt: movss [rsi+000000AC],xmm5
unregistersymbol(originalcode6_sprintkey)

///********************************************************///
unregistersymbol(bEndThread_sprint_key_mem)

dealloc(sprint_key_mem)
unregistersymbol(sprint_key_mem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>103894</ID>
              <Description>"CapsLock Key"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>103893</ID>
          <Description>"Fly Keys"</Description>
          <Options moHideChildren="1"/>
          <LastState Activated="1"/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
usemono()

aobscanregion(moveRirYWriteOnFallAOB,Okomotive.SideScrollerCharacterController:CharacterMotor:FallingState,Okomotive.SideScrollerCharacterController:CharacterMotor:FallingState+1e5,F3 0F 11 ** ** ** ** ** F3 0F 10 ** ** ** ** ** F3 0F 5A C0)
registersymbol(moveRirYWriteOnFallAOB)

label(bHoverKeyPressed)
registersymbol(bHoverKeyPressed)
label(bHoverVertSpeed)
registersymbol(bHoverVertSpeed)

alloc(newmem,2048,moveRirYWriteOnFallAOB) //Okomotive.SideScrollerCharacterController:CharacterMotor:FallingState+f6)
label(returnhere)
label(originalcode_hoverkeys)
registersymbol(originalcode_hoverkeys)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov rcx,bHoverKeyPressed
mov r11,bHoverVertSpeed
cmp byte ptr [rcx],1
jne yend

xorps xmm0,xmm0
maxss xmm0,xmm5

@@:
cmp byte ptr [rcx+1],1
jne @f
movss xmm0,[r11]
mov rcx,bSprintKeyPressed
cmp byte ptr [rcx],1
jne yapply
mulss xmm0,[rcx+4]
jmp yapply

@@:
cmp byte ptr [rcx+2],1
jne @f
movss xmm0,[r11]
mulss xmm0,[r11+4]
mov rcx,bSprintKeyPressed
cmp byte ptr [rcx],1
jne yapply
mulss xmm0,[rcx+4]
jmp yapply

yapply:
movss xmm5,xmm0

yend:

originalcode_hoverkeys:
readmem(moveRirYWriteOnFallAOB,8)
//movss [rsi+000000A8],xmm5

exit:
jmp returnhere

///
bHoverKeyPressed:
dd 0
bHoverVertSpeed:
dd (float)0.15
dd (float)-1
///

moveRirYWriteOnFallAOB: //Okomotive.SideScrollerCharacterController:CharacterMotor:FallingState+f6:
jmp newmem
nop
nop
nop
returnhere:

///********************************************************///
label(bEndThread_hover_keys_mem)
registersymbol(bEndThread_hover_keys_mem)

alloc(hover_keys_mem,1024,"FarLoneSails.exe")
registersymbol(hover_keys_mem)
createthread(hover_keys_mem)
label(hoverkeysstart)
label(hoverkeysend)
label(hoverkeysexit)

hover_keys_mem:
sub rsp,28

hoverkeysstart:
mov rcx,20 //SPACEBAR
//push rcx
call GetAsyncKeyState
//add rsp,08
shr ax,#15
mov rcx,bHoverKeyPressed
mov [rcx],al
cmp al,1
jne hoverkeysend

mov rcx,'W'
//push rcx
call GetAsyncKeyState
//add rsp,08
shr ax,#15
mov rcx,bHoverKeyPressed
mov [rcx+1],al
cmp al,1
je hoverkeysend

mov rcx,'S'
//push rcx
call GetAsyncKeyState
//add rsp,08
shr ax,#15
mov rcx,bHoverKeyPressed
mov [rcx+2],al

hoverkeysend:
mov rcx,#100
call Sleep
mov rbx,bEndThread_hover_keys_mem
cmp dword ptr [rbx],1
jne hoverkeysstart

hoverkeysexit:
add rsp,28
mov rbx,bEndThread_hover_keys_mem
mov dword ptr [rbx],2
ret

///
bEndThread_hover_keys_mem:
dd 0
///




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
//obtained from SubBeam's ACS script - start//
{$lua}

if( syntaxcheck == false ) then --actual execution
  local starttime = getTickCount()

if readInteger( "bEndThread_hover_keys_mem" ) == 0 then --could be 2 already
  writeInteger( "bEndThread_hover_keys_mem", 1 ) --tell the thread to kill itself
end

while( getTickCount() &lt; starttime + 1000 ) and ( readInteger( "bEndThread_hover_keys_mem" ) ~=2 ) do --wait till it has finished
  sleep( 20 )
end

if( getTickCount() &gt; starttime + 1000 ) then --could happen when the window is shown
  showMessage( 'Disabling the thread failed!' )
  error( 'Thread disabling failed!' )
end
  sleep( 1 )
end

{$asm}
//obtained from SubBeam's ACS script - end//

//bEndThread_hover_keys_mem:
//dd 1

///********************************************************///
dealloc(newmem)
moveRirYWriteOnFallAOB: //Okomotive.SideScrollerCharacterController:CharacterMotor:FallingState+f6:
readmem(originalcode_hoverkeys,8)
//db F3 0F 11 AE A8 00 00 00
//Alt: movss [rsi+000000A8],xmm5
unregistersymbol(originalcode_hoverkeys)

unregistersymbol(bHoverKeyPressed)
unregistersymbol(bHoverVertSpeed)

///********************************************************///
unregistersymbol(bEndThread_hover_keys_mem)

dealloc(hover_keys_mem)
unregistersymbol(hover_keys_mem)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>103895</ID>
              <Description>"Spacebar, W, S, A, D"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>808080</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>103889</ID>
          <Description>""</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>1</ID>
              <Description>"[Character]"</Description>
              <LastState Value="" RealAddress="08A48000"/>
              <VariableType>Array of byte</VariableType>
              <ByteLength>0</ByteLength>
              <Address>pCharacter</Address>
              <Offsets>
                <Offset>0</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>103890</ID>
      <Description>""</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>103887</ID>
          <Description>"aobt1"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanregion(aobt1,Okomotive.FarLoneSails:VehicleMotorEnergy:SetValue,Okomotive.FarLoneSails:VehicleMotorEnergy:SetValue+66,F3 0F 11 ** ** C9 C3)
registersymbol(aobt1)

 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
unregistersymbol(aobt1)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"walkLock"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>73E0270</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"state"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>73E0218</Address>
          <Offsets>
            <Offset>70</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"walkSpeed"</Description>
          <VariableType>Float</VariableType>
          <Address>73E0218</Address>
          <Offsets>
            <Offset>28</Offset>
            <Offset>30</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"moveDirX"</Description>
          <VariableType>Float</VariableType>
          <Address>73E0218</Address>
          <Offsets>
            <Offset>AC</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanregion(walkSpeedWriteOnGroundAOB,Okomotive.SideScrollerCharacterController:CharacterMotor:WalkingState,Okomotive.SideScrollerCharacterController:CharacterMotor:WalkingState+328,F3 0F 11 ** ** ** ** ** 48 ** ** ** C9 C3)
registersymbol(walkSpeedWriteOnGroundAOB)

label(bSprintKeyPressed)
registersymbol(bSprintKeyPressed)
label(dMoveSpeedMultiplier)
registersymbol(dMoveSpeedMultiplier)

alloc(newmem,2048,walkSpeedWriteOnGroundAOB) //Okomotive.SideScrollerCharacterController:CharacterMotor:WalkingState+30e)
label(returnhere)
label(originalcode_sprintkey)
registersymbol(originalcode_sprintkey)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push rax
mov rax,bSprintKeyPressed
cmp byte ptr [bSprintKeyPressed],1
jne @f
mov rax,dMoveSpeedMultiplier
mulss xmm5,[rax]

@@:
pop rax

originalcode_sprintkey:
readmem(walkSpeedWriteOnGroundAOB,8)
//movss [rsi+000000AC],xmm5

exit:
jmp returnhere

///
bSprintKeyPressed:
dd 0
dMoveSpeedMultiplier:
dd (float)2
///

walkSpeedWriteOnGroundAOB: //Okomotive.SideScrollerCharacterController:CharacterMotor:WalkingState+30e:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
walkSpeedWriteOnGroundAOB: //Okomotive.SideScrollerCharacterController:CharacterMotor:WalkingState+30e:
db F3 0F 11 AE AC 00 00 00
//Alt: movss [rsi+000000AC],xmm5
unregistersymbol(originalcode_sprintkey)

unregistersymbol(bSprintKeyPressed)
unregistersymbol(dMoveSpeedMultiplier)
unregistersymbol(dMoveSpeedMultiplierCal)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>7</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanregion(walkSpeedWriteOnJumpAOB,Okomotive.SideScrollerCharacterController:CharacterMotor:JumpingState,Okomotive.SideScrollerCharacterController:CharacterMotor:JumpingState+235,F3 0F 11 ** ** ** ** ** 48 ** ** ** C9 C3)
registersymbol(walkSpeedWriteOnJumpAOB)

alloc(newmem2,2048,walkSpeedWriteOnJumpAOB) //Okomotive.SideScrollerCharacterController:CharacterMotor:JumpingState+1f9)
label(returnhere2)
label(originalcode2_sprintkey)
registersymbol(originalcode2_sprintkey)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push rax
mov rax,bSprintKeyPressed
cmp byte ptr [bSprintKeyPressed],1
jne @f
mov rax,dMoveSpeedMultiplier
mulss xmm5,[rax]

@@:
pop rax

originalcode2_sprintkey:
readmem(walkSpeedWriteOnJumpAOB,8)
//movss [rsi+000000AC],xmm5

exit2:
jmp returnhere2

///

walkSpeedWriteOnJumpAOB: //Okomotive.SideScrollerCharacterController:CharacterMotor:JumpingState+1f9:
jmp newmem2
nop
nop
nop
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
walkSpeedWriteOnJumpAOB: //Okomotive.SideScrollerCharacterController:CharacterMotor:JumpingState+1f9:
readmem(originalcode2_sprintkey,8)
//db F3 0F 11 AE AC 00 00 00
//Alt: movss [rsi+000000AC],xmm5
unregistersymbol(originalcode2_sprintkey)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>8</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanregion(walkSpeedWriteOnFallAOB,Okomotive.SideScrollerCharacterController:CharacterMotor:FallingState,Okomotive.SideScrollerCharacterController:CharacterMotor:FallingState+1e7,F3 0F 11 ** ** ** ** ** 0F B6 ** ** ** ** ** 85 C0 0F 84)
registersymbol(walkSpeedWriteOnFallAOB)

alloc(newmem6,2048,walkSpeedWriteOnFallAOB) //Okomotive.SideScrollerCharacterController:CharacterMotor:FallingState+148)
label(returnhere6)
label(originalcode6_sprintkey)
registersymbol(originalcode6_sprintkey)
label(exit6)

newmem6: //this is allocated memory, you have read,write,execute access
//place your code here
push rax
mov rax,bSprintKeyPressed
cmp byte ptr [bSprintKeyPressed],1
jne @f
mov rax,dMoveSpeedMultiplier
mulss xmm5,[rax]

@@:
pop rax

originalcode6_sprintkey:
readmem(walkSpeedWriteOnFallAOB,8)
//movss [rsi+000000AC],xmm5

exit6:
jmp returnhere6

///

walkSpeedWriteOnFallAOB: //Okomotive.SideScrollerCharacterController:CharacterMotor:FallingState+148:
jmp newmem6
nop
nop
nop
returnhere6:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem6)
walkSpeedWriteOnFallAOB: //Okomotive.SideScrollerCharacterController:CharacterMotor:FallingState+148:
readmem(originalcode6_sprintkey,8)
//db F3 0F 11 AE AC 00 00 00
//Alt: movss [rsi+000000AC],xmm5
unregistersymbol(originalcode6_sprintkey)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>103882</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(bEndThread_sprint_key_mem)
registersymbol(bEndThread_sprint_key_mem)

alloc(sprint_key_mem,1024,"FarLoneSails.exe")
registersymbol(sprint_key_mem)
createthread(sprint_key_mem)
label(sprintkeystart)
label(sprintkeyend)
label(sprintkeyexit)

sprint_key_mem:
sub rsp,28

sprintkeystart:
mov rcx,14 //CAPS LOCK key
//push rcx
call GetAsyncKeyState
//add rsp,08
shr ax,#15
mov [bSprintKeyPressed],ax

sprintkeyend:
mov rcx,#100
call Sleep
mov rbx,bEndThread_sprint_key_mem
cmp dword ptr [rbx],1
jne sprintkeystart

sprintkeyexit:
add rsp,28
mov rbx,bEndThread_sprint_key_mem
mov dword ptr [rbx],2
ret

///
bEndThread_sprint_key_mem:
dd 0
///


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
//obtained from SubBeam's ACS script - start//
{$lua}

if( syntaxcheck == false ) then --actual execution
  local starttime = getTickCount()

if readInteger( "bEndThread_sprint_key_mem" ) == 0 then --could be 2 already
  writeInteger( "bEndThread_sprint_key_mem", 1 ) --tell the thread to kill itself
end

while( getTickCount() &lt; starttime + 1000 ) and ( readInteger( "bEndThread_sprint_key_mem" ) ~=2 ) do --wait till it has finished
  sleep( 20 )
end

if( getTickCount() &gt; starttime + 1000 ) then --could happen when the window is shown
  showMessage( 'Disabling the thread failed!' )
  error( 'Thread disabling failed!' )
end
  sleep( 1 )
end

{$asm}
//obtained from SubBeam's ACS script - end//

//bEndThread_sprint_key_mem:
//dd 1

///********************************************************///
unregistersymbol(bEndThread_sprint_key_mem)

dealloc(sprint_key_mem)
unregistersymbol(sprint_key_mem)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>103885</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem11,2048,Okomotive.SideScrollerCharacterController:CharacterMotor:JumpingState+15)
label(returnhere11)
label(originalcode11)
label(exit11)

newmem11: //this is allocated memory, you have read,write,execute access
//place your code here
mov rax,bSprintKeyPressed
cmp byte ptr [bSprintKeyPressed],1
jne @f
mov rax,dMoveSpeedMultiplier
mulss xmm0,[rax]

@@:

originalcode11:
cvtss2sd xmm0,xmm0
cvtsd2ss xmm5,xmm0

exit11:
jmp returnhere11

///

Okomotive.SideScrollerCharacterController:CharacterMotor:JumpingState+15:
jmp newmem11
nop
nop
nop
returnhere11:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem11)
Okomotive.SideScrollerCharacterController:CharacterMotor:JumpingState+15:
db F3 0F 5A C0 F2 0F 5A E8
//Alt: cvtss2sd xmm0,xmm0
//Alt: cvtsd2ss xmm5,xmm0
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>103886</ID>
                  <Description>"Auto Assemble script"</Description>
                  <LastState/>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem17,2048,Okomotive.SideScrollerCharacterController:CharacterMotor:FallingState+2d) 
label(returnhere17)
label(originalcode17)
label(exit17)

newmem17: //this is allocated memory, you have read,write,execute access
//place your code here
mov rax,bSprintKeyPressed
cmp byte ptr [bSprintKeyPressed],1
jne @f
mov rax,dMoveSpeedMultiplier
mulss xmm2,[rax]

originalcode17:
cvtss2sd xmm2,xmm2
divsd xmm1,xmm2

exit17:
jmp returnhere17

///

Okomotive.SideScrollerCharacterController:CharacterMotor:FallingState+2d:
jmp newmem17
nop
nop
nop
returnhere17:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem17)
Okomotive.SideScrollerCharacterController:CharacterMotor:FallingState+2d:
db F3 0F 5A D2 F2 0F 5E CA
//Alt: cvtss2sd xmm2,xmm2
//Alt: divsd xmm1,xmm2
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>1772</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(bEndThread_sprint_key_mem)
registersymbol(bEndThread_sprint_key_mem)
label(dMoveSpeedMultiplierUpLimit)
label(dMoveSpeedMultiplierDownLimit)

alloc(sprint_key_mem,1024,"FarLoneSails.exe")
registersymbol(sprint_key_mem)
createthread(sprint_key_mem)
label(sprintkeystart)
label(sprintkeyend)
label(sprintkeyexit)

sprint_key_mem:
sub rsp,28

sprintkeystart:
mov rcx,14 //CAPS LOCK key
//push rcx
call GetAsyncKeyState
//add rsp,08
shr ax,#15

//

mov rbx,dMoveSpeedMultiplierCal
movss xmm1,[rbx+c]
test al,al
jnz @f
mulss xmm1,[rbx+10]

@@:
movss [rbx+4],xmm1

@@:
movss xmm1,[rbx]
comiss xmm1,[rbx+4]
jb incmsmc
ja decmsmc
jmp setmsmc

incmsmc:
addss xmm1,[rbx+8]
minss xmm1,[rbx+4]
jmp setmsmc

decmsmc:
subss xmm1,[rbx+8]
maxss xmm1,[rbx+4]
jmp setmsmc

setmsmc:
movss [rbx],xmm1

@@:
mov rcx,dMoveSpeedMultiplier
movss xmm1,[rcx]
addss xmm1,[rbx]

mov rax,dMoveSpeedMultiplierDownLimit
maxss xmm1,[rax]

mov rax,dMoveSpeedMultiplierUpLimit
minss xmm1,[rax]

setmsm:
movss [rcx],xmm1

//

sprintkeyend:
mov rcx,#100
call Sleep
mov rbx,bEndThread_sprint_key_mem
cmp dword ptr [rbx],1
jne sprintkeystart

sprintkeyexit:
add rsp,28
mov rbx,bEndThread_sprint_key_mem
mov dword ptr [rbx],2
ret

///
bEndThread_sprint_key_mem:
dd 0
dMoveSpeedMultiplierUpLimit:
dd (float)2
dMoveSpeedMultiplierDownLimit:
dd (float)1
///


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
//obtained from SubBeam's ACS script - start//
{$lua}

if( syntaxcheck == false ) then --actual execution
  local starttime = getTickCount()

if readInteger( "bEndThread_sprint_key_mem" ) == 0 then --could be 2 already
  writeInteger( "bEndThread_sprint_key_mem", 1 ) --tell the thread to kill itself
end

while( getTickCount() &lt; starttime + 1000 ) and ( readInteger( "bEndThread_sprint_key_mem" ) ~=2 ) do --wait till it has finished
  sleep( 20 )
end

if( getTickCount() &gt; starttime + 1000 ) then --could happen when the window is shown
  showMessage( 'Disabling the thread failed!' )
  error( 'Thread disabling failed!' )
end
  sleep( 1 )
end

{$asm}
//obtained from SubBeam's ACS script - end//

//bEndThread_sprint_key_mem:
//dd 1

///********************************************************///
unregistersymbol(bEndThread_sprint_key_mem)

dealloc(sprint_key_mem)
unregistersymbol(sprint_key_mem)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1773</ID>
          <Description>"dMoveSpeedMultiplier"</Description>
          <LastState Value="2" RealAddress="05D60042"/>
          <VariableType>Float</VariableType>
          <Address>dMoveSpeedMultiplier</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>1774</ID>
          <Description>"dMoveSpeedMultiplierCal"</Description>
          <VariableType>Float</VariableType>
          <Address>dMoveSpeedMultiplierCal</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>103883</ID>
          <Description>"moveDirY"</Description>
          <VariableType>Float</VariableType>
          <Address>73E0218</Address>
          <Offsets>
            <Offset>A8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>103884</ID>
          <Description>"jumpHeight"</Description>
          <VariableType>Float</VariableType>
          <Address>73E0218</Address>
          <Offsets>
            <Offset>34</Offset>
            <Offset>30</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>103891</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanregion(moveRirYWriteOnFallAOB,Okomotive.SideScrollerCharacterController:CharacterMotor:FallingState,Okomotive.SideScrollerCharacterController:CharacterMotor:FallingState+1e5,F3 0F 11 ** ** ** ** ** F3 0F 10 ** ** ** ** ** F3 0F 5A C0)
registersymbol(moveRirYWriteOnFallAOB)

label(bHoverKeyPressed)
registersymbol(bHoverKeyPressed)
label(bHoverVertSpeed)
registersymbol(bHoverVertSpeed)

alloc(newmem,2048,moveRirYWriteOnFallAOB) //Okomotive.SideScrollerCharacterController:CharacterMotor:FallingState+f6)
label(returnhere)
label(originalcode_hoverkeys)
registersymbol(originalcode_hoverkeys)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
mov rcx,bHoverKeyPressed
mov r11,bHoverVertSpeed
cmp byte ptr [rcx],1
jne yend

xorps xmm0,xmm0
maxss xmm0,xmm5

@@:
cmp byte ptr [rcx+1],1
jne @f
movss xmm0,[r11]
mov rcx,bSprintKeyPressed
cmp byte ptr [rcx],1
jne yapply
mulss xmm0,[rcx+4]
jmp yapply

@@:
cmp byte ptr [rcx+2],1
jne @f
movss xmm0,[r11]
mulss xmm0,[r11+4]
mov rcx,bSprintKeyPressed
cmp byte ptr [rcx],1
jne yapply
mulss xmm0,[rcx+4]
jmp yapply

yapply:
movss xmm5,xmm0

yend:

originalcode_hoverkeys:
readmem(moveRirYWriteOnFallAOB,8)
//movss [rsi+000000A8],xmm5

exit:
jmp returnhere

///
bHoverKeyPressed:
dd 0
bHoverVertSpeed:
dd (float)0.15
dd (float)-1
///

moveRirYWriteOnFallAOB: //Okomotive.SideScrollerCharacterController:CharacterMotor:FallingState+f6:
jmp newmem
nop
nop
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
moveRirYWriteOnFallAOB: //Okomotive.SideScrollerCharacterController:CharacterMotor:FallingState+f6:
readmem(originalcode_hoverkeys,8)
//db F3 0F 11 AE A8 00 00 00
//Alt: movss [rsi+000000A8],xmm5
unregistersymbol(originalcode_hoverkeys)

unregistersymbol(bHoverKeyPressed)
unregistersymbol(bHoverVertSpeed)
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>103892</ID>
              <Description>"Auto Assemble script"</Description>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
label(bEndThread_hover_keys_mem)
registersymbol(bEndThread_hover_keys_mem)

alloc(hover_keys_mem,1024,"FarLoneSails.exe")
registersymbol(hover_keys_mem)
createthread(hover_keys_mem)
label(hoverkeysstart)
label(hoverkeysend)
label(hoverkeysexit)

hover_keys_mem:
sub rsp,28

hoverkeysstart:
mov rcx,20 //SPACEBAR
//push rcx
call GetAsyncKeyState
//add rsp,08
shr ax,#15
mov rcx,bHoverKeyPressed
mov [rcx],al
cmp al,1
jne hoverkeysend

mov rcx,'W'
//push rcx
call GetAsyncKeyState
//add rsp,08
shr ax,#15
mov rcx,bHoverKeyPressed
mov [rcx+1],al
cmp al,1
je hoverkeysend

mov rcx,'S'
//push rcx
call GetAsyncKeyState
//add rsp,08
shr ax,#15
mov rcx,bHoverKeyPressed
mov [rcx+2],al

hoverkeysend:
mov rcx,#100
call Sleep
mov rbx,bEndThread_hover_keys_mem
cmp dword ptr [rbx],1
jne hoverkeysstart

hoverkeysexit:
add rsp,28
mov rbx,bEndThread_hover_keys_mem
mov dword ptr [rbx],2
ret

///
bEndThread_hover_keys_mem:
dd 0
///




 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
//obtained from SubBeam's ACS script - start//
{$lua}

if( syntaxcheck == false ) then --actual execution
  local starttime = getTickCount()

if readInteger( "bEndThread_hover_keys_mem" ) == 0 then --could be 2 already
  writeInteger( "bEndThread_hover_keys_mem", 1 ) --tell the thread to kill itself
end

while( getTickCount() &lt; starttime + 1000 ) and ( readInteger( "bEndThread_hover_keys_mem" ) ~=2 ) do --wait till it has finished
  sleep( 20 )
end

if( getTickCount() &gt; starttime + 1000 ) then --could happen when the window is shown
  showMessage( 'Disabling the thread failed!' )
  error( 'Thread disabling failed!' )
end
  sleep( 1 )
end

{$asm}
//obtained from SubBeam's ACS script - end//

//bEndThread_hover_keys_mem:
//dd 1

///********************************************************///
unregistersymbol(bEndThread_hover_keys_mem)

dealloc(hover_keys_mem)
unregistersymbol(hover_keys_mem)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>103896</ID>
          <Description>"value"</Description>
          <VariableType>Float</VariableType>
          <Address>1C988400</Address>
          <Offsets>
            <Offset>20</Offset>
            <Offset>40</Offset>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>103897</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
Okomotive.FarLoneSails:VehicleMotorButtonEngine:FixedUpdate+2ce:
db EB


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
Okomotive.FarLoneSails:VehicleMotorButtonEngine:FixedUpdate+2ce:
db 7A
//Alt: jp
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>103898</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanregion(motorWaterReadOnUseAOB,Okomotive.FarLoneSails:VehicleMotorButtonEngine:FixedUpdate,Okomotive.FarLoneSails:VehicleMotorButtonEngine:FixedUpdate+424,0F 82 ** ** ** ** 48 ** ** ** ** ** ** 48 8B C8 83 ** ** 48 ** ** ** 48 ** ** 83 ** ** F3 0F 10 ** ** F3 0F 5A C0 F2 0F 5A E8 F3 0F 11 ** ** F3 0F 10 ** ** F3 0F 5A C0 66 ** ** ** 66 ** ** ** 7A)
registersymbol(motorWaterReadOnUseAOB)

alloc(newmem,2048,motorWaterReadOnUseAOB+1d) //Okomotive.FarLoneSails:VehicleMotorButtonEngine:FixedUpdate+2ab)
label(returnhere)
label(originalcode_ignorewater)
registersymbol(originalcode_ignorewater)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
push rax
mov eax,(float)10
movd xmm0,eax
pop eax
readmem(motorWaterReadOnUseAOB+1d,2)
db 5F
readmem(motorWaterReadOnUseAOB+20,2)
//maxss xmm0,[rax+20]
readmem(motorWaterReadOnUseAOB+1d,2)
db 11
readmem(motorWaterReadOnUseAOB+20,2)
//movss [rax+20],xmm0

originalcode_ignorewater:
readmem(motorWaterReadOnUseAOB+1d,5)
//movss xmm0,[rax+20]

exit:
jmp returnhere

///

motorWaterReadOnUseAOB+1d: //Okomotive.FarLoneSails:VehicleMotorButtonEngine:FixedUpdate+2ab:
jmp newmem
returnhere:



 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
motorWaterReadOnUseAOB+1d: //Okomotive.FarLoneSails:VehicleMotorButtonEngine:FixedUpdate+2ab:
readmem(originalcode_ignorewater,5)
//db F3 0F 10 40 20
//Alt: movss xmm0,[rax+20]
unregistersymbol(originalcode_ignorewater)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>103899</ID>
          <Description>"Auto Assemble script"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
aobscanregion(motorWaterWriteOnUseAOB,Okomotive.FarLoneSails:VehicleMotorEnergy:SetValue,Okomotive.FarLoneSails:VehicleMotorEnergy:SetValue+66,F3 0F 11 ** ** C9 C3)
registersymbol(motorWaterWriteOnUseAOB)

alloc(newmem2,2048,motorWaterWriteOnUseAOB) //Okomotive.FarLoneSails:VehicleMotorEnergy:SetValue+57)
label(returnhere2)
label(originalcode2_ignorewater)
registersymbol(originalcode2_ignorewater)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here
push rax
mov eax,(float)10
movd xmm15,eax
pop rax
maxss xmm5,xmm15

originalcode2_ignorewater:
readmem(motorWaterWriteOnUseAOB,5)
//movss [rax+20],xmm5

exit2:
jmp returnhere2

///

motorWaterWriteOnUseAOB: //Okomotive.FarLoneSails:VehicleMotorEnergy:SetValue+57:
jmp newmem2
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
motorWaterWriteOnUseAOB: //Okomotive.FarLoneSails:VehicleMotorEnergy:SetValue+57:
readmem(originalcode2_ignorewater,5)
//db F3 0F 11 68 20
//Alt: movss [rax+20],xmm5
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>103900</ID>
          <Description>"value"</Description>
          <VariableType>Float</VariableType>
          <Address>1C926CC0</Address>
          <Offsets>
            <Offset>20</Offset>
            <Offset>40</Offset>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>103901</ID>
          <Description>"value"</Description>
          <LastState Value="73.30989075" RealAddress="08A817C8"/>
          <VariableType>Float</VariableType>
          <Address>8A82B80</Address>
          <Offsets>
            <Offset>20</Offset>
            <Offset>40</Offset>
            <Offset>10</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Structures StructVersion="2">
    <Structure Name="Character" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="24" Vartype="Pointer" Bytesize="8" Description="onTake" DisplayMethod="Unsigned Integer"/>
        <Element Offset="32" Vartype="Pointer" Bytesize="8" Description="onInVehicle" DisplayMethod="Unsigned Integer"/>
        <Element Offset="40" Vartype="Pointer" Bytesize="8" Description="onOutVehicle" DisplayMethod="Unsigned Integer"/>
        <Element Offset="48" Vartype="Pointer" Bytesize="8" Description="onDyingStart" DisplayMethod="Unsigned Integer"/>
        <Element Offset="56" Vartype="Pointer" Bytesize="8" Description="onDyingStop" DisplayMethod="Unsigned Integer"/>
        <Element Offset="64" Vartype="Pointer" Bytesize="8" Description="onDeathStart" DisplayMethod="Unsigned Integer"/>
        <Element Offset="72" Vartype="Pointer" Bytesize="8" Description="onDeathStop" DisplayMethod="Unsigned Integer"/>
        <Element Offset="80" Vartype="Pointer" Bytesize="8" Description="onEnterWater" DisplayMethod="Unsigned Integer"/>
        <Element Offset="88" Vartype="Pointer" Bytesize="8" Description="onExitWater" DisplayMethod="Unsigned Integer"/>
        <Element Offset="96" Vartype="Pointer" Bytesize="8" Description="meshCharacter" DisplayMethod="Unsigned Integer"/>
        <Element Offset="104" Vartype="Pointer" Bytesize="8" Description="animator" DisplayMethod="Unsigned Integer"/>
        <Element Offset="112" Vartype="Pointer" Bytesize="8" Description="itemPosTransform" DisplayMethod="Unsigned Integer"/>
        <Element Offset="120" Vartype="Pointer" Bytesize="8" Description="characterSound" DisplayMethod="Unsigned Integer"/>
        <Element Offset="128" Vartype="Pointer" Bytesize="8" Description="holdingItem" DisplayMethod="Unsigned Integer"/>
        <Element Offset="136" Vartype="Pointer" Bytesize="8" Description="itemLayer" DisplayMethod="Unsigned Integer"/>
        <Element Offset="144" Vartype="Pointer" Bytesize="8" Description="currentParent" DisplayMethod="Unsigned Integer"/>
        <Element Offset="152" Vartype="Pointer" Bytesize="8" Description="nearbyItems" DisplayMethod="Unsigned Integer"/>
        <Element Offset="160" Vartype="Pointer" Bytesize="8" Description="rope" DisplayMethod="Unsigned Integer"/>
        <Element Offset="168" Vartype="Pointer" Bytesize="8" Description="characterMotor" DisplayMethod="Unsigned Integer">
          <Structure Name="CharacterMotor" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="24" Vartype="Pointer" Bytesize="8" Description="settings" DisplayMethod="Unsigned Integer"/>
              <Element Offset="32" Vartype="Pointer" Bytesize="8" Description="animatedBody" DisplayMethod="Unsigned Integer"/>
              <Element Offset="40" Vartype="Pointer" Bytesize="8" Description="raycaster" DisplayMethod="Unsigned Integer"/>
              <Element Offset="48" Vartype="Pointer" Bytesize="8" Description="currentSettings" DisplayMethod="Unsigned Integer">
                <Structure Name="CharacterMotorSetting" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
                  <Elements>
                    <Element Offset="24" Vartype="Pointer" Bytesize="8" Description="jumpCurve" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="32" Vartype="Pointer" Bytesize="8" Description="fallCurve" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="40" Vartype="Float" Bytesize="4" Description="walkSpeed" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="44" Vartype="Float" Bytesize="4" Description="walkAcceleration" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="48" Vartype="Float" Bytesize="4" Description="walkFriction" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="52" Vartype="Float" Bytesize="4" Description="jumpHeight" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="56" Vartype="Float" Bytesize="4" Description="jumpAcceleration" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="60" Vartype="Float" Bytesize="4" Description="jumpWalkMultiplicator" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="64" Vartype="Float" Bytesize="4" Description="fallAcceleration" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="68" Vartype="Float" Bytesize="4" Description="parachuteLimit" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="72" Vartype="Float" Bytesize="4" Description="slopeLimit" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="76" Vartype="4 Bytes" Bytesize="4" Description="slopeSpeedMap" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="92" Vartype="Float" Bytesize="4" Description="turnSpeed" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="96" Vartype="Float" Bytesize="4" Description="slidingSpeed" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="100" Vartype="Float" Bytesize="4" Description="zCorrectionSpeed" DisplayMethod="Unsigned Integer"/>
                  </Elements>
                </Structure>
              </Element>
              <Element Offset="56" Vartype="Pointer" Bytesize="8" Description="controls" DisplayMethod="Unsigned Integer"/>
              <Element Offset="64" Vartype="Pointer" Bytesize="8" Description="externalForces" DisplayMethod="Unsigned Integer"/>
              <Element Offset="72" Vartype="Pointer" Bytesize="8" Description="onCharacterState" DisplayMethod="Unsigned Integer"/>
              <Element Offset="80" Vartype="Pointer" Bytesize="8" Description="onCharacterStuck" DisplayMethod="Unsigned Integer"/>
              <Element Offset="88" Vartype="Pointer" Bytesize="8" Description="turnRoutine" DisplayMethod="Unsigned Integer"/>
              <Element Offset="96" Vartype="Pointer" Bytesize="8" Description="transform" DisplayMethod="Unsigned Integer"/>
              <Element Offset="104" Vartype="Pointer" Bytesize="8" Description="rigidbody" DisplayMethod="Unsigned Integer"/>
              <Element Offset="112" Vartype="4 Bytes" Bytesize="4" Description="state" DisplayMethod="Unsigned Integer"/>
              <Element Offset="116" Vartype="4 Bytes" Bytesize="4" Description="startRot" DisplayMethod="Unsigned Integer"/>
              <Element Offset="132" Vartype="4 Bytes" Bytesize="4" Description="lastPos" DisplayMethod="Unsigned Integer"/>
              <Element Offset="144" Vartype="4 Bytes" Bytesize="4" Description="lastPosLocal" DisplayMethod="Unsigned Integer"/>
              <Element Offset="156" Vartype="4 Bytes" Bytesize="4" Description="lastState" DisplayMethod="Unsigned Integer"/>
              <Element Offset="160" Vartype="Byte" Bytesize="1" Description="isGrounded" DisplayMethod="Unsigned Integer"/>
              <Element Offset="164" Vartype="Float" Bytesize="4" Description="slidingAngle" DisplayMethod="Unsigned Integer"/>
              <Element Offset="168" Vartype="Float" Bytesize="4" Description="moveDirY" DisplayMethod="Unsigned Integer"/>
              <Element Offset="172" Vartype="Float" Bytesize="4" Description="moveDirX" DisplayMethod="Unsigned Integer"/>
              <Element Offset="176" Vartype="Float" Bytesize="4" Description="moveDirXAcceleration" DisplayMethod="Unsigned Integer"/>
              <Element Offset="180" Vartype="Float" Bytesize="4" Description="moveDirZ" DisplayMethod="Unsigned Integer"/>
              <Element Offset="184" Vartype="4 Bytes" Bytesize="4" Description="moveDir" DisplayMethod="Unsigned Integer"/>
              <Element Offset="196" Vartype="4 Bytes" Bytesize="4" Description="velocity" DisplayMethod="Unsigned Integer"/>
              <Element Offset="208" Vartype="4 Bytes" Bytesize="4" Description="lookDir" DisplayMethod="Unsigned Integer"/>
              <Element Offset="220" Vartype="Byte" Bytesize="1" Description="parachuteMode" DisplayMethod="Unsigned Integer"/>
              <Element Offset="224" Vartype="Float" Bytesize="4" Description="jumpHeightCounter" DisplayMethod="Unsigned Integer"/>
              <Element Offset="228" Vartype="Float" Bytesize="4" Description="idleCounter" DisplayMethod="Unsigned Integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="176" Vartype="Pointer" Bytesize="8" Description="currentGround" DisplayMethod="Unsigned Integer"/>
        <Element Offset="184" Vartype="Pointer" Bytesize="8" Description="surface" DisplayMethod="Unsigned Integer"/>
        <Element Offset="192" Vartype="Pointer" Bytesize="8" Description="toWindLayerRoutine" DisplayMethod="Unsigned Integer"/>
        <Element Offset="200" Vartype="Pointer" Bytesize="8" Description="tmpCurrentParentVelocity" DisplayMethod="Unsigned Integer"/>
        <Element Offset="208" Vartype="Pointer" Bytesize="8" Description="tmpNearestItem" DisplayMethod="Unsigned Integer"/>
        <Element Offset="216" Vartype="Pointer" Bytesize="8" Description="tmpCurrentCollider" DisplayMethod="Unsigned Integer"/>
        <Element Offset="224" Vartype="Pointer" Bytesize="8" Description="tmpItem" DisplayMethod="Unsigned Integer"/>
        <Element Offset="232" Vartype="Pointer" Bytesize="8" Description="transform" DisplayMethod="Unsigned Integer"/>
        <Element Offset="240" Vartype="Pointer" Bytesize="8" Description="rigidbody" DisplayMethod="Unsigned Integer"/>
        <Element Offset="248" Vartype="4 Bytes" Bytesize="4" Description="position" DisplayMethod="Unsigned Integer"/>
        <Element Offset="252" Vartype="Byte" Bytesize="1" Description="insideVehicle" DisplayMethod="Unsigned Integer"/>
        <Element Offset="256" Vartype="4 Bytes" Bytesize="4" Description="walkLock" DisplayMethod="Unsigned Integer"/>
        <Element Offset="260" Vartype="4 Bytes" Bytesize="4" Description="pNr" DisplayMethod="Unsigned Integer"/>
        <Element Offset="264" Vartype="Float" Bytesize="4" Description="maxVehicleDistance" DisplayMethod="Unsigned Integer"/>
        <Element Offset="268" Vartype="Float" Bytesize="4" Description="ropePushBackMultiplier" DisplayMethod="Unsigned Integer"/>
        <Element Offset="272" Vartype="4 Bytes" Bytesize="4" Description="vehicleLayer" DisplayMethod="Unsigned Integer"/>
        <Element Offset="276" Vartype="4 Bytes" Bytesize="4" Description="ignoreLayer" DisplayMethod="Unsigned Integer"/>
        <Element Offset="280" Vartype="4 Bytes" Bytesize="4" Description="ghostLayer" DisplayMethod="Unsigned Integer"/>
        <Element Offset="284" Vartype="Float" Bytesize="4" Description="windSpeed" DisplayMethod="Unsigned Integer"/>
        <Element Offset="288" Vartype="Byte" Bytesize="1" Description="isParentActive" DisplayMethod="Unsigned Integer"/>
        <Element Offset="292" Vartype="4 Bytes" Bytesize="4" Description="startScene" DisplayMethod="Unsigned Integer"/>
        <Element Offset="296" Vartype="4 Bytes" Bytesize="4" Description="tmpParentForce" DisplayMethod="Unsigned Integer"/>
        <Element Offset="308" Vartype="4 Bytes" Bytesize="4" Description="tmpInterpolateRopePush" DisplayMethod="Unsigned Integer"/>
        <Element Offset="320" Vartype="Float" Bytesize="4" Description="tmpInterpolateWalkPush" DisplayMethod="Unsigned Integer"/>
        <Element Offset="324" Vartype="Float" Bytesize="4" Description="tmpInterpolateWindSpeed" DisplayMethod="Unsigned Integer"/>
        <Element Offset="328" Vartype="Float" Bytesize="4" Description="tmpInterpolateTakeSpeed" DisplayMethod="Unsigned Integer"/>
        <Element Offset="332" Vartype="4 Bytes" Bytesize="4" Description="lastLookDir" DisplayMethod="Unsigned Integer"/>
        <Element Offset="344" Vartype="Float" Bytesize="4" Description="idleTime" DisplayMethod="Unsigned Integer"/>
        <Element Offset="348" Vartype="Float" Bytesize="4" Description="idleWaitTime" DisplayMethod="Unsigned Integer"/>
        <Element Offset="352" Vartype="Float" Bytesize="4" Description="currentIdleVariation" DisplayMethod="Unsigned Integer"/>
      </Elements>
    </Structure>
    <Structure Name="Vehicle" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="24" Vartype="Pointer" Bytesize="8" Description="onPostLoading" DisplayMethod="Unsigned Integer"/>
        <Element Offset="32" Vartype="Pointer" Bytesize="8" Description="health" DisplayMethod="Unsigned Integer">
          <Structure Name="VehicleHealth" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="24" Vartype="Pointer" Bytesize="8" Description="slots" DisplayMethod="Unsigned Integer"/>
              <Element Offset="32" Vartype="Pointer" Bytesize="8" Description="onCalcValue" DisplayMethod="Unsigned Integer"/>
              <Element Offset="40" Vartype="Pointer" Bytesize="8" Description="yieldLoop" DisplayMethod="Unsigned Integer"/>
              <Element Offset="48" Vartype="Pointer" Bytesize="8" Description="updateRoutine" DisplayMethod="Unsigned Integer"/>
              <Element Offset="56" Vartype="Pointer" Bytesize="8" Description="onHealthEmptyRoutine" DisplayMethod="Unsigned Integer"/>
              <Element Offset="64" Vartype="Pointer" Bytesize="8" Description="_activeModuleInfo" DisplayMethod="Unsigned Integer"/>
              <Element Offset="72" Vartype="Float" Bytesize="4" Description="value" DisplayMethod="Unsigned Integer"/>
              <Element Offset="76" Vartype="Float" Bytesize="4" Description="updateFrequency" DisplayMethod="Unsigned Integer"/>
              <Element Offset="80" Vartype="Byte" Bytesize="1" Description="gameOverFlag" DisplayMethod="Unsigned Integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="40" Vartype="Pointer" Bytesize="8" Description="front" DisplayMethod="Unsigned Integer"/>
        <Element Offset="48" Vartype="Pointer" Bytesize="8" Description="back" DisplayMethod="Unsigned Integer"/>
        <Element Offset="56" Vartype="Pointer" Bytesize="8" Description="pivot" DisplayMethod="Unsigned Integer"/>
        <Element Offset="64" Vartype="Pointer" Bytesize="8" Description="modules" DisplayMethod="Unsigned Integer">
          <Structure Name="VehicleModules" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
            <Elements>
              <Element Offset="16" Vartype="Pointer" Bytesize="8" Description="motor" DisplayMethod="Unsigned Integer">
                <Structure Name="VehicleMotor" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
                  <Elements>
                    <Element Offset="48" Vartype="Pointer" Bytesize="8" Description="onIndicateNoEnergy" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="56" Vartype="Pointer" Bytesize="8" Description="onMotorHiccup" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="64" Vartype="Pointer" Bytesize="8" Description="energy" DisplayMethod="Unsigned Integer">
                      <Structure Name="VehicleMotorEnergy" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
                        <Elements>
                          <Element Offset="16" Vartype="Pointer" Bytesize="8" Description="onNoEnergy" DisplayMethod="Unsigned Integer"/>
                          <Element Offset="24" Vartype="Pointer" Bytesize="8" Description="onReduceEnergy" DisplayMethod="Unsigned Integer"/>
                          <Element Offset="32" Vartype="Float" Bytesize="4" Description="value" DisplayMethod="Unsigned Integer"/>
                          <Element Offset="36" Vartype="Byte" Bytesize="1" Description="noEnergyFlag" DisplayMethod="Unsigned Integer"/>
                        </Elements>
                      </Structure>
                    </Element>
                    <Element Offset="72" Vartype="Pointer" Bytesize="8" Description="motorForce" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="80" Vartype="Pointer" Bytesize="8" Description="steam" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="88" Vartype="Pointer" Bytesize="8" Description="debug" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="96" Vartype="Pointer" Bytesize="8" Description="buttonEngine" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="104" Vartype="Pointer" Bytesize="8" Description="buttonBreak" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="112" Vartype="Pointer" Bytesize="8" Description="wheels" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="120" Vartype="Pointer" Bytesize="8" Description="tacho" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="128" Vartype="Pointer" Bytesize="8" Description="moveQueue" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="136" Vartype="4 Bytes" Bytesize="4" Description="actualMoveUnit" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="148" Vartype="Float" Bytesize="4" Description="hValue" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="152" Vartype="Float" Bytesize="4" Description="hValueExtern" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="156" Vartype="Float" Bytesize="4" Description="hValueLast" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="160" Vartype="Float" Bytesize="4" Description="motorMovementForce" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="164" Vartype="4 Bytes" Bytesize="4" Description="iForceUnit" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="168" Vartype="Float" Bytesize="4" Description="hiccupCooldown" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="172" Vartype="Float" Bytesize="4" Description="lastHiccup" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="176" Vartype="Float" Bytesize="4" Description="startedEngine" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="180" Vartype="Byte" Bytesize="1" Description="increaseSteamGeneration" DisplayMethod="Unsigned Integer"/>
                  </Elements>
                </Structure>
              </Element>
              <Element Offset="24" Vartype="Pointer" Bytesize="8" Description="sail" DisplayMethod="Unsigned Integer"/>
              <Element Offset="32" Vartype="Pointer" Bytesize="8" Description="lift" DisplayMethod="Unsigned Integer"/>
              <Element Offset="40" Vartype="Pointer" Bytesize="8" Description="oven" DisplayMethod="Unsigned Integer">
                <Structure Name="VehicleOven" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
                  <Elements>
                    <Element Offset="48" Vartype="Pointer" Bytesize="8" Description="settingWorking" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="56" Vartype="Pointer" Bytesize="8" Description="settingDamaged" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="64" Vartype="Pointer" Bytesize="8" Description="settingDefect" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="72" Vartype="Pointer" Bytesize="8" Description="onLiftMoveUp" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="80" Vartype="Pointer" Bytesize="8" Description="onLiftUp" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="88" Vartype="Pointer" Bytesize="8" Description="onLiftMoveDown" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="96" Vartype="Pointer" Bytesize="8" Description="onLiftDown" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="104" Vartype="Pointer" Bytesize="8" Description="onStartBurning" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="112" Vartype="Pointer" Bytesize="8" Description="lift" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="120" Vartype="Pointer" Bytesize="8" Description="collisionCheck" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="128" Vartype="Pointer" Bytesize="8" Description="animationIn" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="136" Vartype="Pointer" Bytesize="8" Description="animationOut" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="144" Vartype="Pointer" Bytesize="8" Description="animationInSecond" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="152" Vartype="Pointer" Bytesize="8" Description="animationOutSecond" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="160" Vartype="Pointer" Bytesize="8" Description="liftHydra" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="168" Vartype="Pointer" Bytesize="8" Description="topBlockCollider" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="176" Vartype="Pointer" Bytesize="8" Description="item" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="184" Vartype="Pointer" Bytesize="8" Description="inOvenObjects" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="192" Vartype="Pointer" Bytesize="8" Description="ovenProcessRoutine" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="200" Vartype="Pointer" Bytesize="8" Description="settings" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="208" Vartype="Pointer" Bytesize="8" Description="barrel" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="216" Vartype="4 Bytes" Bytesize="4" Description="startPos" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="228" Vartype="Byte" Bytesize="1" Description="brokenAtEnd" DisplayMethod="Unsigned Integer"/>
                  </Elements>
                </Structure>
              </Element>
              <Element Offset="48" Vartype="Pointer" Bytesize="8" Description="hydrant" DisplayMethod="Unsigned Integer">
                <Structure Name="VehicleHydrant" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
                  <Elements>
                    <Element Offset="48" Vartype="Pointer" Bytesize="8" Description="rope" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="56" Vartype="Pointer" Bytesize="8" Description="waterParticle" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="64" Vartype="Pointer" Bytesize="8" Description="onMin1FireStarted" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="72" Vartype="Pointer" Bytesize="8" Description="onNoFireLeft" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="80" Vartype="Pointer" Bytesize="8" Description="onWaterWaste" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="88" Vartype="Pointer" Bytesize="8" Description="onWaterWasteStop" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="96" Vartype="Pointer" Bytesize="8" Description="onNoEnergy" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="104" Vartype="Pointer" Bytesize="8" Description="nearCharacter" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="112" Vartype="Pointer" Bytesize="8" Description="activePlayer" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="120" Vartype="Pointer" Bytesize="8" Description="motor" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="128" Vartype="Pointer" Bytesize="8" Description="modules" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="136" Vartype="Pointer" Bytesize="8" Description="checkWaterWasteRoutine" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="144" Vartype="Pointer" Bytesize="8" Description="indicateNoEnergyRoutine" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="152" Vartype="Pointer" Bytesize="8" Description="indicateNoEnergyYield" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="160" Vartype="4 Bytes" Bytesize="4" Description="velocityLeft" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="168" Vartype="4 Bytes" Bytesize="4" Description="velocityRate" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="200" Vartype="4 Bytes" Bytesize="4" Description="actors" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="204" Vartype="Float" Bytesize="4" Description="reduceEnergyMultiplier" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="208" Vartype="4 Bytes" Bytesize="4" Description="fireCounter" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="212" Vartype="4 Bytes" Bytesize="4" Description="fireBigCounter" DisplayMethod="Unsigned Integer"/>
                    <Element Offset="216" Vartype="Byte" Bytesize="1" Description="particleWaterIsPlaying" DisplayMethod="Unsigned Integer"/>
                  </Elements>
                </Structure>
              </Element>
              <Element Offset="56" Vartype="Pointer" Bytesize="8" Description="leashBack" DisplayMethod="Unsigned Integer"/>
              <Element Offset="64" Vartype="Pointer" Bytesize="8" Description="leashFront" DisplayMethod="Unsigned Integer"/>
              <Element Offset="72" Vartype="Pointer" Bytesize="8" Description="ramp" DisplayMethod="Unsigned Integer"/>
              <Element Offset="80" Vartype="Pointer" Bytesize="8" Description="frontLight" DisplayMethod="Unsigned Integer"/>
              <Element Offset="88" Vartype="Pointer" Bytesize="8" Description="cabin" DisplayMethod="Unsigned Integer"/>
              <Element Offset="96" Vartype="Pointer" Bytesize="8" Description="itemCollector" DisplayMethod="Unsigned Integer"/>
              <Element Offset="104" Vartype="Pointer" Bytesize="8" Description="motorUpgrade" DisplayMethod="Unsigned Integer"/>
              <Element Offset="112" Vartype="Pointer" Bytesize="8" Description="repairStation" DisplayMethod="Unsigned Integer"/>
            </Elements>
          </Structure>
        </Element>
        <Element Offset="72" Vartype="Pointer" Bytesize="8" Description="onVehicleReady" DisplayMethod="Unsigned Integer"/>
        <Element Offset="80" Vartype="Pointer" Bytesize="8" Description="onHitConstruction" DisplayMethod="Unsigned Integer"/>
        <Element Offset="88" Vartype="Pointer" Bytesize="8" Description="onVehicleMove" DisplayMethod="Unsigned Integer"/>
        <Element Offset="96" Vartype="Pointer" Bytesize="8" Description="onVehicleSetFrontCover" DisplayMethod="Unsigned Integer"/>
        <Element Offset="104" Vartype="Pointer" Bytesize="8" Description="onForceWithBrakesOn" DisplayMethod="Unsigned Integer"/>
        <Element Offset="112" Vartype="Pointer" Bytesize="8" Description="_modules" DisplayMethod="Unsigned Integer"/>
        <Element Offset="120" Vartype="Byte" Bytesize="1" Description="frontCoverOnStart" DisplayMethod="Unsigned Integer"/>
        <Element Offset="124" Vartype="Float" Bytesize="4" Description="initDelay" DisplayMethod="Unsigned Integer"/>
        <Element Offset="128" Vartype="Byte" Bytesize="1" Description="isReady" DisplayMethod="Unsigned Integer"/>
        <Element Offset="129" Vartype="Byte" Bytesize="1" Description="isMoving" DisplayMethod="Unsigned Integer"/>
        <Element Offset="130" Vartype="Byte" Bytesize="1" Description="zoomTriggerOn" DisplayMethod="Unsigned Integer"/>
        <Element Offset="131" Vartype="Byte" Bytesize="1" Description="zoomOutWasPressed" DisplayMethod="Unsigned Integer"/>
        <Element Offset="132" Vartype="Byte" Bytesize="1" Description="zoomOutWasReleased" DisplayMethod="Unsigned Integer"/>
        <Element Offset="133" Vartype="Byte" Bytesize="1" Description="lastFrontCoverState" DisplayMethod="Unsigned Integer"/>
      </Elements>
    </Structure>
  </Structures>
  <Comments>https://fearlessrevolution.com/threads/far-lone-sails-2.6811/
</Comments>
</CheatTable>
