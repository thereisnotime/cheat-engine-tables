<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="35">
  <CheatEntries>
    <CheatEntry>
      <ID>4775</ID>
      <Description>"Temp. enhancements"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>000000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>4786</ID>
          <Description>"Run &amp; Sprint speed+"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(run_hook, "Dishonored2.exe"+9E807C)
define(run_bytes, F3 42 0F 10 44 C0 24)

define(sprint_hook1, "Dishonored2.exe"+9E8693)
define(sprint_bytes1, F3 42 0F 10 44 C0 24)

define(sprint_hook2,"Dishonored2.exe"+9E86B0)
define(sprint_bytes2, F3 0F 10 4C D0 24)

[ENABLE]

assert(run_hook, run_bytes)
assert(sprint_hook1, sprint_bytes1)
assert(sprint_hook2, sprint_bytes2)

alloc(newmem, $100, run_hook)

label(runSpeedMult)
label(sprSpeedInc)

registerSymbol(runSpeedMult)
registerSymbol(sprSpeedInc)

label(run_code)
label(run_return)

label(sprint_code1)
label(sprint_return1)

label(sprint_code2)
label(sprint_return2)

newmem:
runSpeedMult:
  dd (float)1.1
sprSpeedInc:
  dd (float)1.5

run_code:
  movss xmm0,[runSpeedMult]
  jmp run_return

sprint_code1:
  movss xmm0,[runSpeedMult]
  jmp sprint_return1

sprint_code2:
  movss xmm1,[sprSpeedInc]
  jmp sprint_return2

//------------------
run_hook:
  jmp run_code
  nop
  nop
run_return:

sprint_hook1:
  jmp sprint_code1
  nop
  nop
sprint_return1:

sprint_hook2:
  jmp sprint_code2
  nop
sprint_return2:

[DISABLE]

run_hook:
  db run_bytes
  // movss xmm0,[rax+r8*8+24]

sprint_hook1:
  db sprint_bytes1
  // movss xmm0,[rax+r8*8+24]

sprint_hook2:
  db sprint_bytes2
  // movss xmm1,[rax+rdx*8+24]

unregisterSymbol(runSpeedMult)
unregisterSymbol(sprSpeedInc)

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9E807C

"Dishonored2.exe"+9E805D: CC                          -  int 3
"Dishonored2.exe"+9E805E: CC                          -  int 3
"Dishonored2.exe"+9E805F: CC                          -  int 3
"Dishonored2.exe"+9E8060: 48 63 41 68                 -  movsxd  rax,dword ptr [rcx+68]
"Dishonored2.exe"+9E8064: 83 F8 FF                    -  cmp eax,-01
"Dishonored2.exe"+9E8067: 7E 24                       -  jle Dishonored2.exe+9E808D
"Dishonored2.exe"+9E8069: 48 8B 51 10                 -  mov rdx,[rcx+10]
"Dishonored2.exe"+9E806D: 4C 8D 04 80                 -  lea r8,[rax+rax*4]
"Dishonored2.exe"+9E8071: 4C 8B 8A 30 03 00 00        -  mov r9,[rdx+00000330]
"Dishonored2.exe"+9E8078: 49 8B 41 48                 -  mov rax,[r9+48]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9E807C: F3 42 0F 10 44 C0 24        -  movss xmm0,[rax+r8*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9E8083: F3 0F 11 41 38              -  movss [rcx+38],xmm0
"Dishonored2.exe"+9E8088: E9 73 EC FF FF              -  jmp Dishonored2.exe+9E6D00
"Dishonored2.exe"+9E808D: 0F 57 C0                    -  xorps xmm0,xmm0
"Dishonored2.exe"+9E8090: F3 0F 11 41 38              -  movss [rcx+38],xmm0
"Dishonored2.exe"+9E8095: E9 66 EC FF FF              -  jmp Dishonored2.exe+9E6D00
"Dishonored2.exe"+9E809A: CC                          -  int 3
"Dishonored2.exe"+9E809B: CC                          -  int 3
"Dishonored2.exe"+9E809C: CC                          -  int 3
"Dishonored2.exe"+9E809D: CC                          -  int 3
"Dishonored2.exe"+9E809E: CC                          -  int 3
}

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9E8693
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9E86B0

"Dishonored2.exe"+9E866A: 48 8B 41 10           -  mov rax,[rcx+10]
"Dishonored2.exe"+9E866E: 0F 29 74 24 40        -  movaps [rsp+40],xmm6
"Dishonored2.exe"+9E8673: 48 8B D9              -  mov rbx,rcx
"Dishonored2.exe"+9E8676: 4C 8B 88 30 03 00 00  -  mov r9,[rax+00000330]
"Dishonored2.exe"+9E867D: 48 63 41 68           -  movsxd  rax,dword ptr [rcx+68]
"Dishonored2.exe"+9E8681: 0F 29 7C 24 30        -  movaps [rsp+30],xmm7
"Dishonored2.exe"+9E8686: 83 F8 FF              -  cmp eax,-01
"Dishonored2.exe"+9E8689: 7E 11                 -  jle Dishonored2.exe+9E869C
"Dishonored2.exe"+9E868B: 4C 8D 04 80           -  lea r8,[rax+rax*4]
"Dishonored2.exe"+9E868F: 49 8B 41 48           -  mov rax,[r9+48]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9E8693: F3 42 0F 10 44 C0 24  -  movss xmm0,[rax+r8*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9E869A: EB 03                 -  jmp Dishonored2.exe+9E869F
"Dishonored2.exe"+9E869C: 0F 57 C0              -  xorps xmm0,xmm0
"Dishonored2.exe"+9E869F: 48 63 41 6C           -  movsxd  rax,dword ptr [rcx+6C]
"Dishonored2.exe"+9E86A3: 83 F8 FF              -  cmp eax,-01
"Dishonored2.exe"+9E86A6: 7E 10                 -  jle Dishonored2.exe+9E86B8
"Dishonored2.exe"+9E86A8: 48 8D 14 80           -  lea rdx,[rax+rax*4]
"Dishonored2.exe"+9E86AC: 49 8B 41 48           -  mov rax,[r9+48]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9E86B0: F3 0F 10 4C D0 24     -  movss xmm1,[rax+rdx*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9E86B6: EB 03                 -  jmp Dishonored2.exe+9E86BB
"Dishonored2.exe"+9E86B8: 0F 57 C9              -  xorps xmm1,xmm1
"Dishonored2.exe"+9E86BB: F3 0F 11 41 38        -  movss [rcx+38],xmm0
"Dishonored2.exe"+9E86C0: E8 AB ED FF FF        -  call Dishonored2.exe+9E7470
"Dishonored2.exe"+9E86C5: 48 8B CB              -  mov rcx,rbx
"Dishonored2.exe"+9E86C8: E8 33 E6 FF FF        -  call Dishonored2.exe+9E6D00
"Dishonored2.exe"+9E86CD: 48 8B 7B 10           -  mov rdi,[rbx+10]
"Dishonored2.exe"+9E86D1: 0F 57 FF              -  xorps xmm7,xmm7
"Dishonored2.exe"+9E86D4: 48 8B 47 10           -  mov rax,[rdi+10]
"Dishonored2.exe"+9E86D8: 48 63 88 AC 02 00 00  -  movsxd  rcx,dword ptr [rax+000002AC]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>47985</ID>
              <Description>"Speed multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>runSpeedMult</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>47986</ID>
              <Description>"Sprint increment"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>sprSpeedInc</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>4793</ID>
          <Description>"Slide speed+"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(hook, "Dishonored2.exe"+9EDC3F)
define(bytes, F3 44 0F 10 4C D0 24)

[ENABLE]

assert(hook, bytes)
alloc(newmem, $100, hook)

label(slSpeedMult)
registerSymbol(slSpeedMult)
label(code)
label(return)

newmem:
slSpeedMult:
  dd (float)1.5

code:
  movss xmm9,[slSpeedMult]
  jmp return

hook:
  jmp code
  nop
  nop
return:

[DISABLE]

hook:
  db bytes
  // movss xmm9,[rax+rdx*8+24]

unregisterSymbol(slSpeedMult)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9EDC3F

"Dishonored2.exe"+9EDC14: 48 89 4C 24 48              -  mov [rsp+48],rcx
"Dishonored2.exe"+9EDC19: 48 89 44 24 30              -  mov [rsp+30],rax
"Dishonored2.exe"+9EDC1E: 48 63 87 00 01 00 00        -  movsxd  rax,dword ptr [rdi+00000100]
"Dishonored2.exe"+9EDC25: 4C 89 65 88                 -  mov [rbp-78],r12
"Dishonored2.exe"+9EDC29: 4C 89 44 24 58              -  mov [rsp+58],r8
"Dishonored2.exe"+9EDC2E: 48 89 55 90                 -  mov [rbp-70],rdx
"Dishonored2.exe"+9EDC32: 83 F8 FF                    -  cmp eax,-01
"Dishonored2.exe"+9EDC35: 7E 11                       -  jle Dishonored2.exe+9EDC48
"Dishonored2.exe"+9EDC37: 48 8D 14 80                 -  lea rdx,[rax+rax*4]
"Dishonored2.exe"+9EDC3B: 48 8B 43 48                 -  mov rax,[rbx+48]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9EDC3F: F3 44 0F 10 4C D0 24        -  movss xmm9,[rax+rdx*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9EDC46: EB 04                       -  jmp Dishonored2.exe+9EDC4C
"Dishonored2.exe"+9EDC48: 45 0F 28 CE                 -  movaps xmm9,xmm14
"Dishonored2.exe"+9EDC4C: 48 8D 8F C0 00 00 00        -  lea rcx,[rdi+000000C0]
"Dishonored2.exe"+9EDC53: F3 44 0F 11 4F 38           -  movss [rdi+38],xmm9
"Dishonored2.exe"+9EDC59: 8B 41 04                    -  mov eax,[rcx+04]
"Dishonored2.exe"+9EDC5C: 0B 01                       -  or eax,[rcx]
"Dishonored2.exe"+9EDC5E: 0B 41 08                    -  or eax,[rcx+08]
"Dishonored2.exe"+9EDC61: A9 FF FF FF 7F              -  test eax,7FFFFFFF
"Dishonored2.exe"+9EDC66: 49 8D 84 24 3C 03 00 00     -  lea rax,[r12+0000033C]
"Dishonored2.exe"+9EDC6E: 74 03                       -  je Dishonored2.exe+9EDC73
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>47988</ID>
              <Description>"Speed multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>slSpeedMult</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>37814</ID>
          <Description>"Climb speed+"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(hook, "Dishonored2.exe"+9DA532)
define(bytes, F3 0F 10 54 D0 24)

[ENABLE]

assert(hook, bytes)
alloc(newmem, $100, hook)

label(clSpeedMult)
registerSymbol(clSpeedMult)
label(code)
label(return)

newmem:
clSpeedMult:
  dd (float)2
code:
  movss xmm2,[clSpeedMult]
  jmp return

hook:
  jmp code
  nop
return:

[DISABLE]

hook:
  db bytes
  // movss xmm2,[rax+rdx*8+24]

unregisterSymbol(clSpeedMult)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9DA532

"Dishonored2.exe"+9DA505: 8B 9D A0 01 00 00              -  mov ebx,[rbp+000001A0]
"Dishonored2.exe"+9DA50B: 85 DB                          -  test ebx,ebx
"Dishonored2.exe"+9DA50D: 0F 84 87 00 00 00              -  je Dishonored2.exe+9DA59A
"Dishonored2.exe"+9DA513: 48 8B 47 10                    -  mov rax,[rdi+10]
"Dishonored2.exe"+9DA517: 4C 8B 80 30 03 00 00           -  mov r8,[rax+00000330]
"Dishonored2.exe"+9DA51E: 48 63 87 10 01 00 00           -  movsxd  rax,dword ptr [rdi+00000110]
"Dishonored2.exe"+9DA525: 83 F8 FF                       -  cmp eax,-01
"Dishonored2.exe"+9DA528: 7E 30                          -  jle Dishonored2.exe+9DA55A
"Dishonored2.exe"+9DA52A: 48 8D 14 80                    -  lea rdx,[rax+rax*4]
"Dishonored2.exe"+9DA52E: 49 8B 40 48                    -  mov rax,[r8+48]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9DA532: F3 0F 10 54 D0 24              -  movss xmm2,[rax+rdx*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9DA538: 0F 2E 15 15 71 69 01           -  ucomiss xmm2,[Dishonored2.exe+2071654]
"Dishonored2.exe"+9DA53F: 7A 02                          -  jp Dishonored2.exe+9DA543
"Dishonored2.exe"+9DA541: 74 1F                          -  je Dishonored2.exe+9DA562
"Dishonored2.exe"+9DA543: 48 8B 0D 1E 68 D3 01           -  mov rcx,[Dishonored2.exe+2710D68]
"Dishonored2.exe"+9DA54A: 48 81 C1 38 53 1F 00           -  add rcx,001F5338
"Dishonored2.exe"+9DA551: 8B D3                          -  mov edx,ebx
"Dishonored2.exe"+9DA553: E8 D8 A9 F5 FF                 -  call Dishonored2.exe+934F30
"Dishonored2.exe"+9DA558: EB 08                          -  jmp Dishonored2.exe+9DA562
"Dishonored2.exe"+9DA55A: F3 0F 10 15 F2 70 69 01        -  movss xmm2,[Dishonored2.exe+2071654]
"Dishonored2.exe"+9DA562: 48 8B 0D FF 67 D3 01           -  mov rcx,[Dishonored2.exe+2710D68]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>47989</ID>
              <Description>"Speed multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>clSpeedMult</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>4778</ID>
          <Description>"2-level zoom"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(hook1, "Dishonored2.exe"+9BDE32)
define(bytes1, F3 0F 10 54 D0 24)

define(hook2, "Dishonored2.exe"+9BE2E0)
define(bytes2, F3 42 0F 10 54 C8 24)

define(hook3, "Dishonored2.exe"+9BE710)
define(bytes3, F3 0F 10 54 D0 24)

[ENABLE]

assert(hook1, bytes1)
assert(hook2, bytes2)
assert(hook3, bytes3)

alloc(newmem, $100, hook2)

label(zoomLevel)

label(code1)
label(zoom_return1)
label(code2)
label(zoom_return2)
label(code3)
label(zoom_return3)

newmem:
zoomLevel:
  dd (float)2

code1:
  movss xmm2,[zoomLevel]
  jmp zoom_return1

code2:
  movss xmm2,[zoomLevel]
  jmp zoom_return2

code3:
  movss xmm2,[zoomLevel]
  jmp zoom_return3

//-----------
hook1:
  jmp code1
  nop
zoom_return1:

hook2:
  jmp code2
  nop
  nop
zoom_return2:

hook3:
  jmp code3
  nop
zoom_return3:

[DISABLE]

hook1:
  db bytes1
  // movss xmm2,[rax+rdx*8+24]

hook2:
  db bytes2
  // movss xmm2,[rax+r9*8+24]

hook3:
  db bytes3
  // movss xmm2,[rax+rdx*8+24]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9BDE32

"Dishonored2.exe"+9BDE0E: CC                       -  int 3
"Dishonored2.exe"+9BDE0F: CC                       -  int 3
"Dishonored2.exe"+9BDE10: 48 63 81 98 00 00 00     -  movsxd  rax,dword ptr [rcx+00000098]
"Dishonored2.exe"+9BDE17: 83 F8 FF                 -  cmp eax,-01
"Dishonored2.exe"+9BDE1A: 7E 26                    -  jle Dishonored2.exe+9BDE42
"Dishonored2.exe"+9BDE1C: 48 8B 49 10              -  mov rcx,[rcx+10]
"Dishonored2.exe"+9BDE20: 48 8D 14 80              -  lea rdx,[rax+rax*4]
"Dishonored2.exe"+9BDE24: 0F 57 C9                 -  xorps xmm1,xmm1
"Dishonored2.exe"+9BDE27: 4C 8B 81 30 03 00 00     -  mov r8,[rcx+00000330]
"Dishonored2.exe"+9BDE2E: 49 8B 40 48              -  mov rax,[r8+48]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9BDE32: F3 0F 10 54 D0 24        -  movss xmm2,[rax+rdx*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9BDE38: F3 0F 5F CA              -  maxss xmm1,xmm2
"Dishonored2.exe"+9BDE3C: F3 48 0F 2C C1           -  cvttss2si rax,xmm1
"Dishonored2.exe"+9BDE41: C3                       -  ret
"Dishonored2.exe"+9BDE42: 0F 57 D2                 -  xorps xmm2,xmm2
"Dishonored2.exe"+9BDE45: 0F 57 C9                 -  xorps xmm1,xmm1
"Dishonored2.exe"+9BDE48: F3 0F 5F CA              -  maxss xmm1,xmm2
"Dishonored2.exe"+9BDE4C: F3 48 0F 2C C1           -  cvttss2si rax,xmm1
"Dishonored2.exe"+9BDE51: C3                       -  ret
"Dishonored2.exe"+9BDE52: CC                       -  int 3
"Dishonored2.exe"+9BDE53: CC                       -  int 3
}

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9BE2E0

"Dishonored2.exe"+9BE2B7: 49 8B F0                 -  mov rsi,r8
"Dishonored2.exe"+9BE2BA: 4C 8B D2                 -  mov r10,rdx
"Dishonored2.exe"+9BE2BD: 4C 8B 79 18              -  mov r15,[rcx+18]
"Dishonored2.exe"+9BE2C1: 48 8B 41 10              -  mov rax,[rcx+10]
"Dishonored2.exe"+9BE2C5: 48 8B 90 30 03 00 00     -  mov rdx,[rax+00000330]
"Dishonored2.exe"+9BE2CC: 48 63 81 98 00 00 00     -  movsxd  rax,dword ptr [rcx+00000098]
"Dishonored2.exe"+9BE2D3: 83 F8 FF                 -  cmp eax,-01
"Dishonored2.exe"+9BE2D6: 7E 11                    -  jle Dishonored2.exe+9BE2E9
"Dishonored2.exe"+9BE2D8: 4C 8D 0C 80              -  lea r9,[rax+rax*4]
"Dishonored2.exe"+9BE2DC: 48 8B 42 48              -  mov rax,[rdx+48]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9BE2E0: F3 42 0F 10 54 C8 24     -  movss xmm2,[rax+r9*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9BE2E7: EB 03                    -  jmp Dishonored2.exe+9BE2EC
"Dishonored2.exe"+9BE2E9: 0F 57 D2                 -  xorps xmm2,xmm2
"Dishonored2.exe"+9BE2EC: 0F 57 C9                 -  xorps xmm1,xmm1
"Dishonored2.exe"+9BE2EF: F3 0F 5F CA              -  maxss xmm1,xmm2
"Dishonored2.exe"+9BE2F3: F3 48 0F 2C C1           -  cvttss2si rax,xmm1
"Dishonored2.exe"+9BE2F8: 33 FF                    -  xor edi,edi
"Dishonored2.exe"+9BE2FA: 48 8D 1D 3F D1 3C 01     -  lea rbx,[Dishonored2.exe+1D8B440]
"Dishonored2.exe"+9BE301: 4C 8D 35 98 1D 46 01     -  lea r14,[Dishonored2.exe+1E200A0]
"Dishonored2.exe"+9BE308: 83 F8 01                 -  cmp eax,01
"Dishonored2.exe"+9BE30B: 0F 8E 2E 01 00 00        -  jng Dishonored2.exe+9BE43F
}

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9BE710

"Dishonored2.exe"+9BE6E8: 4D 85 C9                    -  test r9,r9
"Dishonored2.exe"+9BE6EB: 74 48                       -  je Dishonored2.exe+9BE735
"Dishonored2.exe"+9BE6ED: 49 63 81 98 00 00 00        -  movsxd  rax,dword ptr [r9+00000098]
"Dishonored2.exe"+9BE6F4: 41 FF 41 6C                 -  inc [r9+6C]
"Dishonored2.exe"+9BE6F8: 83 F8 FF                    -  cmp eax,-01
"Dishonored2.exe"+9BE6FB: 7E 1B                       -  jle Dishonored2.exe+9BE718
"Dishonored2.exe"+9BE6FD: 49 8B 49 10                 -  mov rcx,[r9+10]
"Dishonored2.exe"+9BE701: 48 8D 14 80                 -  lea rdx,[rax+rax*4]
"Dishonored2.exe"+9BE705: 4C 8B 81 30 03 00 00        -  mov r8,[rcx+00000330]
"Dishonored2.exe"+9BE70C: 49 8B 40 48                 -  mov rax,[r8+48]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9BE710: F3 0F 10 54 D0 24           -  movss xmm2,[rax+rdx*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9BE716: EB 03                       -  jmp Dishonored2.exe+9BE71B
"Dishonored2.exe"+9BE718: 0F 57 D2                    -  xorps xmm2,xmm2
"Dishonored2.exe"+9BE71B: 41 8B 49 6C                 -  mov ecx,[r9+6C]
"Dishonored2.exe"+9BE71F: 0F 57 C9                    -  xorps xmm1,xmm1
"Dishonored2.exe"+9BE722: F3 0F 5F CA                 -  maxss xmm1,xmm2
"Dishonored2.exe"+9BE726: F3 48 0F 2C C1              -  cvttss2si rax,xmm1
"Dishonored2.exe"+9BE72B: 3B C8                       -  cmp ecx,eax
"Dishonored2.exe"+9BE72D: 41 0F 4D CA                 -  cmovge ecx,r10d
"Dishonored2.exe"+9BE731: 41 89 49 6C                 -  mov [r9+6C],ecx
"Dishonored2.exe"+9BE735: 48 8B 4B 10                 -  mov rcx,[rbx+10]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4790</ID>
          <Description>"Double-Jump height+"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(doublejump_hook, "Dishonored2.exe"+9E5845)
define(doublejump_bytes, F3 42 0F 10 44 C0 24)

define(height2_hook, "Dishonored2.exe"+9E585D)
define(height2_bytes, F3 41 0F 10 89 68 01 00 00)

[ENABLE]

assert(doublejump_hook, doublejump_bytes)
assert(height2_hook, height2_bytes)
alloc(newmem, $100, doublejump_hook)

label(flag)
label(doublejump_code)
label(doublejump_return)

label(height2_code)
label(height2_return)

label(jmpHeight2)
registerSymbol(jmpHeight2)

newmem:
flag:
  dd (float)1
jmpHeight2:
  dd (float)15    // default: 2.5

doublejump_code:
  movss xmm0, [flag]
  jmp doublejump_return

height2_code:
  movss xmm1, [jmpHeight2]
  jmp height2_return

doublejump_hook:
  jmp doublejump_code
  nop
  nop
doublejump_return:

height2_hook:
  jmp height2_code
  db 90 90 90 90
height2_return:

[DISABLE]

doublejump_hook:
  db doublejump_bytes
  // movss xmm0,[rax+r8*8+24]

height2_hook:
  db height2_bytes
  // movss xmm1,[r9+00000168]

unregisterSymbol(jmpHeight2)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9E5845
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9E585D

"Dishonored2.exe"+9E580A: 49 8B 81 88 01 00 00           -  mov rax,[r9+00000188]
"Dishonored2.exe"+9E5811: C7 83 94 00 00 00 01 00 00 00  -  mov [rbx+00000094],00000001
"Dishonored2.exe"+9E581B: F3 0F 11 93 90 00 00 00        -  movss [rbx+00000090],xmm2
"Dishonored2.exe"+9E5823: 48 89 83 B0 00 00 00           -  mov [rbx+000000B0],rax
"Dishonored2.exe"+9E582A: 48 63 83 BC 00 00 00           -  movsxd  rax,dword ptr [rbx+000000BC]
"Dishonored2.exe"+9E5831: 83 F8 FF                       -  cmp eax,-01
"Dishonored2.exe"+9E5834: 7E 36                          -  jle Dishonored2.exe+9E586C
"Dishonored2.exe"+9E5836: 49 8B 92 30 03 00 00           -  mov rdx,[r10+00000330]
"Dishonored2.exe"+9E583D: 4C 8D 04 80                    -  lea r8,[rax+rax*4]
"Dishonored2.exe"+9E5841: 48 8B 42 48                    -  mov rax,[rdx+48]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9E5845: F3 42 0F 10 44 C0 24           -  movss xmm0,[rax+r8*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9E584C: 42 0F 2E 44 C0 08              -  ucomiss xmm0,[rax+r8*8+08]
"Dishonored2.exe"+9E5852: 7A 02                          -  jp Dishonored2.exe+9E5856
"Dishonored2.exe"+9E5854: 74 16                          -  je Dishonored2.exe+9E586C
"Dishonored2.exe"+9E5856: 41 8B 81 6C 01 00 00           -  mov eax,[r9+0000016C]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9E585D: F3 41 0F 10 89 68 01 00 00     -  movss xmm1,[r9+00000168]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9E5866: 89 83 94 00 00 00              -  mov [rbx+00000094],eax
"Dishonored2.exe"+9E586C: 83 BB 94 00 00 00 01           -  cmp dword ptr [rbx+00000094],01
"Dishonored2.exe"+9E5873: 7E 0A                          -  jle Dishonored2.exe+9E587F
"Dishonored2.exe"+9E5875: F3 0F 11 8B 98 00 00 00        -  movss [rbx+00000098],xmm1
"Dishonored2.exe"+9E587D: EB 3E                          -  jmp Dishonored2.exe+9E58BD
"Dishonored2.exe"+9E587F: 0F 2F CB                       -  comiss xmm1,xmm3
"Dishonored2.exe"+9E5882: 76 39                          -  jna Dishonored2.exe+9E58BD
"Dishonored2.exe"+9E5884: F3 0F 58 D1                    -  addss xmm2,xmm1
"Dishonored2.exe"+9E5888: F3 0F 11 93 90 00 00 00        -  movss [rbx+00000090],xmm2
"Dishonored2.exe"+9E5890: 41 8B 81 7C 01 00 00           -  mov eax,[r9+0000017C]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>50532</ID>
              <Description>"Height2 (default: 2.5 m)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>jmpHeight2</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>4834</ID>
          <Description>"Fencing+"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(sword_speed_hook,"Dishonored2.exe"+9EB3AF)
define(speed_bytes, F3 0F 10 54 D1 24)

[ENABLE]

assert(sword_speed_hook, speed_bytes)

alloc(newmem, $100, sword_speed_hook)

label(slhSpeedMult)
registerSymbol(slhSpeedMult)
label(sword_speed_code)
label(sword_speed_exit)

newmem:
slhSpeedMult:
  dd (float)1.5

sword_speed_code:
  movss xmm2,[slhSpeedMult]
  jmp sword_speed_exit

sword_speed_hook:
  jmp sword_speed_code
  nop
sword_speed_exit:


[DISABLE]

sword_speed_hook:
  db speed_bytes
  // movss xmm2,[rcx+rdx*8+24]

unregisterSymbol(slhSpeedMult)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9EB3AF

"Dishonored2.exe"+9EB385: 4C 3B F8                          -  cmp r15,rax
"Dishonored2.exe"+9EB388: 74 03                             -  je Dishonored2.exe+9EB38D
"Dishonored2.exe"+9EB38A: 41 89 1F                          -  mov [r15],ebx
"Dishonored2.exe"+9EB38D: 48 63 86 08 01 00 00              -  movsxd  rax,dword ptr [rsi+00000108]
"Dishonored2.exe"+9EB394: C6 86 DA 00 00 00 00              -  mov byte ptr [rsi+000000DA],00
"Dishonored2.exe"+9EB39B: 83 F8 FF                          -  cmp eax,-01
"Dishonored2.exe"+9EB39E: 7E 50                             -  jle Dishonored2.exe+9EB3F0
"Dishonored2.exe"+9EB3A0: 48 8D 14 80                       -  lea rdx,[rax+rax*4]
"Dishonored2.exe"+9EB3A4: 49 8B 86 30 03 00 00              -  mov rax,[r14+00000330]
"Dishonored2.exe"+9EB3AB: 48 8B 48 48                       -  mov rcx,[rax+48]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9EB3AF: F3 0F 10 54 D1 24                 -  movss xmm2,[rcx+rdx*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9EB3B5: 0F 2E 15 98 62 68 01              -  ucomiss xmm2,[Dishonored2.exe+2071654]
"Dishonored2.exe"+9EB3BC: 7A 02                             -  jp Dishonored2.exe+9EB3C0
"Dishonored2.exe"+9EB3BE: 74 30                             -  je Dishonored2.exe+9EB3F0
"Dishonored2.exe"+9EB3C0: 49 8D 88 38 53 1F 00              -  lea rcx,[r8+001F5338]
"Dishonored2.exe"+9EB3C7: 8B D3                             -  mov edx,ebx
"Dishonored2.exe"+9EB3C9: E8 62 9B F4 FF                    -  call Dishonored2.exe+934F30
"Dishonored2.exe"+9EB3CE: 83 BE C8 00 00 00 00              -  cmp dword ptr [rsi+000000C8],00
"Dishonored2.exe"+9EB3D5: 76 19                             -  jna Dishonored2.exe+9EB3F0
"Dishonored2.exe"+9EB3D7: 48 8B 0D 8A 59 D2 01              -  mov rcx,[Dishonored2.exe+2710D68]
"Dishonored2.exe"+9EB3DE: 8B 96 C8 00 00 00                 -  mov edx,[rsi+000000C8]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>47990</ID>
              <Description>"Slash speed multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>slhSpeedMult</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>4836</ID>
          <Description>""Greater Strength""</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(strength_hook, "Dishonored2.exe"+9A2D04)
define(greater_strength_hook,"Dishonored2.exe"+44BD50)
define(original_bytes, F3 42 0F 10 44 C0 24)

[ENABLE]

assert(strength_hook, original_bytes)
assert(greater_strength_hook, original_bytes)

alloc(newmem, $100, greater_strength_hook)

label(flag)

label(strength_code)
label(strength_exit)

label(greater_strength_code)
label(greater_strength_exit)

newmem:
flag:
  dd (float)1

strength_code:
  movss xmm0,[flag]
  jmp strength_exit

greater_strength_code:
  movss xmm0,[flag]
  jmp greater_strength_exit

//-------------------
strength_hook:
  jmp strength_code
  nop
  nop
strength_exit:

greater_strength_hook:
  jmp greater_strength_code
  nop
  nop
greater_strength_exit:

[DISABLE]

strength_hook:
  db original_bytes
  // movss xmm0,[rax+r8*8+24]

greater_strength_hook:
  db original_bytes
  // movss xmm0,[rax+r8*8+24]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9A2D04

"Dishonored2.exe"+9A2CD4: 80 79 50 00              -  cmp byte ptr [rcx+50],00
"Dishonored2.exe"+9A2CD8: 4C 8B C9                 -  mov r9,rcx
"Dishonored2.exe"+9A2CDB: 0F 84 5A 01 00 00        -  je Dishonored2.exe+9A2E3B
"Dishonored2.exe"+9A2CE1: 4C 8B 51 10              -  mov r10,[rcx+10]
"Dishonored2.exe"+9A2CE5: 49 8B 8A 30 03 00 00     -  mov rcx,[r10+00000330]
"Dishonored2.exe"+9A2CEC: 48 63 81 18 01 00 00     -  movsxd  rax,dword ptr [rcx+00000118]
"Dishonored2.exe"+9A2CF3: 83 F8 FF                 -  cmp eax,-01
"Dishonored2.exe"+9A2CF6: 0F 8E 3F 01 00 00        -  jng Dishonored2.exe+9A2E3B
"Dishonored2.exe"+9A2CFC: 4C 8D 04 80              -  lea r8,[rax+rax*4]
"Dishonored2.exe"+9A2D00: 48 8B 41 48              -  mov rax,[rcx+48]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9A2D04: F3 42 0F 10 44 C0 24     -  movss xmm0,[rax+r8*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9A2D0B: 42 0F 2E 44 C0 08        -  ucomiss xmm0,[rax+r8*8+08]
"Dishonored2.exe"+9A2D11: 7A 06                    -  jp Dishonored2.exe+9A2D19
"Dishonored2.exe"+9A2D13: 0F 84 22 01 00 00        -  je Dishonored2.exe+9A2E3B
"Dishonored2.exe"+9A2D19: 41 8B 41 38              -  mov eax,[r9+38]
"Dishonored2.exe"+9A2D1D: 4C 8B 05 44 E0 D6 01     -  mov r8,[Dishonored2.exe+2710D68]
"Dishonored2.exe"+9A2D24: 48 89 5C 24 60           -  mov [rsp+60],rbx
"Dishonored2.exe"+9A2D29: 48 89 6C 24 68           -  mov [rsp+68],rbp
"Dishonored2.exe"+9A2D2E: 48 89 74 24 70           -  mov [rsp+70],rsi
"Dishonored2.exe"+9A2D33: 48 89 7C 24 78           -  mov [rsp+78],rdi
"Dishonored2.exe"+9A2D38: 4C 89 74 24 50           -  mov [rsp+50],r14
}

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+44BD50

"Dishonored2.exe"+44BD28: 3B 15 72 59 7D 03              -  cmp edx,[Dishonored2.exe+3C216A0]
"Dishonored2.exe"+44BD2E: 7C 58                          -  jl Dishonored2.exe+44BD88
"Dishonored2.exe"+44BD30: 3B 15 6E 59 7D 03              -  cmp edx,[Dishonored2.exe+3C216A4]
"Dishonored2.exe"+44BD36: 7F 50                          -  jg Dishonored2.exe+44BD88
"Dishonored2.exe"+44BD38: 48 63 46 68                    -  movsxd  rax,dword ptr [rsi+68]
"Dishonored2.exe"+44BD3C: 83 F8 FF                       -  cmp eax,-01
"Dishonored2.exe"+44BD3F: 7E 20                          -  jle Dishonored2.exe+44BD61
"Dishonored2.exe"+44BD41: 48 8B 93 08 04 00 00           -  mov rdx,[rbx+00000408]
"Dishonored2.exe"+44BD48: 4C 8D 04 80                    -  lea r8,[rax+rax*4]
"Dishonored2.exe"+44BD4C: 48 8B 42 48                    -  mov rax,[rdx+48]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+44BD50: F3 42 0F 10 44 C0 24           -  movss xmm0,[rax+r8*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+44BD57: 42 0F 2E 44 C0 08              -  ucomiss xmm0,[rax+r8*8+08]
"Dishonored2.exe"+44BD5D: 7A 17                          -  jp Dishonored2.exe+44BD76
"Dishonored2.exe"+44BD5F: 75 15                          -  jne Dishonored2.exe+44BD76
"Dishonored2.exe"+44BD61: 48 85 FF                       -  test rdi,rdi
"Dishonored2.exe"+44BD64: 74 22                          -  je Dishonored2.exe+44BD88
"Dishonored2.exe"+44BD66: 48 B8 00 00 00 00 00 04 00 00  -  mov rax,0000040000000000
"Dishonored2.exe"+44BD70: 48 85 47 60                    -  test [rdi+60],rax
"Dishonored2.exe"+44BD74: 74 12                          -  je Dishonored2.exe+44BD88
"Dishonored2.exe"+44BD76: B0 01                          -  mov al,01
"Dishonored2.exe"+44BD78: 48 8B 5C 24 30                 -  mov rbx,[rsp+30]
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>35210</ID>
      <Description>"Temp. downgrades"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>000000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>35211</ID>
          <Description>"Stop Time -&gt; Bend Time"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(hook, "Dishonored2.exe"+738BCB)
define(bytes, F3 0F 10 4C D1 24)


[ENABLE]

assert(hook, bytes)
alloc(newmem, $100, hook)

label(code)
label(return)

newmem:
code:
  movss xmm1, [rcx+rdx*8+24]
  comiss xmm1, [rcx+rdx*8+8]
  jz return
  movss xmm1, [rcx+rdx*8+8]
  jmp return

hook:
  jmp code
  nop
return:

[DISABLE]

hook:
  db bytes
  // movss xmm1,[rcx+rdx*8+24]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+738BCB

"Dishonored2.exe"+738BA3: 44 89 78 08              -  mov [rax+08],r15d
"Dishonored2.exe"+738BA7: 44 89 68 0C              -  mov [rax+0C],r13d
"Dishonored2.exe"+738BAB: E9 D9 01 00 00           -  jmp Dishonored2.exe+738D89
"Dishonored2.exe"+738BB0: 48 63 81 C4 00 00 00     -  movsxd  rax,dword ptr [rcx+000000C4]
"Dishonored2.exe"+738BB7: 0F 57 F6                 -  xorps xmm6,xmm6
"Dishonored2.exe"+738BBA: 83 F8 FF                 -  cmp eax,-01
"Dishonored2.exe"+738BBD: 7E 14                    -  jle Dishonored2.exe+738BD3
"Dishonored2.exe"+738BBF: 48 8D 14 80              -  lea rdx,[rax+rax*4]
"Dishonored2.exe"+738BC3: 48 8B 41 30              -  mov rax,[rcx+30]
"Dishonored2.exe"+738BC7: 48 8B 48 48              -  mov rcx,[rax+48]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+738BCB: F3 0F 10 4C D1 24        -  movss xmm1,[rcx+rdx*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+738BD1: EB 03                    -  jmp Dishonored2.exe+738BD6
"Dishonored2.exe"+738BD3: 0F 28 CE                 -  movaps xmm1,xmm6
"Dishonored2.exe"+738BD6: 0F 28 FE                 -  movaps xmm7,xmm6
"Dishonored2.exe"+738BD9: 0F 28 C1                 -  movaps xmm0,xmm1
"Dishonored2.exe"+738BDC: 0F 28 CE                 -  movaps xmm1,xmm6
"Dishonored2.exe"+738BDF: F3 0F 5F C8              -  maxss xmm1,xmm0
"Dishonored2.exe"+738BE3: 0F 2E CE                 -  ucomiss xmm1,xmm6
"Dishonored2.exe"+738BE6: 7A 09                    -  jp Dishonored2.exe+738BF1
"Dishonored2.exe"+738BE8: 75 07                    -  jne Dishonored2.exe+738BF1
"Dishonored2.exe"+738BEA: C6 87 D1 00 00 00 01     -  mov byte ptr [rdi+000000D1],01
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>35214</ID>
          <Description>"Disable "Blink Assault""</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(hook, "Dishonored2.exe"+9E9816)
define(bytes, 0F 2F 44 D0 24)

[ENABLE]

assert(hook, bytes)

hook:
  comiss xmm0,[rax+rdx*8+8]


[DISABLE]

hook:
  db bytes
  // comiss xmm0,[rax+rdx*8+24]

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9E9816

"Dishonored2.exe"+9E97E8: 44 0F B6 91 A5 00 00 00        -  movzx r10d,byte ptr [rcx+000000A5]
"Dishonored2.exe"+9E97F0: 49 63 81 0C 01 00 00           -  movsxd  rax,dword ptr [r9+0000010C]
"Dishonored2.exe"+9E97F7: 41 C0 EA 02                    -  shr r10l,02
"Dishonored2.exe"+9E97FB: 41 80 E2 01                    -  and r10l,01
"Dishonored2.exe"+9E97FF: 83 F8 FF                       -  cmp eax,-01
"Dishonored2.exe"+9E9802: 7E 34                          -  jle Dishonored2.exe+9E9838
"Dishonored2.exe"+9E9804: 4D 8B 80 30 03 00 00           -  mov r8,[r8+00000330]
"Dishonored2.exe"+9E980B: 48 8D 14 80                    -  lea rdx,[rax+rax*4]
"Dishonored2.exe"+9E980F: 0F 57 C0                       -  xorps xmm0,xmm0
"Dishonored2.exe"+9E9812: 49 8B 40 48                    -  mov rax,[r8+48]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9E9816: 0F 2F 44 D0 24                 -  comiss xmm0,[rax+rdx*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9E981B: 73 1B                          -  jae Dishonored2.exe+9E9838
"Dishonored2.exe"+9E981D: 41 C6 81 D3 00 00 00 01        -  mov byte ptr [r9+000000D3],01
"Dishonored2.exe"+9E9825: 45 88 91 D4 00 00 00           -  mov [r9+000000D4],r10l
"Dishonored2.exe"+9E982C: EB 0A                          -  jmp Dishonored2.exe+9E9838
"Dishonored2.exe"+9E982E: 66 41 C7 81 D3 00 00 00 00 00  -  mov word ptr [r9+000000D3],0000
"Dishonored2.exe"+9E9838: 49 8B 41 18                    -  mov rax,[r9+18]
"Dishonored2.exe"+9E983C: 80 78 74 00                    -  cmp byte ptr [rax+74],00
"Dishonored2.exe"+9E9840: 74 17                          -  je Dishonored2.exe+9E9859
"Dishonored2.exe"+9E9842: 41 80 79 20 00                 -  cmp byte ptr [r9+20],00
"Dishonored2.exe"+9E9847: 74 10                          -  je Dishonored2.exe+9E9859
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>35216</ID>
          <Description>"Disable "Shadow Kill""</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(unaware_hook, "Dishonored2.exe"+69CB56)
define(aware_hook, "Dishonored2.exe"+69CB83)
define(swarm_hook, "Dishonored2.exe"+69CBAF)

define(bytes, F3 41 0F 10 44 CA 24)

[ENABLE]

assert(unaware_hook, bytes)
assert(aware_hook, bytes)
assert(swarm_hook, bytes)

unaware_hook:
  movss xmm0,[r10+rcx*8+08]

aware_hook:
  movss xmm0,[r10+rcx*8+08]

swarm_hook:
  movss xmm0,[r10+rcx*8+08]

[DISABLE]

unaware_hook:
  db bytes
  // movss xmm0,[r10+rcx*8+24]

aware_hook:
  db bytes
  // movss xmm0,[r10+rcx*8+24]

swarm_hook:
  db bytes
  // movss xmm0,[r10+rcx*8+24]

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+69CB56
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+69CB83
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+69CBAF

"Dishonored2.exe"+69CB3F: 48 83 C4 50           -  add rsp,50
"Dishonored2.exe"+69CB43: 5F                    -  pop rdi
"Dishonored2.exe"+69CB44: C3                    -  ret
"Dishonored2.exe"+69CB45: 41 83 F8 FF           -  cmp r8d,-01
"Dishonored2.exe"+69CB49: 0F 8E 83 FE FF FF     -  jng Dishonored2.exe+69C9D2
"Dishonored2.exe"+69CB4F: 49 63 C0              -  movsxd  rax,r8d
"Dishonored2.exe"+69CB52: 48 8D 0C 80           -  lea rcx,[rax+rax*4]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+69CB56: F3 41 0F 10 44 CA 24  -  movss xmm0,[r10+rcx*8+24]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+69CB5D: 41 0F 2E 44 CA 08     -  ucomiss xmm0,[r10+rcx*8+08]
"Dishonored2.exe"+69CB63: 7A 06                 -  jp Dishonored2.exe+69CB6B
"Dishonored2.exe"+69CB65: 0F 84 67 FE FF FF     -  je Dishonored2.exe+69C9D2
"Dishonored2.exe"+69CB6B: 41 B3 01              -  mov r11l,01
"Dishonored2.exe"+69CB6E: E9 62 FE FF FF        -  jmp Dishonored2.exe+69C9D5
"Dishonored2.exe"+69CB73: 83 FA FF              -  cmp edx,-01
"Dishonored2.exe"+69CB76: 0F 8E D7 FE FF FF     -  jng Dishonored2.exe+69CA53
"Dishonored2.exe"+69CB7C: 48 63 C2              -  movsxd  rax,edx
"Dishonored2.exe"+69CB7F: 48 8D 0C 80           -  lea rcx,[rax+rax*4]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+69CB83: F3 41 0F 10 44 CA 24  -  movss xmm0,[r10+rcx*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+69CB8A: 41 0F 2E 44 CA 08     -  ucomiss xmm0,[r10+rcx*8+08]
"Dishonored2.exe"+69CB90: 7A 06                 -  jp Dishonored2.exe+69CB98
"Dishonored2.exe"+69CB92: 0F 84 BB FE FF FF     -  je Dishonored2.exe+69CA53
"Dishonored2.exe"+69CB98: B0 01                 -  mov al,01
"Dishonored2.exe"+69CB9A: E9 B6 FE FF FF        -  jmp Dishonored2.exe+69CA55
"Dishonored2.exe"+69CB9F: 83 FA FF              -  cmp edx,-01
"Dishonored2.exe"+69CBA2: 0F 8E 4B FF FF FF     -  jng Dishonored2.exe+69CAF3
"Dishonored2.exe"+69CBA8: 48 63 C2              -  movsxd  rax,edx
"Dishonored2.exe"+69CBAB: 48 8D 0C 80           -  lea rcx,[rax+rax*4]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+69CBAF: F3 41 0F 10 44 CA 24  -  movss xmm0,[r10+rcx*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+69CBB6: 41 0F 2E 44 CA 08     -  ucomiss xmm0,[r10+rcx*8+08]
"Dishonored2.exe"+69CBBC: 7A 06                 -  jp Dishonored2.exe+69CBC4
"Dishonored2.exe"+69CBBE: 0F 84 2F FF FF FF     -  je Dishonored2.exe+69CAF3
"Dishonored2.exe"+69CBC4: B0 01                 -  mov al,01
"Dishonored2.exe"+69CBC6: E9 2A FF FF FF        -  jmp Dishonored2.exe+69CAF5
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>35219</ID>
          <Description>"Disable "Greater Windblast""</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(hook, "Dishonored2.exe"+50B630)
define(bytes, F3 42 0F 10 44 C0 24)

define(hook2, "Dishonored2.exe"+5BBF91)
define(bytes2, F3 0F 10 44 D1 24)

[ENABLE]

assert(hook, bytes)
assert(hook2, bytes2)

hook:
  movss xmm0,[rax+r8*8+8]

hook2:
  movss xmm0,[rcx+rdx*8+8]

[DISABLE]

hook:
  db bytes
  // movss xmm0,[rax+r8*8+24]

hook2:
  db bytes2
  // movss xmm0,[rcx+rdx*8+24]

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+50B630

"Dishonored2.exe"+50B604: 44 0F 29 74 24 50           -  movaps [rsp+50],xmm14
"Dishonored2.exe"+50B60A: 44 0F 29 7C 24 40           -  movaps [rsp+40],xmm15
"Dishonored2.exe"+50B610: 48 8B 71 08                 -  mov rsi,[rcx+08]
"Dishonored2.exe"+50B614: 4C 8B 51 48                 -  mov r10,[rcx+48]
"Dishonored2.exe"+50B618: 4C 8B 49 30                 -  mov r9,[rcx+30]
"Dishonored2.exe"+50B61C: 48 63 81 B0 00 00 00        -  movsxd  rax,dword ptr [rcx+000000B0]
"Dishonored2.exe"+50B623: 83 F8 FF                    -  cmp eax,-01
"Dishonored2.exe"+50B626: 7E 1D                       -  jle Dishonored2.exe+50B645
"Dishonored2.exe"+50B628: 4C 8D 04 80                 -  lea r8,[rax+rax*4]
"Dishonored2.exe"+50B62C: 49 8B 41 48                 -  mov rax,[r9+48]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+50B630: F3 42 0F 10 44 C0 24        -  movss xmm0,[rax+r8*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+50B637: 42 0F 2E 44 C0 08           -  ucomiss xmm0,[rax+r8*8+08]
"Dishonored2.exe"+50B63D: 7A 02                       -  jp Dishonored2.exe+50B641
"Dishonored2.exe"+50B63F: 74 04                       -  je Dishonored2.exe+50B645
"Dishonored2.exe"+50B641: B0 01                       -  mov al,01
"Dishonored2.exe"+50B643: EB 02                       -  jmp Dishonored2.exe+50B647
"Dishonored2.exe"+50B645: 32 C0                       -  xor al,al
"Dishonored2.exe"+50B647: 45 33 C0                    -  xor r8d,r8d
"Dishonored2.exe"+50B64A: 84 C0                       -  test al,al
"Dishonored2.exe"+50B64C: 41 0F 95 C0                 -  setne r8l
"Dishonored2.exe"+50B650: 48 63 81 B4 00 00 00        -  movsxd  rax,dword ptr [rcx+000000B4]
}

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+5BBF91

"Dishonored2.exe"+5BBF62: E8 59 10 00 00        -  call Dishonored2.exe+5BCFC0
"Dishonored2.exe"+5BBF67: 48 8B 43 08           -  mov rax,[rbx+08]
"Dishonored2.exe"+5BBF6B: 80 B8 70 01 00 00 00  -  cmp byte ptr [rax+00000170],00
"Dishonored2.exe"+5BBF72: 0F 84 2A 01 00 00     -  je Dishonored2.exe+5BC0A2
"Dishonored2.exe"+5BBF78: 48 63 43 28           -  movsxd  rax,dword ptr [rbx+28]
"Dishonored2.exe"+5BBF7C: 83 F8 FF              -  cmp eax,-01
"Dishonored2.exe"+5BBF7F: 0F 8E 1D 01 00 00     -  jng Dishonored2.exe+5BC0A2
"Dishonored2.exe"+5BBF85: 48 8D 14 80           -  lea rdx,[rax+rax*4]
"Dishonored2.exe"+5BBF89: 48 8B 43 20           -  mov rax,[rbx+20]
"Dishonored2.exe"+5BBF8D: 48 8B 48 48           -  mov rcx,[rax+48]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+5BBF91: F3 0F 10 44 D1 24     -  movss xmm0,[rcx+rdx*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+5BBF97: 0F 2E 44 D1 08        -  ucomiss xmm0,[rcx+rdx*8+08]
"Dishonored2.exe"+5BBF9C: 7A 06                 -  jp Dishonored2.exe+5BBFA4
"Dishonored2.exe"+5BBF9E: 0F 84 FE 00 00 00     -  je Dishonored2.exe+5BC0A2
"Dishonored2.exe"+5BBFA4: 45 84 FF              -  test r15l,r15l
"Dishonored2.exe"+5BBFA7: 0F 85 F5 00 00 00     -  jne Dishonored2.exe+5BC0A2
"Dishonored2.exe"+5BBFAD: 40 84 F6              -  test sil,sil
"Dishonored2.exe"+5BBFB0: 0F 84 EC 00 00 00     -  je Dishonored2.exe+5BC0A2
"Dishonored2.exe"+5BBFB6: 48 8B D7              -  mov rdx,rdi
"Dishonored2.exe"+5BBFB9: 48 8B CB              -  mov rcx,rbx
"Dishonored2.exe"+5BBFBC: E8 3F 13 00 00        -  call Dishonored2.exe+5BD300
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>35239</ID>
          <Description>"Summon peaceful Doppelgängers"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(hook1, "Dishonored2.exe"+4FE6AF)
define(bytes1, F3 0F 10 4C D1 24)

define(hook2, "Dishonored2.exe"+4FE62B)
define(bytes2, F3 0F 10 4C D0 24)

[ENABLE]

assert(hook1, bytes1)
assert(hook2, bytes2)

hook1:
  movss xmm1,[rcx+rdx*8+8]

hook2:
  movss xmm1,[rax+rdx*8+8]

[DISABLE]

hook1:
  db bytes1
  // movss xmm1,[rcx+rdx*8+24]

hook2:
  db bytes2
  // movss xmm1,[rax+rdx*8+24]

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+4FE6AF

"Dishonored2.exe"+4FE68E: C3                       -  ret
"Dishonored2.exe"+4FE68F: CC                       -  int 3
"Dishonored2.exe"+4FE690: 48 63 91 0C 01 00 00     -  movsxd  rdx,dword ptr [rcx+0000010C]
"Dishonored2.exe"+4FE697: 48 8B 41 08              -  mov rax,[rcx+08]
"Dishonored2.exe"+4FE69B: 83 FA FF                 -  cmp edx,-01
"Dishonored2.exe"+4FE69E: 7E 22                    -  jle Dishonored2.exe+4FE6C2
"Dishonored2.exe"+4FE6A0: 4C 8B 41 30              -  mov r8,[rcx+30]
"Dishonored2.exe"+4FE6A4: 48 8D 14 92              -  lea rdx,[rdx+rdx*4]
"Dishonored2.exe"+4FE6A8: 0F 57 C0                 -  xorps xmm0,xmm0
"Dishonored2.exe"+4FE6AB: 49 8B 48 48              -  mov rcx,[r8+48]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+4FE6AF: F3 0F 10 4C D1 24        -  movss xmm1,[rcx+rdx*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+4FE6B5: 0F 2F C8                 -  comiss xmm1,xmm0
"Dishonored2.exe"+4FE6B8: 76 08                    -  jna Dishonored2.exe+4FE6C2
"Dishonored2.exe"+4FE6BA: 48 8B 80 C0 01 00 00     -  mov rax,[rax+000001C0]
"Dishonored2.exe"+4FE6C1: C3                       -  ret
"Dishonored2.exe"+4FE6C2: 48 8B 80 B8 01 00 00     -  mov rax,[rax+000001B8]
"Dishonored2.exe"+4FE6C9: C3                       -  ret
"Dishonored2.exe"+4FE6CA: CC                       -  int 3
"Dishonored2.exe"+4FE6CB: CC                       -  int 3
"Dishonored2.exe"+4FE6CC: CC                       -  int 3
"Dishonored2.exe"+4FE6CD: CC                       -  int 3
}
{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+4FE62B

"Dishonored2.exe"+4FE60A: 48 83 C4 50           -  add rsp,50
"Dishonored2.exe"+4FE60E: 5B                    -  pop rbx
"Dishonored2.exe"+4FE60F: C3                    -  ret
"Dishonored2.exe"+4FE610: 48 63 81 0C 01 00 00  -  movsxd  rax,dword ptr [rcx+0000010C]
"Dishonored2.exe"+4FE617: 0F 57 C0              -  xorps xmm0,xmm0
"Dishonored2.exe"+4FE61A: 83 F8 FF              -  cmp eax,-01
"Dishonored2.exe"+4FE61D: 7E 19                 -  jle Dishonored2.exe+4FE638
"Dishonored2.exe"+4FE61F: 4C 8B 41 30           -  mov r8,[rcx+30]
"Dishonored2.exe"+4FE623: 48 8D 14 80           -  lea rdx,[rax+rax*4]
"Dishonored2.exe"+4FE627: 49 8B 40 48           -  mov rax,[r8+48]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+4FE62B: F3 0F 10 4C D0 24     -  movss xmm1,[rax+rdx*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+4FE631: 0F 2F C8              -  comiss xmm1,xmm0
"Dishonored2.exe"+4FE634: 0F 97 C0              -  seta al
"Dishonored2.exe"+4FE637: C3                    -  ret
"Dishonored2.exe"+4FE638: 0F 28 C8              -  movaps xmm1,xmm0
"Dishonored2.exe"+4FE63B: 0F 2F C8              -  comiss xmm1,xmm0
"Dishonored2.exe"+4FE63E: 0F 97 C0              -  seta al
"Dishonored2.exe"+4FE641: C3                    -  ret
"Dishonored2.exe"+4FE642: CC                    -  int 3
"Dishonored2.exe"+4FE643: CC                    -  int 3
"Dishonored2.exe"+4FE644: CC                    -  int 3
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>567986</ID>
          <Description>"Disable "Snap Reaction""</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(address,"Dishonored2.exe"+963C36)
define(bytes,F3 42 0F 10 4C C0 24)

[ENABLE]

assert(address,bytes)

address:
  movss xmm1,[rax+r8*8+8]

[DISABLE]

address:
  db bytes
  // movss xmm1,[rax+r8*8+24]

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+963C36

"Dishonored2.exe"+963C0F: CC                          -  int 3 
"Dishonored2.exe"+963C10: 48 83 EC 38                 -  sub rsp,38
"Dishonored2.exe"+963C14: 48 8B 41 10                 -  mov rax,[rcx+10]
"Dishonored2.exe"+963C18: 4C 8B 88 08 04 00 00        -  mov r9,[rax+00000408]
"Dishonored2.exe"+963C1F: 49 63 81 10 01 00 00        -  movsxd  rax,dword ptr [r9+00000110]
"Dishonored2.exe"+963C26: 83 F8 FF                    -  cmp eax,-01
"Dishonored2.exe"+963C29: 7E 47                       -  jle Dishonored2.exe+963C72
"Dishonored2.exe"+963C2B: 4C 8D 04 80                 -  lea r8,[rax+rax*4]
"Dishonored2.exe"+963C2F: 49 8B 41 48                 -  mov rax,[r9+48]
"Dishonored2.exe"+963C33: 0F 57 C0                    -  xorps xmm0,xmm0
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+963C36: F3 42 0F 10 4C C0 24        -  movss xmm1,[rax+r8*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+963C3D: 0F 2F C8                    -  comiss xmm1,xmm0
"Dishonored2.exe"+963C40: 76 30                       -  jna Dishonored2.exe+963C72
"Dishonored2.exe"+963C42: 48 8B 49 58                 -  mov rcx,[rcx+58]
"Dishonored2.exe"+963C46: 48 83 B9 90 00 00 00 00     -  cmp qword ptr [rcx+00000090],00
"Dishonored2.exe"+963C4E: 74 22                       -  je Dishonored2.exe+963C72
"Dishonored2.exe"+963C50: 48 8D 54 24 20              -  lea rdx,[rsp+20]
"Dishonored2.exe"+963C55: 48 81 C1 20 02 00 00        -  add rcx,00000220
"Dishonored2.exe"+963C5C: C7 44 24 20 01 00 00 00     -  mov [rsp+20],00000001
"Dishonored2.exe"+963C64: 48 C7 44 24 24 24 00 00 00  -  mov qword ptr [rsp+24],00000024
"Dishonored2.exe"+963C6D: E8 9E AA 00 00              -  call Dishonored2.exe+96E710
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>35215</ID>
          <Description>"Disable "Superior Deflection""</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(hook, "Dishonored2.exe"+9D443B)
define(bytes, F3 41 0F 10 44 C1 24)

[ENABLE]

assert(hook, bytes)

hook:
  movss xmm0,[r9+rax*8+8]

[DISABLE]

hook:
  db bytes
  // movss xmm0,[r9+rax*8+24]

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9D443B

"Dishonored2.exe"+9D4413: 4D 8B 48 48                 -  mov r9,[r8+48]
"Dishonored2.exe"+9D4417: F3 41 0F 10 44 C1 24        -  movss xmm0,[r9+rax*8+24]
"Dishonored2.exe"+9D441E: 41 0F 2E 44 C1 08           -  ucomiss xmm0,[r9+rax*8+08]
"Dishonored2.exe"+9D4424: 7A 02                       -  jp Dishonored2.exe+9D4428
"Dishonored2.exe"+9D4426: 74 57                       -  je Dishonored2.exe+9D447F
"Dishonored2.exe"+9D4428: 48 63 81 84 00 00 00        -  movsxd  rax,dword ptr [rcx+00000084]
"Dishonored2.exe"+9D442F: 83 F8 FF                    -  cmp eax,-01
"Dishonored2.exe"+9D4432: 7E 1C                       -  jle Dishonored2.exe+9D4450
"Dishonored2.exe"+9D4434: 48 8B C8                    -  mov rcx,rax
"Dishonored2.exe"+9D4437: 48 8D 04 80                 -  lea rax,[rax+rax*4]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9D443B: F3 41 0F 10 44 C1 24        -  movss xmm0,[r9+rax*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9D4442: 41 0F 2E 44 C1 08           -  ucomiss xmm0,[r9+rax*8+08]
"Dishonored2.exe"+9D4448: 7A 02                       -  jp Dishonored2.exe+9D444C
"Dishonored2.exe"+9D444A: 74 04                       -  je Dishonored2.exe+9D4450
"Dishonored2.exe"+9D444C: B1 01                       -  mov cl,01
"Dishonored2.exe"+9D444E: EB 02                       -  jmp Dishonored2.exe+9D4452
"Dishonored2.exe"+9D4450: 32 C9                       -  xor cl,cl
"Dishonored2.exe"+9D4452: 8B 47 38                    -  mov eax,[rdi+38]
"Dishonored2.exe"+9D4455: F3 41 0F 10 82 FC 00 00 00  -  movss xmm0,[r10+000000FC]
"Dishonored2.exe"+9D445E: 89 44 24 48                 -  mov [rsp+48],eax
"Dishonored2.exe"+9D4462: 0F 2F 44 24 48              -  comiss xmm0,[rsp+48]
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>4852</ID>
      <Description>"Unlim. abilities"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>000000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>35254</ID>
          <Description>"Inf. health"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(object_damage_hook, "Dishonored2.exe"+854B67)
define(bytes, E8 44 D7 FF FF)

[ENABLE]

assert(object_damage_hook, bytes)
alloc(newmem, $100, object_damage_hook)

label(player)
label(code)
label(return)

newmem:
player:
  db 'player1',0

code:
  mov r12, [rbx+10]
  mov r12, [r12+30]
  xor r12, [player]
  jnz @f

  mov dword ptr [rbx+20], (float)150
  jmp return

@@:
  call "Dishonored2.exe"+8522B0
  jmp return

object_damage_hook:
  jmp code
return:

[DISABLE]

object_damage_hook:
  db bytes
  // call Dishonored2.exe+8522B0

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+854B67

"Dishonored2.exe"+854B3F: 48 89 78 E0              -  mov [rax-20],rdi
"Dishonored2.exe"+854B43: 4C 89 60 D8              -  mov [rax-28],r12
"Dishonored2.exe"+854B47: 4C 89 78 C8              -  mov [rax-38],r15
"Dishonored2.exe"+854B4B: 33 FF                    -  xor edi,edi
"Dishonored2.exe"+854B4D: 49 8B F0                 -  mov rsi,r8
"Dishonored2.exe"+854B50: 89 BC 24 C0 00 00 00     -  mov [rsp+000000C0],edi
"Dishonored2.exe"+854B57: 41 80 48 18 08           -  or byte ptr [r8+18],08
"Dishonored2.exe"+854B5C: 4C 8B FA                 -  mov r15,rdx
"Dishonored2.exe"+854B5F: 44 0F 29 40 98           -  movaps [rax-68],xmm8
"Dishonored2.exe"+854B64: 48 8B D9                 -  mov rbx,rcx
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+854B67: E8 44 D7 FF FF           -  call Dishonored2.exe+8522B0
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+854B6C: 80 66 18 F7              -  and byte ptr [rsi+18],-09
"Dishonored2.exe"+854B70: F3 44 0F 10 1E           -  movss xmm11,[rsi]
"Dishonored2.exe"+854B75: 45 0F 57 D2              -  xorps xmm10,xmm10
"Dishonored2.exe"+854B79: 8B 43 1C                 -  mov eax,[rbx+1C]
"Dishonored2.exe"+854B7C: 4D 8B 67 10              -  mov r12,[r15+10]
"Dishonored2.exe"+854B80: 24 0C                    -  and al,0C
"Dishonored2.exe"+854B82: 3C 08                    -  cmp al,08
"Dishonored2.exe"+854B84: 72 60                    -  jb Dishonored2.exe+854BE6
"Dishonored2.exe"+854B86: 48 8B 43 10              -  mov rax,[rbx+10]
"Dishonored2.exe"+854B8A: F6 80 D1 00 00 00 08     -  test byte ptr [rax+000000D1],08
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>35251</ID>
          <Description>"Damage immunity"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(player_damage_hook, "Dishonored2.exe"+8CF026)
define(player_damage_bytes, E8 B5 2F F8 FF)

[ENABLE]

assert(player_damage_hook, player_damage_bytes)

player_damage_hook:
  db 90 90 90 90 90

[DISABLE]

player_damage_hook:
  db player_damage_bytes
  // call Dishonored2.exe+851FE0

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+8CF026

"Dishonored2.exe"+8CF00A: 88 4D F0              -  mov [rbp-10],cl
"Dishonored2.exe"+8CF00D: 48 85 C0              -  test rax,rax
"Dishonored2.exe"+8CF010: 74 1D                 -  je Dishonored2.exe+8CF02F
"Dishonored2.exe"+8CF012: 8B 40 1C              -  mov eax,[rax+1C]
"Dishonored2.exe"+8CF015: 83 E0 03              -  and eax,03
"Dishonored2.exe"+8CF018: 3C 03                 -  cmp al,03
"Dishonored2.exe"+8CF01A: 74 13                 -  je Dishonored2.exe+8CF02F
"Dishonored2.exe"+8CF01C: 49 8B C9              -  mov rcx,r9
"Dishonored2.exe"+8CF01F: 4C 8D 45 D8           -  lea r8,[rbp-28]
"Dishonored2.exe"+8CF023: 49 8B D6              -  mov rdx,r14
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+8CF026: E8 B5 2F F8 FF        -  call Dishonored2.exe+851FE0
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+8CF02B: 48 8B 7D E8           -  mov rdi,[rbp-18]
"Dishonored2.exe"+8CF02F: 48 8B 45 D8           -  mov rax,[rbp-28]
"Dishonored2.exe"+8CF033: 48 89 03              -  mov [rbx],rax
"Dishonored2.exe"+8CF036: 48 8B 45 E0           -  mov rax,[rbp-20]
"Dishonored2.exe"+8CF03A: 48 89 43 08           -  mov [rbx+08],rax
"Dishonored2.exe"+8CF03E: 48 8B 45 F0           -  mov rax,[rbp-10]
"Dishonored2.exe"+8CF042: 48 89 7B 10           -  mov [rbx+10],rdi
"Dishonored2.exe"+8CF046: 48 89 43 18           -  mov [rbx+18],rax
"Dishonored2.exe"+8CF04A: 4C 8D 5C 24 70        -  lea r11,[rsp+70]
"Dishonored2.exe"+8CF04F: 48 8B C3              -  mov rax,rbx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4021</ID>
          <Description>"Inf. mana"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(hook, "Dishonored2.exe"+888589)
define(bytes, F3 0F 11 4B 20)

[ENABLE]

assert(hook, bytes)
alloc(newmem, $60, hook)

label(code)
label(return)

newmem:
  dd (float)150
code:
  movss xmm1, [newmem]
  movss [rbx+20], xmm1
  jmp return

hook:
  jmp code
return:

[DISABLE]

hook:
  db bytes
  // movss [rbx+20], xmm1

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+888589

"Dishonored2.exe"+88856B: 0F 28 C2                 -  movaps xmm0,xmm2
"Dishonored2.exe"+88856E: F3 0F 58 D8              -  addss xmm3,xmm0
"Dishonored2.exe"+888572: 0F 2F D1                 -  comiss xmm2,xmm1
"Dishonored2.exe"+888575: F3 0F 10 7B 20           -  movss xmm7,[rbx+20]
"Dishonored2.exe"+88857A: 76 05                    -  jna Dishonored2.exe+888581
"Dishonored2.exe"+88857C: 0F 28 CA                 -  movaps xmm1,xmm2
"Dishonored2.exe"+88857F: EB 08                    -  jmp Dishonored2.exe+888589
"Dishonored2.exe"+888581: 0F 2F CB                 -  comiss xmm1,xmm3
"Dishonored2.exe"+888584: 76 03                    -  jna Dishonored2.exe+888589
"Dishonored2.exe"+888586: 0F 28 CB                 -  movaps xmm1,xmm3
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+888589: F3 0F 11 4B 20           -  movss [rbx+20],xmm1
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+88858E: 45 84 C9                 -  test r9l,r9l
"Dishonored2.exe"+888591: 75 27                    -  jne Dishonored2.exe+8885BA
"Dishonored2.exe"+888593: F3 0F 10 63 2C           -  movss xmm4,[rbx+2C]
"Dishonored2.exe"+888598: 0F 28 C7                 -  movaps xmm0,xmm7
"Dishonored2.exe"+88859B: F3 0F 5C C1              -  subss xmm0,xmm1
"Dishonored2.exe"+88859F: F3 0F 5C E0              -  subss xmm4,xmm0
"Dishonored2.exe"+8885A3: 0F 2F D4                 -  comiss xmm2,xmm4
"Dishonored2.exe"+8885A6: 77 0D                    -  ja Dishonored2.exe+8885B5
"Dishonored2.exe"+8885A8: 0F 2F E3                 -  comiss xmm4,xmm3
"Dishonored2.exe"+8885AB: 76 05                    -  jna Dishonored2.exe+8885B2
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4794</ID>
          <Description>"Inf. swimming breath"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(hook, "Dishonored2.exe"+9BC3F5)
define(bytes, F3 0F 10 4C D1 24)

[ENABLE]

assert(hook, bytes)
alloc(newmem, $100, hook)

label(code)

newmem:
  dd 0

code:
  movss xmm1, [newmem]
  mov rcx, [r14+350]
  mov [rcx+40], (float)100
  jmp Dishonored2.exe+9BC407

hook:
  jmp code
  nop

[DISABLE]

hook:
  db bytes
  // movss xmm1,[rcx+rdx*8+24]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9BC3F5

"Dishonored2.exe"+9BC3CB: 8B 8C D0 50 74 2E 00     -  mov ecx,[rax+rdx*8+002E7450]
"Dishonored2.exe"+9BC3D2: 89 4D 60                 -  mov [rbp+60],ecx
"Dishonored2.exe"+9BC3D5: F3 44 0F 10 45 60        -  movss xmm8,[rbp+60]
"Dishonored2.exe"+9BC3DB: 74 54                    -  je Dishonored2.exe+9BC431
"Dishonored2.exe"+9BC3DD: 48 63 46 78              -  movsxd  rax,dword ptr [rsi+78]
"Dishonored2.exe"+9BC3E1: 83 F8 FF                 -  cmp eax,-01
"Dishonored2.exe"+9BC3E4: 7E 17                    -  jle Dishonored2.exe+9BC3FD
"Dishonored2.exe"+9BC3E6: 48 8D 14 80              -  lea rdx,[rax+rax*4]
"Dishonored2.exe"+9BC3EA: 49 8B 86 30 03 00 00     -  mov rax,[r14+00000330]
"Dishonored2.exe"+9BC3F1: 48 8B 48 48              -  mov rcx,[rax+48]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9BC3F5: F3 0F 10 4C D1 24        -  movss xmm1,[rcx+rdx*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9BC3FB: EB 03                    -  jmp Dishonored2.exe+9BC400
"Dishonored2.exe"+9BC3FD: 0F 28 CF                 -  movaps xmm1,xmm7
"Dishonored2.exe"+9BC400: 49 8B 8E 50 03 00 00     -  mov rcx,[r14+00000350]
"Dishonored2.exe"+9BC407: 41 0F 28 C0              -  movaps xmm0,xmm8
"Dishonored2.exe"+9BC40B: 0F 28 DF                 -  movaps xmm3,xmm7
"Dishonored2.exe"+9BC40E: C7 45 60 00 00 00 00     -  mov [rbp+60],00000000
"Dishonored2.exe"+9BC415: 8B 45 60                 -  mov eax,[rbp+60]
"Dishonored2.exe"+9BC418: F3 0F 59 C1              -  mulss xmm0,xmm1
"Dishonored2.exe"+9BC41C: 89 41 44                 -  mov [rcx+44],eax
"Dishonored2.exe"+9BC41F: F3 0F 10 49 40           -  movss xmm1,[rcx+40]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4163</ID>
          <Description>"Inf. Bend Time"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(hook, "Dishonored2.exe"+8C1B51)
define(bytes, F3 0F 11 43 08)


[ENABLE]

assert(hook, bytes)

hook:
  db 90 90 90 90 90

[DISABLE]

hook:
  db bytes
  // movss [rbx+08],xmm0

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+8C1B51

"Dishonored2.exe"+8C1B24: 48 8D 54 24 70           -  lea rdx,[rsp+70]
"Dishonored2.exe"+8C1B29: 49 8B CF                 -  mov rcx,r15
"Dishonored2.exe"+8C1B2C: 49 03 DE                 -  add rbx,r14
"Dishonored2.exe"+8C1B2F: 4C 8B C3                 -  mov r8,rbx
"Dishonored2.exe"+8C1B32: E8 59 02 00 00           -  call Dishonored2.exe+8C1D90
"Dishonored2.exe"+8C1B37: 8B 44 24 70              -  mov eax,[rsp+70]
"Dishonored2.exe"+8C1B3B: 4C 8B 05 26 F2 E4 01     -  mov r8,[Dishonored2.exe+2710D68]
"Dishonored2.exe"+8C1B42: F3 0F 10 43 08           -  movss xmm0,[rbx+08]
"Dishonored2.exe"+8C1B47: 89 44 24 78              -  mov [rsp+78],eax
"Dishonored2.exe"+8C1B4B: F3 0F 5C 44 24 78        -  subss xmm0,[rsp+78]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+8C1B51: F3 0F 11 43 08           -  movss [rbx+08],xmm0
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+8C1B56: 8B 03                    -  mov eax,[rbx]
"Dishonored2.exe"+8C1B58: 3D 10 00 FF 3F           -  cmp eax,3FFF0010
"Dishonored2.exe"+8C1B5D: 0F 84 81 00 00 00        -  je Dishonored2.exe+8C1BE4
"Dishonored2.exe"+8C1B63: 8B C8                    -  mov ecx,eax
"Dishonored2.exe"+8C1B65: C1 F9 10                 -  sar ecx,10
"Dishonored2.exe"+8C1B68: 48 63 C9                 -  movsxd  rcx,ecx
"Dishonored2.exe"+8C1B6B: 49 8B 94 C8 F8 2F 31 00  -  mov rdx,[r8+rcx*8+00312FF8]
"Dishonored2.exe"+8C1B73: 48 85 D2                 -  test rdx,rdx
"Dishonored2.exe"+8C1B76: 74 11                    -  je Dishonored2.exe+8C1B89
"Dishonored2.exe"+8C1B78: 39 82 A8 00 00 00        -  cmp [rdx+000000A8],eax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4768</ID>
          <Description>"Inf. Dark Vision"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(hook, "Dishonored2.exe"+577E60)
define(bytes, F3 41 0F 58 BE E8 00 00 00)

[ENABLE]

assert(hook, bytes)
alloc(newmem, $100, hook)

label(code)
label(return)

newmem:
  dd (float)5

code:
  movss xmm7, [newmem]
  jmp return

hook:
  jmp code
  db 90 90 90 90
return:

[DISABLE]

hook:
  db bytes
  // addss xmm7,dword ptr [r14+000000E8]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+577E60

"Dishonored2.exe"+577E37: 4C 8B 81 30 03 00 00        -  mov r8,[rcx+00000330]
"Dishonored2.exe"+577E3E: 49 8B 40 48                 -  mov rax,[r8+48]
"Dishonored2.exe"+577E42: F3 0F 10 44 D0 24           -  movss xmm0,[rax+rdx*8+24]
"Dishonored2.exe"+577E48: 41 0F 2E C0                 -  ucomiss xmm0,xmm8
"Dishonored2.exe"+577E4C: 7A 02                       -  jp Dishonored2.exe+577E50
"Dishonored2.exe"+577E4E: 74 10                       -  je Dishonored2.exe+577E60
"Dishonored2.exe"+577E50: 49 8B 4E 38                 -  mov rcx,[r14+38]
"Dishonored2.exe"+577E54: 0F 28 CF                    -  movaps xmm1,xmm7
"Dishonored2.exe"+577E57: F3 0F 59 C8                 -  mulss xmm1,xmm0
"Dishonored2.exe"+577E5B: E8 F0 E4 2D 00              -  call Dishonored2.exe+856350
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+577E60: F3 41 0F 58 BE E8 00 00 00  -  addss xmm7,dword ptr [r14+000000E8]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+577E69: 4D 8D BE A0 01 00 00        -  lea r15,[r14+000001A0]
"Dishonored2.exe"+577E70: F3 41 0F 11 BE E8 00 00 00  -  movss [r14+000000E8],xmm7
"Dishonored2.exe"+577E79: 4D 8D A7 60 01 00 00        -  lea r12,[r15+00000160]
"Dishonored2.exe"+577E80: 0F 28 BC 24 90 00 00 00     -  movaps xmm7,[rsp+00000090]
"Dishonored2.exe"+577E88: 4D 3B FC                    -  cmp r15,r12
"Dishonored2.exe"+577E8B: 0F 84 C1 01 00 00           -  je Dishonored2.exe+578052
"Dishonored2.exe"+577E91: 41 8B 07                    -  mov eax,[r15]
"Dishonored2.exe"+577E94: 83 F8 FF                    -  cmp eax,-01
"Dishonored2.exe"+577E97: 0F 84 A8 01 00 00           -  je Dishonored2.exe+578045
"Dishonored2.exe"+577E9D: 48 8B 0D C4 8E 19 02        -  mov rcx,[Dishonored2.exe+2710D68]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>35224</ID>
          <Description>"Inf. Possession"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(address,"Dishonored2.exe"+99048A)
define(bytes, F3 0F 11 81 98 02 00 00)

[ENABLE]

assert(address, bytes)

address:
  movss xmm0, [rcx+29C]

[DISABLE]

address:
  db bytes  // movss [rcx+00000298],xmm0

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+99048A

"Dishonored2.exe"+99046C: CC                       -  int 3
"Dishonored2.exe"+99046D: CC                       -  int 3
"Dishonored2.exe"+99046E: CC                       -  int 3
"Dishonored2.exe"+99046F: CC                       -  int 3
"Dishonored2.exe"+990470: 89 54 24 10              -  mov [rsp+10],edx
"Dishonored2.exe"+990474: 57                       -  push rdi
"Dishonored2.exe"+990475: 48 83 EC 20              -  sub rsp,20
"Dishonored2.exe"+990479: F3 0F 10 44 24 38        -  movss xmm0,[rsp+38]
"Dishonored2.exe"+99047F: 48 8B F9                 -  mov rdi,rcx
"Dishonored2.exe"+990482: F3 0F 58 81 98 02 00 00  -  addss xmm0,dword ptr [rcx+00000298]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+99048A: F3 0F 11 81 98 02 00 00  -  movss [rcx+00000298],xmm0
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+990492: F3 0F 10 89 90 02 00 00  -  movss xmm1,[rcx+00000290]
"Dishonored2.exe"+99049A: F3 0F 5C C8              -  subss xmm1,xmm0
"Dishonored2.exe"+99049E: F3 0F 10 81 9C 02 00 00  -  movss xmm0,[rcx+0000029C]
"Dishonored2.exe"+9904A6: 0F 2F C1                 -  comiss xmm0,xmm1
"Dishonored2.exe"+9904A9: 0F 82 86 00 00 00        -  jb Dishonored2.exe+990535
"Dishonored2.exe"+9904AF: 48 89 5C 24 30           -  mov [rsp+30],rbx
"Dishonored2.exe"+9904B4: 8B 99 00 03 00 00        -  mov ebx,[rcx+00000300]
"Dishonored2.exe"+9904BA: 83 FB FF                 -  cmp ebx,-01
"Dishonored2.exe"+9904BD: 74 1F                    -  je Dishonored2.exe+9904DE
"Dishonored2.exe"+9904BF: 48 8B 0D A2 08 D8 01     -  mov rcx,[Dishonored2.exe+2710D68]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>35240</ID>
          <Description>"Unlim. Doppelganger"</Description>
          <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(lifetime_address, "Dishonored2.exe"+5812F9)
define(bytes, F3 0F 11 81 D0 02 00 00)

[ENABLE]

assert(lifetime_address, bytes)

lifetime_address:
  db 90 90 90 90 90 90 90 90

[DISABLE]

lifetime_address:
  db bytes
  // movss [rcx+000002D0],xmm0

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+5812F9

"Dishonored2.exe"+5812C4: 48 8D 05 4D B5 01 02     -  lea rax,[Dishonored2.exe+259C818]
"Dishonored2.exe"+5812CB: 48 63 04 90              -  movsxd  rax,dword ptr [rax+rdx*4]
"Dishonored2.exe"+5812CF: 48 8D 14 80              -  lea rdx,[rax+rax*4]
"Dishonored2.exe"+5812D3: 48 8B 05 8E FA 18 02     -  mov rax,[Dishonored2.exe+2710D68]
"Dishonored2.exe"+5812DA: 48 03 D2                 -  add rdx,rdx
"Dishonored2.exe"+5812DD: 8B 94 D0 50 74 2E 00     -  mov edx,[rax+rdx*8+002E7450]
"Dishonored2.exe"+5812E4: 89 54 24 30              -  mov [rsp+30],edx
"Dishonored2.exe"+5812E8: F3 0F 10 54 24 30        -  movss xmm2,[rsp+30]
"Dishonored2.exe"+5812EE: 0F 28 C2                 -  movaps xmm0,xmm2
"Dishonored2.exe"+5812F1: F3 0F 58 81 D0 02 00 00  -  addss xmm0,dword ptr [rcx+000002D0]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+5812F9: F3 0F 11 81 D0 02 00 00  -  movss [rcx+000002D0],xmm0
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+581301: F3 0F 10 89 FC 00 00 00  -  movss xmm1,[rcx+000000FC]
"Dishonored2.exe"+581309: 0F 2E 0D 88 06 AF 01     -  ucomiss xmm1,[Dishonored2.exe+2071998]
"Dishonored2.exe"+581310: 7A 02                    -  jp Dishonored2.exe+581314
"Dishonored2.exe"+581312: 74 0C                    -  je Dishonored2.exe+581320
"Dishonored2.exe"+581314: F3 0F 58 CA              -  addss xmm1,xmm2
"Dishonored2.exe"+581318: F3 0F 11 89 FC 00 00 00  -  movss [rcx+000000FC],xmm1
"Dishonored2.exe"+581320: E8 AB 00 00 00           -  call Dishonored2.exe+5813D0
"Dishonored2.exe"+581325: 8B 43 40                 -  mov eax,[rbx+40]
"Dishonored2.exe"+581328: 83 F8 FF                 -  cmp eax,-01
"Dishonored2.exe"+58132B: 74 40                    -  je Dishonored2.exe+58136D
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>35255</ID>
              <Description>"Inf. Health"</Description>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$STRICT}

define(hook, "Dishonored2.exe"+852081)
define(bytes, FF 90 D0 00 00 00)

[ENABLE]

assert(hook, bytes)
alloc(newmem, $100, hook)

label(weak)
label(tough)
label(code)
label(return)


newmem:
weak:
  db 'decoy_en'  // should be enough (full tag is decoy_entity_&lt;number&gt;)
tough:
  db 'deadlysh'  // should be enough (full tag is deadlyshadow_entity_&lt;number&gt;)

code:
  push rcx

  mov rcx, [rcx+10]
  mov rcx, [rcx+30]
  cmp rcx, [weak]
  jz short @F
  cmp rcx, [tough]
  jz short @F

  pop rcx
  call [rax+D0]
  jmp return

@@:
  pop rcx
  jmp return

hook:
  jmp code
  nop
return:

[DISABLE]

hook:
  db  bytes
  // call qword ptr [rax+000000D0]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+852081

"Dishonored2.exe"+852053: 66 0F 2F CA                    -  comisd xmm1,xmm2
"Dishonored2.exe"+852057: 76 1A                          -  jna Dishonored2.exe+852073
"Dishonored2.exe"+852059: 48 8B 47 08                    -  mov rax,[rdi+08]
"Dishonored2.exe"+85205D: 48 8B 48 70                    -  mov rcx,[rax+70]
"Dishonored2.exe"+852061: 48 B8 00 00 00 00 00 00 F0 BF  -  mov rax,BFF0000000000000
"Dishonored2.exe"+85206B: 48 89 4F 48                    -  mov [rdi+48],rcx
"Dishonored2.exe"+85206F: 48 89 47 50                    -  mov [rdi+50],rax
"Dishonored2.exe"+852073: 48 8B 07                       -  mov rax,[rdi]
"Dishonored2.exe"+852076: 48 8B CF                       -  mov rcx,rdi
"Dishonored2.exe"+852079: 48 89 AC 24 F8 00 00 00        -  mov [rsp+000000F8],rbp
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+852081: FF 90 D0 00 00 00              -  call qword ptr [rax+000000D0]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+852087: 8B 43 50                       -  mov eax,[rbx+50]
"Dishonored2.exe"+85208A: 48 8B 2D D7 EC EB 01           -  mov rbp,[Dishonored2.exe+2710D68]
"Dishonored2.exe"+852091: 3D 10 00 FF 3F                 -  cmp eax,3FFF0010
"Dishonored2.exe"+852096: 74 34                          -  je Dishonored2.exe+8520CC
"Dishonored2.exe"+852098: 8B C8                          -  mov ecx,eax
"Dishonored2.exe"+85209A: C1 F9 10                       -  sar ecx,10
"Dishonored2.exe"+85209D: 48 63 D1                       -  movsxd  rdx,ecx
"Dishonored2.exe"+8520A0: 4C 8B 84 D5 F8 2F 31 00        -  mov r8,[rbp+rdx*8+00312FF8]
"Dishonored2.exe"+8520A8: 4D 85 C0                       -  test r8,r8
"Dishonored2.exe"+8520AB: 74 1F                          -  je Dishonored2.exe+8520CC
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>35243</ID>
          <Description>"Unlim. Shadow Walk"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(time_address, "Dishonored2.exe"+73FA7A)
define(time_address_bytes, F3 0F 5C 44 24 30)

define(kills_dec_hook, "Dishonored2.exe"+9DE174)
define(kills_dec_bytes, FF 88 F0 00 00 00)

define(chokes_dec_hook, "Dishonored2.exe"+999D86)
define(chokes_dec_bytes, FF 88 F0 00 00 00)

[ENABLE]

assert(time_address, time_address_bytes)
assert(kills_dec_hook, kills_dec_bytes)
assert(chokes_dec_hook, chokes_dec_bytes)

time_address:
  db 90 90 90 90 90 90

kills_dec_hook:
  db 90 90 90 90 90 90

chokes_dec_hook:
  db 90 90 90 90 90 90

[DISABLE]

time_address:
  db time_address_bytes
  // subss xmm0,[rsp+30]

kills_dec_hook:
  db kills_dec_bytes
  // dec [rax+000000F0]

chokes_dec_hook:
  db chokes_dec_bytes
  // dec [rax+000000F0]

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+73FA7A

"Dishonored2.exe"+73FA45: 48 8B 6C 24 40           -  mov rbp,[rsp+40]
"Dishonored2.exe"+73FA4A: 48 63 88 AC 02 00 00     -  movsxd  rcx,dword ptr [rax+000002AC]
"Dishonored2.exe"+73FA51: 48 8B 74 24 48           -  mov rsi,[rsp+48]
"Dishonored2.exe"+73FA56: 48 8D 05 BB CD E5 01     -  lea rax,[Dishonored2.exe+259C818]
"Dishonored2.exe"+73FA5D: 48 63 04 88              -  movsxd  rax,dword ptr [rax+rcx*4]
"Dishonored2.exe"+73FA61: 48 8D 0C 80              -  lea rcx,[rax+rax*4]
"Dishonored2.exe"+73FA65: 48 8B 05 FC 12 FD 01     -  mov rax,[Dishonored2.exe+2710D68]
"Dishonored2.exe"+73FA6C: 48 03 C9                 -  add rcx,rcx
"Dishonored2.exe"+73FA6F: 8B 8C C8 50 74 2E 00     -  mov ecx,[rax+rcx*8+002E7450]
"Dishonored2.exe"+73FA76: 89 4C 24 30              -  mov [rsp+30],ecx
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+73FA7A: F3 0F 5C 44 24 30        -  subss xmm0,[rsp+30]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+73FA80: F3 0F 11 83 EC 00 00 00  -  movss [rbx+000000EC],xmm0
"Dishonored2.exe"+73FA88: 48 8B 5C 24 38           -  mov rbx,[rsp+38]
"Dishonored2.exe"+73FA8D: 48 83 C4 20              -  add rsp,20
"Dishonored2.exe"+73FA91: 5F                       -  pop rdi
"Dishonored2.exe"+73FA92: C3                       -  ret
"Dishonored2.exe"+73FA93: 48 85 C9                 -  test rcx,rcx
"Dishonored2.exe"+73FA96: 0F 84 41 FF FF FF        -  je Dishonored2.exe+73F9DD
"Dishonored2.exe"+73FA9C: 48 8B 51 10              -  mov rdx,[rcx+10]
"Dishonored2.exe"+73FAA0: 48 85 D2                 -  test rdx,rdx
"Dishonored2.exe"+73FAA3: 74 06                    -  je Dishonored2.exe+73FAAB
}

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9DE174

"Dishonored2.exe"+9DE14A: BA 1F 00 00 00                 -  mov edx,0000001F
"Dishonored2.exe"+9DE14F: 48 8B CF                       -  mov rcx,rdi
"Dishonored2.exe"+9DE152: E8 E9 9B DC FF                 -  call Dishonored2.exe+7A7D40
"Dishonored2.exe"+9DE157: 48 8B 43 10                    -  mov rax,[rbx+10]
"Dishonored2.exe"+9DE15B: 48 8B 48 10                    -  mov rcx,[rax+10]
"Dishonored2.exe"+9DE15F: 48 8B 81 88 03 00 00           -  mov rax,[rcx+00000388]
"Dishonored2.exe"+9DE166: 48 85 C0                       -  test rax,rax
"Dishonored2.exe"+9DE169: 74 1F                          -  je Dishonored2.exe+9DE18A
"Dishonored2.exe"+9DE16B: 83 B8 E4 00 00 00 04           -  cmp dword ptr [rax+000000E4],04
"Dishonored2.exe"+9DE172: 75 16                          -  jne Dishonored2.exe+9DE18A
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9DE174: FF 88 F0 00 00 00              -  dec [rax+000000F0]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9DE17A: 44 39 B0 F0 00 00 00           -  cmp [rax+000000F0],r14d
"Dishonored2.exe"+9DE181: 7F 07                          -  jg Dishonored2.exe+9DE18A
"Dishonored2.exe"+9DE183: 44 88 B8 FC 00 00 00           -  mov [rax+000000FC],r15l
"Dishonored2.exe"+9DE18A: 83 BB F8 00 00 00 FF           -  cmp dword ptr [rbx+000000F8],-01
"Dishonored2.exe"+9DE191: 74 2B                          -  je Dishonored2.exe+9DE1BE
"Dishonored2.exe"+9DE193: 48 8B 0D CE 2B D3 01           -  mov rcx,[Dishonored2.exe+2710D68]
"Dishonored2.exe"+9DE19A: 8B 93 F8 00 00 00              -  mov edx,[rbx+000000F8]
"Dishonored2.exe"+9DE1A0: F3 0F 10 15 28 33 69 01        -  movss xmm2,[Dishonored2.exe+20714D0]
"Dishonored2.exe"+9DE1A8: 48 81 C1 E8 52 1F 00           -  add rcx,001F52E8
"Dishonored2.exe"+9DE1AF: E8 6C 82 F9 FF                 -  call Dishonored2.exe+976420
}

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+999D86

"Dishonored2.exe"+999D51: E8 7A 5B 02 00                    -  call Dishonored2.exe+9BF8D0
"Dishonored2.exe"+999D56: 80 BF 13 01 00 00 00              -  cmp byte ptr [rdi+00000113],00
"Dishonored2.exe"+999D5D: 74 07                             -  je Dishonored2.exe+999D66
"Dishonored2.exe"+999D5F: 41 FF 8F C8 0D 00 00              -  dec [r15+00000DC8]
"Dishonored2.exe"+999D66: 41 C7 85 00 04 00 00 10 00 FF 3F  -  mov [r13+00000400],3FFF0010
"Dishonored2.exe"+999D71: 49 8B 85 88 03 00 00              -  mov rax,[r13+00000388]
"Dishonored2.exe"+999D78: 48 85 C0                          -  test rax,rax
"Dishonored2.exe"+999D7B: 74 1F                             -  je Dishonored2.exe+999D9C
"Dishonored2.exe"+999D7D: 83 B8 E4 00 00 00 04              -  cmp dword ptr [rax+000000E4],04
"Dishonored2.exe"+999D84: 75 16                             -  jne Dishonored2.exe+999D9C
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+999D86: FF 88 F0 00 00 00                 -  dec [rax+000000F0]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+999D8C: 83 B8 F0 00 00 00 00              -  cmp dword ptr [rax+000000F0],00
"Dishonored2.exe"+999D93: 7F 07                             -  jg Dishonored2.exe+999D9C
"Dishonored2.exe"+999D95: C6 80 FC 00 00 00 01              -  mov byte ptr [rax+000000FC],01
"Dishonored2.exe"+999D9C: C7 87 13 01 00 00 00 00 00 00     -  mov [rdi+00000113],00000000
"Dishonored2.exe"+999DA6: C6 87 17 01 00 00 00              -  mov byte ptr [rdi+00000117],00
"Dishonored2.exe"+999DAD: C6 87 1A 01 00 00 00              -  mov byte ptr [rdi+0000011A],00
"Dishonored2.exe"+999DB4: 48 83 C4 68                       -  add rsp,68
"Dishonored2.exe"+999DB8: 41 5F                             -  pop r15
"Dishonored2.exe"+999DBA: 41 5E                             -  pop r14
"Dishonored2.exe"+999DBC: 41 5D                             -  pop r13
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>4796</ID>
      <Description>"Blink"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>000000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>64</ID>
          <Description>"Distance+"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(hook,        "Dishonored2.exe"+451D82)
define(hook_return, "Dishonored2.exe"+451DA2)

[ENABLE]

assert(hook, 83 F8 FF 7E 13 48 8D 14 80 48 8B 43 40 48 8B 48 48)
alloc(newmem, $100, hook)

label(blHorDist)
label(blVertDist)
label(code)

registersymbol(blHorDist)
registersymbol(blVertDist)

newmem:
blHorDist:
  dd (float)40   // default: 10 for 'Blink' and 15 for 'Greater Blink'
blVertDist:
  dd (float)20   // default: 6. WARINING: See 'Disable Dark Vision...' script comments

code:
  cmp eax,-01
  jle short @F
  movss xmm8,[blHorDist]
@@:
  movss xmm4,[blVertDist]
  jmp hook_return

hook:
  jmp code

[DISABLE]

hook:
  db 83 F8 FF 7E 13
  // cmp eax,-01
  // jle Dishonored2.exe+451D9A

unregistersymbol(blHorDist)
unregistersymbol(blVertDist)

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+451D82

"Dishonored2.exe"+451D60: 0F 28 CE                 -  movaps xmm1,xmm6
"Dishonored2.exe"+451D63: F3 0F 5C CB              -  subss xmm1,xmm3
"Dishonored2.exe"+451D67: F3 0F 10 D1              -  movss xmm2,xmm1
"Dishonored2.exe"+451D6B: 0F 54 D4                 -  andps xmm2,xmm4
"Dishonored2.exe"+451D6E: 0F 2F C2                 -  comiss xmm0,xmm2
"Dishonored2.exe"+451D71: 77 7B                    -  ja Dishonored2.exe+451DEE
"Dishonored2.exe"+451D73: 0F 28 C6                 -  movaps xmm0,xmm6
"Dishonored2.exe"+451D76: E8 79 FE F2 00           -  call Dishonored2.exe+1381BF4
"Dishonored2.exe"+451D7B: 48 63 43 50              -  movsxd  rax,dword ptr [rbx+50]
"Dishonored2.exe"+451D7F: 0F 28 E8                 -  movaps xmm5,xmm0
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+451D82: 83 F8 FF                 -  cmp eax,-01
"Dishonored2.exe"+451D85: 7E 13                    -  jle Dishonored2.exe+451D9A
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+451D87: 48 8D 14 80              -  lea rdx,[rax+rax*4]
"Dishonored2.exe"+451D8B: 48 8B 43 40              -  mov rax,[rbx+40]
"Dishonored2.exe"+451D8F: 48 8B 48 48              -  mov rcx,[rax+48]
"Dishonored2.exe"+451D93: F3 44 0F 10 44 D1 24     -  movss xmm8,[rcx+rdx*8+24]
"Dishonored2.exe"+451D9A: F3 0F 10 A7 98 01 00 00  -  movss xmm4,[rdi+00000198]
// ---------- RETURN POINT  ----------
"Dishonored2.exe"+451DA2: 41 0F 28 D0              -  movaps xmm2,xmm8
"Dishonored2.exe"+451DA6: F3 41 0F 59 D0           -  mulss xmm2,xmm8
"Dishonored2.exe"+451DAB: 0F 28 C4                 -  movaps xmm0,xmm4
"Dishonored2.exe"+451DAE: F3 0F 59 C4              -  mulss xmm0,xmm4
"Dishonored2.exe"+451DB2: F3 41 0F 59 E0           -  mulss xmm4,xmm8
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>3998</ID>
              <Description>"hor. (default: 10 m and 15 m)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>000000</Color>
              <VariableType>Float</VariableType>
              <Address>blHorDist</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>4020</ID>
              <Description>"vert. (default: 6 m)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <Color>000000</Color>
              <VariableType>Float</VariableType>
              <Address>blVertDist</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>4751</ID>
          <Description>"Instant blink"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(hook, "Dishonored2.exe"+9D2150)
define(bytes, F3 44 0F 10 5A 70)

[ENABLE]

assert(hook, bytes)
alloc(newmem, $100, hook)

label(code)
label(blinkVelocity)
label(return)

newmem:
blinkVelocity:
  dd (float)0  // default: 40

code:
  movss xmm11,[blinkVelocity]
  jmp return

hook:
  jmp code
  nop
return:

[DISABLE]

hook:
  db bytes
  // movss xmm11,[rdx+70]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9D2150

"Dishonored2.exe"+9D210F: F3 0F 10 7B 60              -  movss xmm7,[rbx+60]
"Dishonored2.exe"+9D2114: 44 0F 29 84 24 90 00 00 00  -  movaps [rsp+00000090],xmm8
"Dishonored2.exe"+9D211D: 44 0F 29 8C 24 80 00 00 00  -  movaps [rsp+00000080],xmm9
"Dishonored2.exe"+9D2126: F3 44 0F 10 43 64           -  movss xmm8,[rbx+64]
"Dishonored2.exe"+9D212C: F3 44 0F 10 4B 68           -  movss xmm9,[rbx+68]
"Dishonored2.exe"+9D2132: 44 0F 29 54 24 70           -  movaps [rsp+70],xmm10
"Dishonored2.exe"+9D2138: 44 0F 29 5C 24 60           -  movaps [rsp+60],xmm11
"Dishonored2.exe"+9D213E: 48 8B 81 48 01 00 00        -  mov rax,[rcx+00000148]
"Dishonored2.exe"+9D2145: 48 89 75 C7                 -  mov [rbp-39],rsi
"Dishonored2.exe"+9D2149: C7 45 D3 02 00 00 00        -  mov [rbp-2D],00000002
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9D2150: F3 44 0F 10 5A 70           -  movss xmm11,[rdx+70]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9D2156: 4C 8D 4D DB                 -  lea r9,[rbp-25]
"Dishonored2.exe"+9D215A: 48 8D 55 67                 -  lea rdx,[rbp+67]
"Dishonored2.exe"+9D215E: 0F 28 88 80 00 00 00        -  movaps xmm1,[rax+00000080]
"Dishonored2.exe"+9D2165: F3 0F 5C B8 80 00 00 00     -  subss xmm7,[rax+00000080]
"Dishonored2.exe"+9D216D: 0F 28 C1                    -  movaps xmm0,xmm1
"Dishonored2.exe"+9D2170: 0F 28 D9                    -  movaps xmm3,xmm1
"Dishonored2.exe"+9D2173: 48 8B 43 10                 -  mov rax,[rbx+10]
"Dishonored2.exe"+9D2177: 0F C6 C1 55                 -  shufps xmm0,xmm155
"Dishonored2.exe"+9D217B: 0F C6 D9 AA                 -  shufps xmm3,xmm1-56
"Dishonored2.exe"+9D217F: F3 44 0F 5C C0              -  subss xmm8,xmm0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4800</ID>
          <Description>"No cooldown"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(hook, "Dishonored2.exe"+73C14B)
define(bytes, F3 0F 10 80 50 01 00 00)

[ENABLE]

assert(hook, bytes)
alloc(newmem, $100, hook)

label(code)
label(return)

newmem:
code:
  mov dword ptr [rdx], 0
  mov rax, rdx
  ret

hook:
  jmp code
  nop
  nop
  nop
return:

[DISABLE]

hook:
  db bytes
  // movss xmm0,[rax+00000150]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+73C14B

"Dishonored2.exe"+73C119: 48 C7 87 80 02 00 00 FF FF FF FF  -  mov qword ptr [rdi+00000280],FFFFFFFF
"Dishonored2.exe"+73C124: 48 C7 87 88 02 00 00 FF FF FF FF  -  mov qword ptr [rdi+00000288],FFFFFFFF
"Dishonored2.exe"+73C12F: 48 8B 5C 24 40                    -  mov rbx,[rsp+40]
"Dishonored2.exe"+73C134: 48 83 C4 30                       -  add rsp,30
"Dishonored2.exe"+73C138: 5F                                -  pop rdi
"Dishonored2.exe"+73C139: E9 E2 B8 FF FF                    -  jmp Dishonored2.exe+737A20
"Dishonored2.exe"+73C13E: CC                                -  int 3
"Dishonored2.exe"+73C13F: CC                                -  int 3
"Dishonored2.exe"+73C140: 80 B9 65 02 00 00 00              -  cmp byte ptr [rcx+00000265],00
"Dishonored2.exe"+73C147: 48 8B 41 08                       -  mov rax,[rcx+08]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+73C14B: F3 0F 10 80 50 01 00 00           -  movss xmm0,[rax+00000150]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+73C153: F3 0F 11 02                       -  movss [rdx],xmm0
"Dishonored2.exe"+73C157: 74 0C                             -  je Dishonored2.exe+73C165
"Dishonored2.exe"+73C159: F3 0F 58 80 04 02 00 00           -  addss xmm0,dword ptr [rax+00000204]
"Dishonored2.exe"+73C161: F3 0F 11 02                       -  movss [rdx],xmm0
"Dishonored2.exe"+73C165: 48 8B C2                          -  mov rax,rdx
"Dishonored2.exe"+73C168: C3                                -  ret
"Dishonored2.exe"+73C169: CC                                -  int 3
"Dishonored2.exe"+73C16A: CC                                -  int 3
"Dishonored2.exe"+73C16B: CC                                -  int 3
"Dishonored2.exe"+73C16C: CC                                -  int 3
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>571023</ID>
          <Description>"Blink through"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>571024</ID>
              <Description>"++ Set hotkeys if you are going to use these scripts"</Description>
              <LastState Value="" RealAddress="00000000"/>
              <Color>0000FF</Color>
              <GroupHeader>1</GroupHeader>
            </CheatEntry>
            <CheatEntry>
              <ID>568010</ID>
              <Description>"'Blink through'"</Description>
              <Options moDeactivateChildrenAsWell="1"/>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$STRICT}

define(blink, "Dishonored2.exe"+B04BEA)  // virt. func. of arkCpntPowerBlinkFactory class
define(blink_bytes, 49 63 C8 48 03 0C D0)

define(is_breakable, "Dishonored2.exe"+73C37C)
define(is_breakable_bytes, F6 81 80 00 00 00 04)
define(is_breakable_caller1, "Dishonored2.exe"+4519CF)
define(is_breakable_caller2, "Dishonored2.exe"+451AE0)
define(is_breakable_caller3, "Dishonored2.exe"+739D6F)


define(pArkCpntInteractable, Dishonored2.exe+2550220)
define(dyncast, Dishonored2.exe+9FAAC0)

define(cqf, "Dishonored2.exe"+C0380)    // a virt. func. of arkCollisionQueryFilter class
define(cqf_bytes, 4C 8B D1 45 84 C0)

[ENABLE]

assert(blink,        blink_bytes)
assert(is_breakable, is_breakable_bytes)
assert(cqf,          cqf_bytes)


alloc(newmem, $1000, is_breakable)

newmem:

//-----------------------------------------------------------------
// Check whether blink being powered or not
//-----------------------------------------------------------------

label(blink_hook)
label(blink_ret)
label(isBlinkOn)

isBlinkOn:
  dq 0

blink_hook:
  movsxd rcx,r8d
  add    rcx,[rax+rdx*8]      // rcx = ptr to arkCpntPowerBlink instance

  cmp  dword ptr [rcx+280],0  // Check the first of fourth vars, which (if i am not wrong) get blink FX handles.
                              // When we press and hold a power button (to blink), these vars get real handle values.
                              // Otherwise, they contain -1
  jl   short @F
  mov  byte ptr [isBlinkOn],1
  jmp  blink_ret

@@:
  mov  byte ptr [isBlinkOn],0
  jmp  blink_ret


//-----------------------------------------------------------------
//  Intercept requests "is an object's breakable".
//  Test materials of objects' contact systems and
//  their collision settings and return "yes" if testing passed.
//-----------------------------------------------------------------

label(blinkAExtendedSM)
registerSymbol(blinkAExtendedSM)

label(whitelistA)
label(whitelistAPlus)
label(pName)

whitelistAPlus:
  db 'env.stone',0
whitelistA:
  db 'env.metal',0
  db 0

align 16
pName:
  dq 0

blinkAExtendedSM:
  dq 0

//----------------------

label(check_whitelist)
label(strcmp)
label(nextstr)
label(success)
label(failure)

check_whitelist:
  push rbx

  mov  rdx,whitelistA
  cmp  [blinkAExtendedSM],1
  jne  short @F
  mov  rdx,whitelistAPlus
@@:
  mov  [pName],rcx
  cmp  byte ptr [rcx],0
  jnz  strcmp
  xor  ax,ax
  jmp  failure

strcmp:
  mov  al,[rdx]
  test al,al
  jz   success
  mov  bl,[rcx]
  test bl,bl
  jz   nextstr
  sub  al,bl
  jnz  nextstr
  inc  rdx
  inc  rcx
  jmp  strcmp

nextstr:
  mov  al,[rdx]
  inc  rdx
  test al,al
  jnz  nextstr
  mov  al,[rdx]
  test al,al
  jz   failure
  mov  rcx,[pName]
  jmp  strcmp

success:
  mov  al,1

failure:
  pop  rbx
  ret

//----------------------

label(is_breakable_hook)
label(is_breakable_ret)
label(ready)
label(ignore)

//-------------------------------------
// Mask of blocks in collision settings
//  of material's contact system
//-------------------------------------
//     0: eBLOCK_NONE
//     1: eBLOCK_NPC
//     2: eBLOCK_PLAYER
//     4: eBLOCK_WEAPON
//     8: eBLOCK_VISION
//    10: eBLOCK_DYNAMIC
//    20: eBLOCKED_BY_STATIC
//    40: eBLOCK_DEBRIS_AND_PARTICLES
//    7F: eBLOCK_DEFAULT
//    80: eBLOCK_RAGDOLL
//  FFFF: eBLOCK_ALL
//-------------------------------------
//
//  Allowed actions bit field (by var names)
//-------------------------------------
//   0: allowMantle
//   1: allowVault
//   2: canBlinkThrough
//   3: canGrappleThrough
//   4: canWindblastThrough
//   5: triggerMaterial
//   6: triggerTypeContactSolver
//   7: isStairs
//-------------------------------------

is_breakable_hook:
  push rax
  push rbx

  // This helper function is used by differnt classes,
  // but we need to be sure here it've been called
  // either from arkCpntPowerBlinkFactory,
  // or from arkCpntPlayerSensorBlinkFactory

  mov  rax,[rsp+38]
  mov  rbx,is_breakable_caller1
  cmp  rax,rbx
  je   short @F

  mov  rbx,is_breakable_caller2
  cmp  rax,rbx
  je   short @F

  mov  rbx,is_breakable_caller3
  cmp  rax,rbx
  jne  short ignore

@@:
  test [rcx+80],4
  jnz  short ready     // we already can blink through this

  test [rcx+80],80     // ignore stairs (mainly for stone stairs, otherwise we could fall into underworld)
  jnz  short ignore

  test [rcx+68],8      // check bit eBLOCK_VISION
  jz   short ready

  //cmp  [blinkAExtendedSM],1
  //jne  ignore

  push rcx
  push rdx
  mov  rcx,[rcx+8]
  lea  rcx,[rcx+E]
  call check_whitelist
  pop  rdx
  pop  rcx
  test al,al
  jz   short ignore

ready:
  pop  rbx
  pop  rax

  mov  al,1         // disguise selected object as breakable
  mov  rbx,[rsp+38]
  add  rsp,20
  pop  rdi
  ret

ignore:
  pop rbx
  pop rax

  test byte ptr [rcx+80],04
  jmp  is_breakable_ret


//-----------------------------------------------------------------
//  Intercept collision filtering
//-----------------------------------------------------------------

label(filter_out)
label(reject)
label(into_cqf)
label(cqf_ret)

//--------------------------------------------------------------------
//  Collision layer bits in collision masks:
//   bit ( masked): layer's name in the game code      -&gt;  shortened
//--------------------------------------------------------------------
//     0 (      1): COLLISION_LAYER_WORLD_LOW          -&gt;  world_low
//     1 (      2): COLLISION_LAYER_WORLD_LOW_HIGH     -&gt;  world_low_high
//     2 (      4): COLLISION_LAYER_WORLD_HIGH         -&gt;  world_high
//     3 (      8): COLLISION_LAYER_RIGID_BODY         -&gt;  rigid_body
//     4 (     10): COLLISION_LAYER_DEBRIS             -&gt;  debris
//     5 (     20): COLLISION_LAYER_MOVER              -&gt;  mover
//     6 (     40): COLLISION_LAYER_PLAYER             -&gt;  player
//     7 (     80): COLLISION_LAYER_PLAYER_HITBOX      -&gt;  player_hitbox
//     8 (    100): COLLISION_LAYER_PLAYER_DEAD        -&gt;  player_dead
//     9 (    200): COLLISION_LAYER_NPC                -&gt;  npc
//    10 (    400): COLLISION_LAYER_NPC_BODY_ANIMATED  -&gt;  npc_body_animated
//    11 (    800): COLLISION_LAYER_PROJECTILE         -&gt;  projectile
//    12 (   1000): COLLISION_LAYER_CLOTH              -&gt;  cloth
//    13 (   2000): COLLISION_LAYER_CLOTH_COLLIDER     -&gt;  cloth_collider
//    14 (   4000): COLLISION_LAYER_NPC_BODY_RAGDOLL   -&gt;  npc_body_ragdoll
//    15 (   8000): COLLISION_LAYER_INTERACTABLE       -&gt;  interactable
//    16 (  10000): COLLISION_LAYER_TRIGGER            -&gt;  trigger
//    17 (  20000): COLLISION_LAYER_VISION             -&gt;  vision
//    18 (  40000): COLLISION_LAYER_PLAYER_PHYSICS     -&gt;  player_physics
//    19 (  80000): COLLISION_LAYER_DECAL_QUERY        -&gt;  decal_query
//    20 ( 100000): COLLISION_LAYER_WEAPON_MELEE       -&gt;  weapon_melee
//    21 ( 200000): COLLISION_LAYER_CHAIN              -&gt;  chain
//    22 ( 400000): COLLISION_LAYER_TRIGGER_WATER      -&gt;  trigger_water
//    23 ( 800000): COLLISION_LAYER_PICKUP             -&gt;  pickup
//    24 (1000000): COLLISION_LAYER_24                 -&gt;  24
//    25 (2000000): COLLISION_LAYER_GHOST              -&gt;  ghost
//    26 (4000000): COLLISION_LAYER_HIDDEN             -&gt;  hidden
//--------------------------------------------------------------------

filter_out:
  push  rbx

  test r8l,r8l
  jz   into_cqf

  cmp  byte ptr [isBlinkOn],0
  je   into_cqf

// collision mask and layer for a collidable #1:
//   [rcx+20]:  mask_1
//   [rcx+24]:  layer_1 (masked)

// skip filtering if layer_1 != player
  cmp  [rcx+24],40      // player
  jne  into_cqf

// skip filtering if the first byte of mask_1 != 2B (i.e. mover | rigid_body | world_low_high | world_low)
  mov  eax,[rcx+20]
  cmp  al,2B
  jne  into_cqf

  mov  rax,[rsp+30]
  mov  ebx,[rax+4]
  shr  ebx,5
  mov  eax,[rax+4]
  and  eax,1F

// collision mask and layer for a collidable #2:
//   ebx:  mask_2
//   eax:  layer_2

// enable if layer_2 == mover
  cmp  eax,5            // mover
  je  short reject

// enable if layer_2 == rigid_body  /////////and mask_2's vision_bit
  cmp  eax,3            // rigid_body
  //jne  short @F
  //test ebx,20000        // vision
  jz   short reject

@@:
  jmp short into_cqf

reject:
// reject contact (=allow blink through an object)
  pop  rbx
  xor  eax,eax
  ret

into_cqf:
  pop  rbx
  mov  r10,rcx
  test r8l,r8l
  jmp  cqf_ret


//-----------------------------------------------------------------
//  End of newmem
//-----------------------------------------------------------------


blink:
//  jmp blink_hook
//  nop
//  nop
blink_ret:

is_breakable:
  jmp is_breakable_hook
  nop
  nop
is_breakable_ret:

cqf:
  //jmp filter_out
  //nop
cqf_ret:

//--------------------------------------------


[DISABLE]

blink:
  db blink_bytes
  // movsxd  rcx,r8d
  // add rcx,[rax+rdx*8]

is_breakable:
  db is_breakable_bytes
  // test byte ptr [rcx+00000080],04

cqf:
  db cqf_bytes
  // mov r10,rcx
  // test r8l,r8l

unregisterSymbol(blinkAExtendedSM)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+B04BEA

"Dishonored2.exe"+B04BCC: 73 32                       -  jae Dishonored2.exe+B04C00
"Dishonored2.exe"+B04BCE: 66 90                       -  nop
"Dishonored2.exe"+B04BD0: 0F B7 03                    -  movzx eax,word ptr [rbx]
"Dishonored2.exe"+B04BD3: 48 8B 4E 58                 -  mov rcx,[rsi+58]
"Dishonored2.exe"+B04BD7: 44 8B 41 5C                 -  mov r8d,[rcx+5C]
"Dishonored2.exe"+B04BDB: 99                          -  cdq
"Dishonored2.exe"+B04BDC: F7 7E 08                    -  idiv [rsi+08]
"Dishonored2.exe"+B04BDF: 44 0F AF C2                 -  imul r8d,edx
"Dishonored2.exe"+B04BE3: 48 63 D0                    -  movsxd  rdx,eax
"Dishonored2.exe"+B04BE6: 48 8B 46 40                 -  mov rax,[rsi+40]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+B04BEA: 49 63 C8                    -  movsxd  rcx,r8d
"Dishonored2.exe"+B04BED: 48 03 0C D0                 -  add rcx,[rax+rdx*8]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+B04BF1: E8 1A 5C C3 FF              -  call Dishonored2.exe+73A810
"Dishonored2.exe"+B04BF6: 48 83 C3 02                 -  add rbx,02
"Dishonored2.exe"+B04BFA: 48 3B 5F 18                 -  cmp rbx,[rdi+18]
"Dishonored2.exe"+B04BFE: 72 D0                       -  jb Dishonored2.exe+B04BD0
"Dishonored2.exe"+B04C00: 48 8B 5C 24 30              -  mov rbx,[rsp+30]
"Dishonored2.exe"+B04C05: 48 8B 74 24 38              -  mov rsi,[rsp+38]
"Dishonored2.exe"+B04C0A: 48 83 C4 20                 -  add rsp,20
"Dishonored2.exe"+B04C0E: 5F                          -  pop rdi
"Dishonored2.exe"+B04C0F: C3                          -  ret
"Dishonored2.exe"+B04C10: 48 89 54 24 10              -  mov [rsp+10],rdx
}

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+73C37C

"Dishonored2.exe"+73C348: 48 8D 8F 80 02 06 00     -  lea rcx,[rdi+00060280]
"Dishonored2.exe"+73C34F: 48 8D 54 24 30           -  lea rdx,[rsp+30]
"Dishonored2.exe"+73C354: 44 8B C3                 -  mov r8d,ebx
"Dishonored2.exe"+73C357: E8 84 A0 98 FF           -  call Dishonored2.exe+C63E0
"Dishonored2.exe"+73C35C: 48 8B 97 10 04 06 00     -  mov rdx,[rdi+00060410]
"Dishonored2.exe"+73C363: 0F B7 4C 24 30           -  movzx ecx,word ptr [rsp+30]
"Dishonored2.exe"+73C368: 48 6B C9 70              -  imul rcx,rcx,70
"Dishonored2.exe"+73C36C: 48 8B 82 88 09 00 00     -  mov rax,[rdx+00000988]
"Dishonored2.exe"+73C373: 48 8B 40 30              -  mov rax,[rax+30]
"Dishonored2.exe"+73C377: 48 8B 4C 08 60           -  mov rcx,[rax+rcx+60]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+73C37C: F6 81 80 00 00 00 04     -  test byte ptr [rcx+00000080],04
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+73C383: 74 47                    -  je Dishonored2.exe+73C3CC
"Dishonored2.exe"+73C385: 48 8B 42 28              -  mov rax,[rdx+28]
"Dishonored2.exe"+73C389: 8B CB                    -  mov ecx,ebx
"Dishonored2.exe"+73C38B: 48 8D 15 8E 24 4E 03     -  lea rdx,[Dishonored2.exe+3C1E820]
"Dishonored2.exe"+73C392: 81 E1 FF FF FF 00        -  and ecx,00FFFFFF
"Dishonored2.exe"+73C398: 41 B8 02 00 00 00        -  mov r8d,00000002
"Dishonored2.exe"+73C39E: 48 69 C9 B0 00 00 00     -  imul rcx,rcx000000B0
"Dishonored2.exe"+73C3A5: 48 8B 8C 01 90 00 00 00  -  mov rcx,[rcx+rax+00000090]
"Dishonored2.exe"+73C3AD: 48 8B 41 08              -  mov rax,[rcx+08]
"Dishonored2.exe"+73C3B1: 48 8B 48 10              -  mov rcx,[rax+10]
}

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+C0380

"Dishonored2.exe"+C037F: CC                             -  int 3
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+C0380: 4C 8B D1                       -  mov r10,rcx
"Dishonored2.exe"+C0383: 45 84 C0                       -  test r8l,r8l
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+C0386: 74 0A                          -  je Dishonored2.exe+C0392
"Dishonored2.exe"+C0388: 48 8B 44 24 28                 -  mov rax,[rsp+28]
"Dishonored2.exe"+C038D: 8B 50 04                       -  mov edx,[rax+04]
"Dishonored2.exe"+C0390: EB 04                          -  jmp Dishonored2.exe+C0396
"Dishonored2.exe"+C0392: 41 8B 51 04                    -  mov edx,[r9+04]
"Dishonored2.exe"+C0396: 41 8B 42 20                    -  mov eax,[r10+20]
"Dishonored2.exe"+C039A: 8B CA                          -  mov ecx,edx
"Dishonored2.exe"+C039C: 83 E1 1F                       -  and ecx,1F
"Dishonored2.exe"+C039F: 0F A3 C8                       -  bt eax,ecx
"Dishonored2.exe"+C03A2: 73 10                          -  jae Dishonored2.exe+C03B4
}

</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Toggle Activation</Action>
                  <Keys/>
                  <ID>0</ID>
                  <ActivateSound TTS="EN">blink 1 is on</ActivateSound>
                  <DeactivateSound TTS="EN">blink 1 is off</DeactivateSound>
                </Hotkey>
              </Hotkeys>
              <CheatEntries>
                <CheatEntry>
                  <ID>567993</ID>
                  <Description>"'Blink through+' (for 3s)"</Description>
                  <LastState/>
                  <Color>000000</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>[ENABLE]

{$lua}

if not syntaxcheck then
 -- Wait for 3 seconds, then deactivate the script
  local timer = createTimer()
  timer.OnTimer = function(timer)
    local address = getAddressSafe"blinkAExtendedSM"
    timer.destroy()
    if address ~= nil and readInteger("blinkAExtendedSM") == 0 then
      writeInteger("blinkAExtendedSM", 1)
      local timer = createTimer()
      timer.OnTimer = function(timer)
        timer.destroy()
        writeInteger("blinkAExtendedSM", 0)
        memrec.Active = false
      end
      timer.Interval = 3000
    else
      -- probably the parent script is inactive
      memrec.Active = false
    end
  end
  timer.Interval = 100
end

{$asm}

[DISABLE]

</AssemblerScript>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Activate</Action>
                      <Keys/>
                      <ID>0</ID>
                      <ActivateSound TTS="EN">blink 2 is on</ActivateSound>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>567863</ID>
          <Description>"Disable final FX"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(address,"Dishonored2.exe"+98A6C0)
define(bytes,48 8B 41 10 48 8B 48 28)

[ENABLE]

assert(address,bytes)

address:
  xor al,al
  ret
  nop

[DISABLE]

address:
  db bytes
  // mov rax,[rcx+10]
  // mov rcx,[rax+28]


{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+98A6C0

"Dishonored2.exe"+98A6B6: CC                    -  int 3 
"Dishonored2.exe"+98A6B7: CC                    -  int 3 
"Dishonored2.exe"+98A6B8: CC                    -  int 3 
"Dishonored2.exe"+98A6B9: CC                    -  int 3 
"Dishonored2.exe"+98A6BA: CC                    -  int 3 
"Dishonored2.exe"+98A6BB: CC                    -  int 3 
"Dishonored2.exe"+98A6BC: CC                    -  int 3 
"Dishonored2.exe"+98A6BD: CC                    -  int 3 
"Dishonored2.exe"+98A6BE: CC                    -  int 3 
"Dishonored2.exe"+98A6BF: CC                    -  int 3 
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+98A6C0: 48 8B 41 10           -  mov rax,[rcx+10]
"Dishonored2.exe"+98A6C4: 48 8B 48 28           -  mov rcx,[rax+28]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+98A6C8: 48 8B 81 90 00 00 00  -  mov rax,[rcx+00000090]
"Dishonored2.exe"+98A6CF: 48 85 C0              -  test rax,rax
"Dishonored2.exe"+98A6D2: 74 0E                 -  je Dishonored2.exe+98A6E2
"Dishonored2.exe"+98A6D4: 48 8B 40 70           -  mov rax,[rax+70]
"Dishonored2.exe"+98A6D8: 48 85 C0              -  test rax,rax
"Dishonored2.exe"+98A6DB: 74 05                 -  je Dishonored2.exe+98A6E2
"Dishonored2.exe"+98A6DD: 0F B6 40 20           -  movzx eax,byte ptr [rax+20]
"Dishonored2.exe"+98A6E1: C3                    -  ret 
"Dishonored2.exe"+98A6E2: 32 C0                 -  xor al,al
"Dishonored2.exe"+98A6E4: C3                    -  ret 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4798</ID>
          <Description>"workaround (see the script's comment)"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{
  If you blink (or jump or fly, etc.) up very high with your Dark Vision power
  being active, the game will crash.
  Normally you'll never reach such heights, but with modified powers you can do it.
  For example, set blink height, say, to 400 meters and blink up toward zenith.
  First, try do it without Dark Vision, then with the power.
  This script is workaround for blink (and only for this power) avd makes Dark Vision
  end itself when the player has been blinking.
}

{$STRICT}

define(blink_hook1, "Dishonored2.exe"+9D1E3A)
define(blink_bytes1, 4C 8B 71 10 33 F6)

define(blink_hook2, "Dishonored2.exe"+9D17CE)
define(blink_bytes2, 0F B6 81 A4 00 00 00)

define(dv_hook, "Dishonored2.exe"+5782FE)
define(dv_bytes, 0F 2F 40 6C 73 A6)

[ENABLE]

assert(blink_hook1, blink_bytes1)
assert(blink_hook2, blink_bytes2)
assert(dv_hook, dv_bytes)

alloc(newmem, $100, blink_hook1)

label(blinking)

label(mark_blinking_state)
label(blinkhook1_exit)

label(unmark_blinking_state)
label(blinkhook2_exit)

label(reroute_dv)
label(dvhook_exit)

newmem:
blinking:
  dd 0

mark_blinking_state:
  mov byte ptr [blinking], 1
  // original code
  mov r14,[rcx+10]
  xor esi,esi
  jmp blinkhook1_exit

unmark_blinking_state:
  mov byte ptr [blinking], 0
  // original code
  movzx eax,byte ptr [rcx+A4]
  jmp blinkhook2_exit

reroute_dv:
  cmp byte ptr [blinking],1
  je Dishonored2.exe+5782AA
  comiss xmm0,[rax+6C]
  jae Dishonored2.exe+5782AA
  jmp dvhook_exit

//-------------------
blink_hook1:
  jmp mark_blinking_state
  nop
blinkhook1_exit:

blink_hook2:
  jmp unmark_blinking_state
  nop
  nop
blinkhook2_exit:

dv_hook:
  jmp reroute_dv
  nop
dvhook_exit:

[DISABLE]

blink_hook1:
  db blink_bytes1
  // mov r14,[rcx+10]
  // xor esi,esi

blink_hook2:
  db blink_bytes2
  // movzx eax,byte ptr [rcx+000000A4]

dv_hook:
  db dv_bytes
  // comiss xmm0,[rax+6C]
  // jae Dishonored2.exe+5782AA

dealloc(newmem)


{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9D1E3A

"Dishonored2.exe"+9D1E1D: CC                             -  int 3
"Dishonored2.exe"+9D1E1E: CC                             -  int 3
"Dishonored2.exe"+9D1E1F: CC                             -  int 3
"Dishonored2.exe"+9D1E20: 48 89 5C 24 18                 -  mov [rsp+18],rbx
"Dishonored2.exe"+9D1E25: 48 89 74 24 20                 -  mov [rsp+20],rsi
"Dishonored2.exe"+9D1E2A: 55                             -  push rbp
"Dishonored2.exe"+9D1E2B: 57                             -  push rdi
"Dishonored2.exe"+9D1E2C: 41 56                          -  push r14
"Dishonored2.exe"+9D1E2E: 48 8D 6C 24 B9                 -  lea rbp,[rsp-47]
"Dishonored2.exe"+9D1E33: 48 81 EC C0 00 00 00           -  sub rsp,000000C0
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9D1E3A: 4C 8B 71 10                    -  mov r14,[rcx+10]
"Dishonored2.exe"+9D1E3E: 33 F6                          -  xor esi,esi
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9D1E40: F6 81 A4 00 00 00 80           -  test byte ptr [rcx+000000A4],-80
"Dishonored2.exe"+9D1E47: 49 8B BE 20 03 00 00           -  mov rdi,[r14+00000320]
"Dishonored2.exe"+9D1E4E: 48 8B D9                       -  mov rbx,rcx
"Dishonored2.exe"+9D1E51: 0F 84 8A 00 00 00              -  je Dishonored2.exe+9D1EE1
"Dishonored2.exe"+9D1E57: F3 0F 10 0D 21 E7 64 03        -  movss xmm1,[Dishonored2.exe+4020580]
"Dishonored2.exe"+9D1E5F: 80 65 D7 FE                    -  and byte ptr [rbp-29],-02
"Dishonored2.exe"+9D1E63: 0F 57 C0                       -  xorps xmm0,xmm0
"Dishonored2.exe"+9D1E66: F3 0F 11 45 CF                 -  movss [rbp-31],xmm0
"Dishonored2.exe"+9D1E6B: F3 0F 10 05 11 E7 64 03        -  movss xmm0,[Dishonored2.exe+4020584]
"Dishonored2.exe"+9D1E73: F3 0F 11 4D DB                 -  movss [rbp-25],xmm1
}

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9D17CE

"Dishonored2.exe"+9D17BC: CC                       -  int 3
"Dishonored2.exe"+9D17BD: CC                       -  int 3
"Dishonored2.exe"+9D17BE: CC                       -  int 3
"Dishonored2.exe"+9D17BF: CC                       -  int 3
"Dishonored2.exe"+9D17C0: 4C 8B DC                 -  mov r11,rsp
"Dishonored2.exe"+9D17C3: 55                       -  push rbp
"Dishonored2.exe"+9D17C4: 57                       -  push rdi
"Dishonored2.exe"+9D17C5: 41 57                    -  push r15
"Dishonored2.exe"+9D17C7: 48 8B EC                 -  mov rbp,rsp
"Dishonored2.exe"+9D17CA: 48 83 EC 60              -  sub rsp,60
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9D17CE: 0F B6 81 A4 00 00 00     -  movzx eax,byte ptr [rcx+000000A4]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9D17D5: 44 0F B6 FA              -  movzx r15d,dl
"Dishonored2.exe"+9D17D9: 48 8B F9                 -  mov rdi,rcx
"Dishonored2.exe"+9D17DC: A8 01                    -  test al,01
"Dishonored2.exe"+9D17DE: 0F 85 30 06 00 00        -  jne Dishonored2.exe+9D1E14
"Dishonored2.exe"+9D17E4: 49 89 5B 08              -  mov [r11+08],rbx
"Dishonored2.exe"+9D17E8: 48 8B 59 10              -  mov rbx,[rcx+10]
"Dishonored2.exe"+9D17EC: 49 89 73 10              -  mov [r11+10],rsi
"Dishonored2.exe"+9D17F0: 4D 89 63 18              -  mov [r11+18],r12
"Dishonored2.exe"+9D17F4: 0C 01                    -  or al,01
"Dishonored2.exe"+9D17F6: 45 33 E4                 -  xor r12d,r12d
}

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+5782FE

"Dishonored2.exe"+5782CF: 7E 20                       -  jle Dishonored2.exe+5782F1
"Dishonored2.exe"+5782D1: 49 8B 92 08 04 00 00        -  mov rdx,[r10+00000408]
"Dishonored2.exe"+5782D8: 4C 8D 04 80                 -  lea r8,[rax+rax*4]
"Dishonored2.exe"+5782DC: 48 8B 42 48                 -  mov rax,[rdx+48]
"Dishonored2.exe"+5782E0: F3 42 0F 10 44 C0 24        -  movss xmm0,[rax+r8*8+24]
"Dishonored2.exe"+5782E7: 42 0F 2E 44 C0 08           -  ucomiss xmm0,[rax+r8*8+08]
"Dishonored2.exe"+5782ED: 7A BB                       -  jp Dishonored2.exe+5782AA
"Dishonored2.exe"+5782EF: 75 B9                       -  jne Dishonored2.exe+5782AA
"Dishonored2.exe"+5782F1: 49 8B 41 08                 -  mov rax,[r9+08]
"Dishonored2.exe"+5782F5: F3 41 0F 10 81 E8 00 00 00  -  movss xmm0,[r9+000000E8]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+5782FE: 0F 2F 40 6C                 -  comiss xmm0,[rax+6C]
"Dishonored2.exe"+578302: 73 A6                       -  jae Dishonored2.exe+5782AA
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+578304: 49 8B 8A B8 03 00 00        -  mov rcx,[r10+000003B8]
"Dishonored2.exe"+57830B: 48 8B 01                    -  mov rax,[rcx]
"Dishonored2.exe"+57830E: FF 90 08 01 00 00           -  call qword ptr [rax+00000108]
"Dishonored2.exe"+578314: 3C 01                       -  cmp al,01
"Dishonored2.exe"+578316: 0F 94 C0                    -  sete al
"Dishonored2.exe"+578319: 48 83 C4 28                 -  add rsp,28
"Dishonored2.exe"+57831D: C3                          -  ret
"Dishonored2.exe"+57831E: CC                          -  int 3
"Dishonored2.exe"+57831F: CC                          -  int 3
"Dishonored2.exe"+578320: 40 53                       -  push rbx
}

</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>4809</ID>
      <Description>"Far Reach"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>000000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>4810</ID>
          <Description>"Range+"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(horiz_hook, "Dishonored2.exe"+46237F)
define(horiz_bytes, F3 0F 10 44 D0 24)

define(vert_hook, "Dishonored2.exe"+4623A7)
define(vert_bytes, F3 0F 10 5C D0 24)

[ENABLE]

assert(horiz_hook, horiz_bytes)
assert(vert_hook, vert_bytes)

alloc(newmem, $100, horiz_hook)

label(frHorRange)
label(horiz_hook_code)
label(horiz_hook_exit)

label(frVertRange)
label(vert_hook_code)
label(vert_hook_exit)

registersymbol(frHorRange)
registersymbol(frVertRange)

newmem:
frHorRange:
  dd (float)30   // default: 15
frVertRange:
  dd (float)15    // default: 6.2

horiz_hook_code:
  movss xmm0, [frHorRange]
  jmp horiz_hook_exit

vert_hook_code:
  movss xmm3, [frVertRange]
  jmp vert_hook_exit

//-----------
horiz_hook:
  jmp horiz_hook_code
  nop
horiz_hook_exit:

vert_hook:
  jmp vert_hook_code
  nop
vert_hook_exit:

[DISABLE]

horiz_hook:
  db horiz_bytes
  // movss xmm0,[rax+rdx*8+24]

vert_hook:
  db vert_bytes
  // movss xmm3,[rax+rdx*8+24]

unregistersymbol(frHorRange)
unregistersymbol(frVertRange)

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+46237F
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+4623A7

"Dishonored2.exe"+462341: 44 0F 29 94 24 80 01 00 00  -  movaps [rsp+00000180],xmm10
"Dishonored2.exe"+46234A: 44 0F 29 9C 24 70 01 00 00  -  movaps [rsp+00000170],xmm11
"Dishonored2.exe"+462353: 44 0F 29 A4 24 60 01 00 00  -  movaps [rsp+00000160],xmm12
"Dishonored2.exe"+46235C: 44 0F 29 AC 24 50 01 00 00  -  movaps [rsp+00000150],xmm13
"Dishonored2.exe"+462365: 44 0F 29 B4 24 40 01 00 00  -  movaps [rsp+00000140],xmm14
"Dishonored2.exe"+46236E: 45 0F 57 E4                 -  xorps xmm12,xmm12
"Dishonored2.exe"+462372: 83 F8 FF                    -  cmp eax,-01
"Dishonored2.exe"+462375: 7E 10                       -  jle Dishonored2.exe+462387
"Dishonored2.exe"+462377: 48 8D 14 80                 -  lea rdx,[rax+rax*4]
"Dishonored2.exe"+46237B: 49 8B 41 48                 -  mov rax,[r9+48]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+46237F: F3 0F 10 44 D0 24           -  movss xmm0,[rax+rdx*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+462385: EB 04                       -  jmp Dishonored2.exe+46238B
"Dishonored2.exe"+462387: 41 0F 28 C4                 -  movaps xmm0,xmm12
"Dishonored2.exe"+46238B: 48 63 87 1C 02 00 00        -  movsxd  rax,dword ptr [rdi+0000021C]
"Dishonored2.exe"+462392: F3 0F 11 87 AC 01 00 00     -  movss [rdi+000001AC],xmm0
"Dishonored2.exe"+46239A: 83 F8 FF                    -  cmp eax,-01
"Dishonored2.exe"+46239D: 7E 10                       -  jle Dishonored2.exe+4623AF
"Dishonored2.exe"+46239F: 48 8D 14 80                 -  lea rdx,[rax+rax*4]
"Dishonored2.exe"+4623A3: 49 8B 41 48                 -  mov rax,[r9+48]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+4623A7: F3 0F 10 5C D0 24           -  movss xmm3,[rax+rdx*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+4623AD: EB 04                       -  jmp Dishonored2.exe+4623B3
"Dishonored2.exe"+4623AF: 41 0F 28 DC                 -  movaps xmm3,xmm12
"Dishonored2.exe"+4623B3: 48 63 87 20 02 00 00        -  movsxd  rax,dword ptr [rdi+00000220]
"Dishonored2.exe"+4623BA: F3 0F 11 9F B0 01 00 00     -  movss [rdi+000001B0],xmm3
"Dishonored2.exe"+4623C2: 83 F8 FF                    -  cmp eax,-01
"Dishonored2.exe"+4623C5: 7E 1B                       -  jle Dishonored2.exe+4623E2
"Dishonored2.exe"+4623C7: 48 8D 14 80                 -  lea rdx,[rax+rax*4]
"Dishonored2.exe"+4623CB: 49 8B 41 48                 -  mov rax,[r9+48]
"Dishonored2.exe"+4623CF: F3 0F 10 44 D0 24           -  movss xmm0,[rax+rdx*8+24]
"Dishonored2.exe"+4623D5: 0F 2E 44 D0 08              -  ucomiss xmm0,[rax+rdx*8+08]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>4811</ID>
              <Description>"hor. (default: 15 m)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>frHorRange</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>4812</ID>
              <Description>"vert. (default: 6.2 m)"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>frVertRange</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>568047</ID>
      <Description>"Upgrades / Downgrades"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>000000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>568055</ID>
          <Description>"++ Select what you want to change, then run the "Activate" script."</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>0000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>568049</ID>
          <Description>"++ After the script has worked out, make a save and then load it."</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>0000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>568173</ID>
          <Description>"Options"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>000000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>568196</ID>
              <Description>"Powers"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>568176</ID>
                  <Description>"Get only 1st tier of each Power"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>568192</ID>
                  <Description>"Get most of the Power upgrades"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>571036</ID>
                  <Description>"Unlock Blink &amp; Far Reach"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>568181</ID>
                  <Description>"Remove all the Powers"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>568198</ID>
              <Description>"Enhancements"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>568179</ID>
                  <Description>"Get most of the Enhancements"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>568197</ID>
                  <Description>"Remove Enhancements"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>568199</ID>
              <Description>"Blueprints"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>568193</ID>
                  <Description>"Get Blueprints"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>568194</ID>
                  <Description>"Remove Blueprints"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>568200</ID>
              <Description>"Equipment, Weapons"</Description>
              <Options moHideChildren="1"/>
              <LastState Value="" RealAddress="00000000"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>568178</ID>
                  <Description>"Upgrade Equipment, except for Masterworks"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>568180</ID>
                  <Description>"Remove all the Equipment (and Masterwork) upgrades"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>568129</ID>
                  <Description>"Chose Masterworks to upgrade / downgrade"</Description>
                  <Options moHideChildren="1"/>
                  <LastState Value="" RealAddress="00000000"/>
                  <Color>000000</Color>
                  <GroupHeader>1</GroupHeader>
                  <CheatEntries>
                    <CheatEntry>
                      <ID>568132</ID>
                      <Description>"Crossbow"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>000000</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>568131</ID>
                          <Description>"Emily"</Description>
                          <Options moHideChildren="1"/>
                          <LastState Value="" RealAddress="00000000"/>
                          <Color>000000</Color>
                          <GroupHeader>1</GroupHeader>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>568148</ID>
                              <Description>"++ Select one option"</Description>
                              <LastState Value="" RealAddress="00000000"/>
                              <Color>0000FF</Color>
                              <GroupHeader>1</GroupHeader>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>568149</ID>
                              <Description>"Piercing Insult"</Description>
                              <LastState Value="" RealAddress="00000000"/>
                              <GroupHeader>1</GroupHeader>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>568150</ID>
                              <Description>"Long Distance Lover"</Description>
                              <LastState Value="" RealAddress="00000000"/>
                              <GroupHeader>1</GroupHeader>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>568152</ID>
                              <Description>"Deactivate any"</Description>
                              <LastState Value="" RealAddress="00000000"/>
                              <GroupHeader>1</GroupHeader>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>568130</ID>
                          <Description>"Corvo"</Description>
                          <Options moHideChildren="1"/>
                          <LastState Value="" RealAddress="00000000"/>
                          <Color>000000</Color>
                          <GroupHeader>1</GroupHeader>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>568147</ID>
                              <Description>"++ Select one option"</Description>
                              <LastState Value="" RealAddress="00000000"/>
                              <Color>0000FF</Color>
                              <GroupHeader>1</GroupHeader>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>568145</ID>
                              <Description>"Coffin Nails"</Description>
                              <LastState Value="" RealAddress="00000000"/>
                              <GroupHeader>1</GroupHeader>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>568146</ID>
                              <Description>"The Dealer"</Description>
                              <LastState Value="" RealAddress="00000000"/>
                              <GroupHeader>1</GroupHeader>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>568151</ID>
                              <Description>"Deactivate any"</Description>
                              <LastState Value="" RealAddress="00000000"/>
                              <GroupHeader>1</GroupHeader>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>568142</ID>
                      <Description>"Howling Bolt"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>000000</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>568144</ID>
                          <Description>"++ Select one option"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <Color>0000FF</Color>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>568133</ID>
                          <Description>"Ancient Howl Bolt"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>568141</ID>
                          <Description>"Deep Howl Bolt"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>568143</ID>
                          <Description>"Deactivate any"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>568134</ID>
                      <Description>"Pistol"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>000000</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>568136</ID>
                          <Description>"Emily"</Description>
                          <Options moHideChildren="1"/>
                          <LastState Value="" RealAddress="00000000"/>
                          <Color>000000</Color>
                          <GroupHeader>1</GroupHeader>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>568155</ID>
                              <Description>"++ Select one option"</Description>
                              <LastState Value="" RealAddress="00000000"/>
                              <Color>0000FF</Color>
                              <GroupHeader>1</GroupHeader>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>568153</ID>
                              <Description>"The Red Siblings"</Description>
                              <LastState Value="" RealAddress="00000000"/>
                              <GroupHeader>1</GroupHeader>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>568154</ID>
                              <Description>"The Insistent Gentleman"</Description>
                              <LastState Value="" RealAddress="00000000"/>
                              <GroupHeader>1</GroupHeader>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>568156</ID>
                              <Description>"Deactivate any"</Description>
                              <LastState Value="" RealAddress="00000000"/>
                              <GroupHeader>1</GroupHeader>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>568135</ID>
                          <Description>"Corvo"</Description>
                          <Options moHideChildren="1"/>
                          <LastState Value="" RealAddress="00000000"/>
                          <Color>000000</Color>
                          <GroupHeader>1</GroupHeader>
                          <CheatEntries>
                            <CheatEntry>
                              <ID>568158</ID>
                              <Description>"++ Select one option"</Description>
                              <LastState Value="" RealAddress="00000000"/>
                              <Color>0000FF</Color>
                              <GroupHeader>1</GroupHeader>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>568160</ID>
                              <Description>"The Determined Traveler"</Description>
                              <LastState Value="" RealAddress="00000000"/>
                              <GroupHeader>1</GroupHeader>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>568161</ID>
                              <Description>"The Crimson Painter"</Description>
                              <LastState Value="" RealAddress="00000000"/>
                              <GroupHeader>1</GroupHeader>
                            </CheatEntry>
                            <CheatEntry>
                              <ID>568159</ID>
                              <Description>"Deactivate any"</Description>
                              <LastState Value="" RealAddress="00000000"/>
                              <GroupHeader>1</GroupHeader>
                            </CheatEntry>
                          </CheatEntries>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>568162</ID>
                      <Description>"Gear"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>000000</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>568157</ID>
                          <Description>"++ Select one option"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <Color>0000FF</Color>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>568138</ID>
                          <Description>"Collector's Carapace"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>568165</ID>
                          <Description>"Moth Dust Wrappings"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>568166</ID>
                          <Description>"Deactivate any"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>568163</ID>
                      <Description>"Sword"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>000000</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>568167</ID>
                          <Description>"++ Select one option"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <Color>0000FF</Color>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>568139</ID>
                          <Description>"Monkey Wrench"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>568171</ID>
                          <Description>"Occult Kiss"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>568169</ID>
                          <Description>"Deactivate any"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                    <CheatEntry>
                      <ID>568164</ID>
                      <Description>"Grenade"</Description>
                      <Options moHideChildren="1"/>
                      <LastState Value="" RealAddress="00000000"/>
                      <Color>000000</Color>
                      <GroupHeader>1</GroupHeader>
                      <CheatEntries>
                        <CheatEntry>
                          <ID>568168</ID>
                          <Description>"++ Select one option"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <Color>0000FF</Color>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>568140</ID>
                          <Description>"The Expansive Lady"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>568172</ID>
                          <Description>"Discreet Inquiry"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                        <CheatEntry>
                          <ID>568170</ID>
                          <Description>"Deactivate any"</Description>
                          <LastState Value="" RealAddress="00000000"/>
                          <GroupHeader>1</GroupHeader>
                        </CheatEntry>
                      </CheatEntries>
                    </CheatEntry>
                  </CheatEntries>
                </CheatEntry>
                <CheatEntry>
                  <ID>568182</ID>
                  <Description>"Get Sword"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>571006</ID>
                  <Description>"Get Pistol"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>571007</ID>
                  <Description>"Get Crossbow"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>571008</ID>
                  <Description>"Remove Sword"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>571009</ID>
                  <Description>"Remove Pistol"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>571010</ID>
                  <Description>"Remove Crossbow"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>571003</ID>
                  <Description>"Get Equipment"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
                <CheatEntry>
                  <ID>568195</ID>
                  <Description>"Remove Equipment"</Description>
                  <LastState Value="" RealAddress="00000000"/>
                  <GroupHeader>1</GroupHeader>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>570998</ID>
          <Description>"Activate"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]

{$lua}

local Power = {
  "models/powers/bendtime/bendtime.inventoryitem",
  "models/powers/blink/blink.inventoryitem",
  "models/powers/blink/blink_emily.inventoryitem",
  "models/powers/darkvision/darkvision.inventoryitem",
  "models/powers/devouring_swarm/devouring_swarm.inventoryitem",
  "models/powers/doppelganger/doppelganger.inventoryitem",
  "models/powers/doppelganger/doppelganger_corvo.inventoryitem",
  "models/powers/grapple/grapple.inventoryitem",
  "models/powers/grapple/grapple_corvo.inventoryitem",
  "models/powers/mesmerize/mesmerize.inventoryitem",
  "models/powers/phantasmallink/phantasmal_link.inventoryitem",
  "models/powers/possession/possession.inventoryitem",
  "models/powers/shadow_walk/shadow_walk.inventoryitem",
  "models/powers/windblast/windblast.inventoryitem",
  base = {
    "models/powers/grapple/grapple.inventoryitem",
    "models/powers/grapple/grapple_corvo.inventoryitem",
    "models/powers/blink/blink.inventoryitem",
    "models/powers/blink/blink_emily.inventoryitem",
  },
}


local Item = {
  rune = {"components/interactive/rune_pickable.inventoryitem"},
  ammo = {
    "components/equipment/ammo/bolt_burning_venom.inventoryitem",
    "components/equipment/ammo/bolt_flashbang.inventoryitem",
    "components/equipment/ammo/bolt_incendiary.inventoryitem",
    "components/equipment/ammo/bolt_regular.inventoryitem",
    "components/equipment/ammo/bolt_tranquilizer.inventoryitem",
    "components/equipment/ammo/bullet.inventoryitem",
    "components/equipment/ammo/bullet_explosive.inventoryitem",
    howl = {"components/equipment/ammo/bolt_flashbang.inventoryitem"},
  },
  mpotion = {
    "components/interactive/mana_potion.inventoryitem",
  },
  hpotion = {
    "components/interactive/health_potion.inventoryitem",
  },
}


local PowerUpgrade = {
  "components/characters/player/base/attributes/bendtime_extended_duration.inventoryitem",
  "components/characters/player/base/attributes/bendtime_relativity.inventoryitem",
  "components/characters/player/base/attributes/bendtime_stoptime.inventoryitem",
  "components/characters/player/base/attributes/blink_assault.inventoryitem",
  "components/characters/player/base/attributes/blink_bendtime.inventoryitem",
  "components/characters/player/base/attributes/blink_distance.inventoryitem",
  "components/characters/player/base/attributes/darkvision_greater.inventoryitem",
  "components/characters/player/base/attributes/darkvision_premonition.inventoryitem",
  "components/characters/player/base/attributes/devouring_swarm_bigger.inventoryitem",
  "components/characters/player/base/attributes/devouring_swarm_double.inventoryitem",
  "components/characters/player/base/attributes/devouring_swarm_follow_player.inventoryitem",
  "components/characters/player/base/attributes/domino_death_link.inventoryitem",
  "components/characters/player/base/attributes/domino_link_3.inventoryitem",
  "components/characters/player/base/attributes/domino_link_4.inventoryitem",
  "components/characters/player/base/attributes/doppelganger_baffling_shade.inventoryitem",
  "components/characters/player/base/attributes/doppelganger_deadlyshade.inventoryitem",
  "components/characters/player/base/attributes/doppelganger_transposition.inventoryitem",
  "components/characters/player/base/attributes/doppelganger_twinshade.inventoryitem",
  "components/characters/player/base/attributes/grapple_greater_far_reach.inventoryitem",
  "components/characters/player/base/attributes/grapple_pull_npcs.inventoryitem",
  "components/characters/player/base/attributes/grapple_pull_objects.inventoryitem",
  "components/characters/player/base/attributes/mesmerize_duration.inventoryitem",
  "components/characters/player/base/attributes/mesmerize_four.inventoryitem",
  "components/characters/player/base/attributes/mesmerize_incombat.inventoryitem",
  "components/characters/player/base/attributes/mesmerize_three.inventoryitem",
  "components/characters/player/base/attributes/possession_alchemist.inventoryitem",
  "components/characters/player/base/attributes/possession_decayed_harbor.inventoryitem",
  "components/characters/player/base/attributes/possession_ext_duration.inventoryitem",
  "components/characters/player/base/attributes/possession_fast_swap.inventoryitem",
  "components/characters/player/base/attributes/possession_parasite.inventoryitem",
  "components/characters/player/base/attributes/shadow_walk_light_damage.inventoryitem",
  "components/characters/player/base/attributes/shadow_walk_rat_shadow.inventoryitem",
  "components/characters/player/base/attributes/shadow_walk_run.inventoryitem",
  "components/characters/player/base/attributes/shadow_walk_second_attack.inventoryitem",
  "components/characters/player/base/attributes/shadow_walk_third_attack.inventoryitem",
  "components/characters/player/base/attributes/windblast_greater.inventoryitem",
  "components/characters/player/base/attributes/windblast_shockwave.inventoryitem",
}

local PowerUpgradeLethal = {
  "components/characters/player/base/attributes/bendtime_stoptime.inventoryitem",
  "components/characters/player/base/attributes/doppelganger_deadlyshade.inventoryitem",
  "components/characters/player/base/attributes/windblast_greater.inventoryitem",
}

local Weapons = {
  sword = {"models/weapons/ply_sword/ply_sword"},
  pistol = {
    "models/weapons/gun_player/gun_emily.inventoryitem",
    "models/weapons/gun_player/gun_player.inventoryitem",
    "components/equipment/ammo/bullet.inventoryitem",
  },
  cross = {
    "models/weapons/crossbow/crossbow_corvo.inventoryitem",
    "models/weapons/crossbow/crossbow_emily.inventoryitem",
    "components/equipment/ammo/bolt_regular.inventoryitem",
  },
}

local Equipment = {
  "components/equipment/gadgets/regular_grenade.inventoryitem",
  "components/equipment/gadgets/springrazor.inventoryitem",
  "components/equipment/gadgets/sticky_grenade.inventoryitem",
  "components/equipment/gadgets/stun_mine.inventoryitem",
  "models/items/spyglass/spyglass.inventoryitem",
  "models/items/spyglass/spyglass_corvo.inventoryitem",
}

local EquipmentUpgrade = {
  "components/characters/player/base/attributes/bonecharm_slots_1.inventoryitem",
  "components/characters/player/base/attributes/bonecharm_slots_2.inventoryitem",
  "components/characters/player/base/attributes/crossbow_accuracy_corvo.equipmentupgrade",
  "components/characters/player/base/attributes/crossbow_accuracy_emily.equipmentupgrade",
  "components/characters/player/base/attributes/crossbow_area_combustion.equipmentupgrade",
  "components/characters/player/base/attributes/crossbow_bolt_storage_1.equipmentupgrade",
  "components/characters/player/base/attributes/crossbow_bolt_storage_2.equipmentupgrade",
  "components/characters/player/base/attributes/crossbow_burning_venom_darts.equipmentupgrade",
  "components/characters/player/base/attributes/crossbow_hard_bolts.equipmentupgrade",
  "components/characters/player/base/attributes/crossbow_howling_bolts.equipmentupgrade",
  "components/characters/player/base/attributes/crossbow_incendiary_bolts.equipmentupgrade",
  "components/characters/player/base/attributes/crossbow_instant_sleep.equipmentupgrade",
  "components/characters/player/base/attributes/crossbow_range_corvo.equipmentupgrade",
  "components/characters/player/base/attributes/crossbow_range_emily.equipmentupgrade",
  "components/characters/player/base/attributes/crossbow_reload_speed_corvo.equipmentupgrade",
  "components/characters/player/base/attributes/crossbow_reload_speed_emily.equipmentupgrade",
  "components/characters/player/base/attributes/grenade_impact.equipmentupgrade",
  "components/characters/player/base/attributes/grenade_sticky.equipmentupgrade",
  "components/characters/player/base/attributes/grenade_storage.equipmentupgrade",
  "components/characters/player/base/attributes/gun_accuracy_0_emily.equipmentupgrade",
  "components/characters/player/base/attributes/gun_accuracy_1_corvo.equipmentupgrade",
  "components/characters/player/base/attributes/gun_accuracy_1_emily.equipmentupgrade",
  "components/characters/player/base/attributes/gun_accuracy_2_corvo.equipmentupgrade",
  "components/characters/player/base/attributes/gun_accuracy_2_emily.equipmentupgrade",
  "components/characters/player/base/attributes/gun_armored_bullets.equipmentupgrade",
  "components/characters/player/base/attributes/gun_bullet_storage_1.equipmentupgrade",
  "components/characters/player/base/attributes/gun_bullet_storage_2.equipmentupgrade",
  "components/characters/player/base/attributes/gun_electrified_bullets.equipmentupgrade",
  "components/characters/player/base/attributes/gun_explosive_bullets.equipmentupgrade",
  "components/characters/player/base/attributes/gun_explosive_clusters.equipmentupgrade",
  "components/characters/player/base/attributes/gun_magazine_0_corvo.equipmentupgrade",
  "components/characters/player/base/attributes/gun_magazine_1_corvo.equipmentupgrade",
  "components/characters/player/base/attributes/gun_magazine_1_emily.equipmentupgrade",
  "components/characters/player/base/attributes/gun_magazine_2_corvo.equipmentupgrade",
  "components/characters/player/base/attributes/gun_magazine_2_emily.equipmentupgrade",
  "components/characters/player/base/attributes/gun_magazine_3_corvo.equipmentupgrade",
  "components/characters/player/base/attributes/gun_magazine_3_emily.equipmentupgrade",
  "components/characters/player/base/attributes/gun_reload_speed_1_corvo.equipmentupgrade",
  "components/characters/player/base/attributes/gun_reload_speed_1_emily.equipmentupgrade",
  "components/characters/player/base/attributes/gun_reload_speed_2_corvo.equipmentupgrade",
  "components/characters/player/base/attributes/gun_reload_speed_2_emily.equipmentupgrade",
  "components/characters/player/base/attributes/silent_running_corvo.inventoryitem",
  "components/characters/player/base/attributes/silent_running_emily.inventoryitem",
  "components/characters/player/base/attributes/silent_sprinting.inventoryitem",
  "components/characters/player/base/attributes/springrazor_double_slice.equipmentupgrade",
  "components/characters/player/base/attributes/springrazor_max_radius.equipmentupgrade",
  "components/characters/player/base/attributes/springrazor_storage.equipmentupgrade",
  "components/characters/player/base/attributes/spyglass_extra_zoom_level_corvo.inventoryitem",
  "components/characters/player/base/attributes/spyglass_extra_zoom_level_emily.inventoryitem",
  "components/characters/player/base/attributes/sticky_grenades.inventoryitem",
  "components/characters/player/base/attributes/stun_mine_chain_lightning.equipmentupgrade",
  "components/characters/player/base/attributes/stun_mine_charge_1.equipmentupgrade",
  "components/characters/player/base/attributes/stun_mine_charge_2.equipmentupgrade",
  "components/characters/player/base/attributes/sword_crossing.equipmentupgrade",
}

local MWUpgrade = {
  "components/characters/player/base/attributes/armor_corvo.inventoryitem",
  "components/characters/player/base/attributes/armor_emily.inventoryitem",
  "components/characters/player/base/attributes/camouflage_corvo.inventoryitem",
  "components/characters/player/base/attributes/camouflage_emily.inventoryitem",
  "components/characters/player/base/attributes/crossbow_ancient_howl.equipmentupgrade",
  "components/characters/player/base/attributes/crossbow_firelock_corvo.equipmentupgrade",
  "components/characters/player/base/attributes/crossbow_low_frequency_howl.equipmentupgrade",
  "components/characters/player/base/attributes/crossbow_nailgun_corvo.equipmentupgrade",
  "components/characters/player/base/attributes/crossbow_railgun_emily.equipmentupgrade",
  "components/characters/player/base/attributes/crossbow_snipe_emily.equipmentupgrade",
  "components/characters/player/base/attributes/grenade_max_radius.equipmentupgrade",
  "components/characters/player/base/attributes/grenade_muffled.equipmentupgrade",
  "components/characters/player/base/attributes/gun_burst_emily.equipmentupgrade",
  "components/characters/player/base/attributes/gun_full_auto_emily.equipmentupgrade",
  "components/characters/player/base/attributes/gun_shotgun_corvo.equipmentupgrade",
  "components/characters/player/base/attributes/gun_snipe_corvo.equipmentupgrade",
  "components/characters/player/base/attributes/sword_grinding_blade.equipmentupgrade",
  "components/characters/player/base/attributes/sword_whale_bone_blade.equipmentupgrade",
}

local Masterwork = {
  armorc  = {"components/characters/player/base/attributes/armor_corvo.inventoryitem"},
  armore  = {"components/characters/player/base/attributes/armor_emily.inventoryitem"},
  camoc   = {"components/characters/player/base/attributes/camouflage_corvo.inventoryitem"},
  camoe   = {"components/characters/player/base/attributes/camouflage_emily.inventoryitem"},
  ancient = {"components/characters/player/base/attributes/crossbow_ancient_howl.equipmentupgrade"},
  lock    = {"components/characters/player/base/attributes/crossbow_firelock_corvo.equipmentupgrade"},
  lowfq   = {"components/characters/player/base/attributes/crossbow_low_frequency_howl.equipmentupgrade"},
  nail    = {"components/characters/player/base/attributes/crossbow_nailgun_corvo.equipmentupgrade"},
  rail    = {"components/characters/player/base/attributes/crossbow_railgun_emily.equipmentupgrade"},
  snipee  = {"components/characters/player/base/attributes/crossbow_snipe_emily.equipmentupgrade"},
  radius  = {"components/characters/player/base/attributes/grenade_max_radius.equipmentupgrade"},
  muffled = {"components/characters/player/base/attributes/grenade_muffled.equipmentupgrade"},
  burst   = {"components/characters/player/base/attributes/gun_burst_emily.equipmentupgrade"},
  auto    = {"components/characters/player/base/attributes/gun_full_auto_emily.equipmentupgrade"},
  shotgun = {"components/characters/player/base/attributes/gun_shotgun_corvo.equipmentupgrade"},
  snipec  = {"components/characters/player/base/attributes/gun_snipe_corvo.equipmentupgrade"},
  grind   = {"components/characters/player/base/attributes/sword_grinding_blade.equipmentupgrade"},
  bone    = {"components/characters/player/base/attributes/sword_whale_bone_blade.equipmentupgrade"},
  dependence = {
    cross = {
      emily = {
        "components/characters/player/base/attributes/crossbow_accuracy_emily.equipmentupgrade",
        "components/characters/player/base/attributes/crossbow_range_emily.equipmentupgrade",
        "components/characters/player/base/attributes/crossbow_reload_speed_emily.equipmentupgrade",
      },
      corvo = {
        "components/characters/player/base/attributes/crossbow_accuracy_corvo.equipmentupgrade",
        "components/characters/player/base/attributes/crossbow_range_corvo.equipmentupgrade",
        "components/characters/player/base/attributes/crossbow_reload_speed_corvo.equipmentupgrade",
      },
      bolt = {
        "components/characters/player/base/attributes/crossbow_howling_bolts.equipmentupgrade",
      },
    },
    pistol = {
      emily = {
        "components/characters/player/base/attributes/gun_reload_speed_1_emily.equipmentupgrade",
        "components/characters/player/base/attributes/gun_reload_speed_2_emily.equipmentupgrade",
        "components/characters/player/base/attributes/gun_magazine_1_emily.equipmentupgrade",
        "components/characters/player/base/attributes/gun_magazine_2_emily.equipmentupgrade",
        "components/characters/player/base/attributes/gun_magazine_3_emily.equipmentupgrade",
        "components/characters/player/base/attributes/gun_accuracy_0_emily.equipmentupgrade",
        "components/characters/player/base/attributes/gun_accuracy_1_emily.equipmentupgrade",
        "components/characters/player/base/attributes/gun_accuracy_2_emily.equipmentupgrade",
      },
      corvo = {
        "components/characters/player/base/attributes/gun_reload_speed_1_corvo.equipmentupgrade",
        "components/characters/player/base/attributes/gun_reload_speed_2_corvo.equipmentupgrade",
        "components/characters/player/base/attributes/gun_magazine_0_corvo.equipmentupgrade",
        "components/characters/player/base/attributes/gun_magazine_1_corvo.equipmentupgrade",
        "components/characters/player/base/attributes/gun_magazine_2_corvo.equipmentupgrade",
        "components/characters/player/base/attributes/gun_magazine_3_corvo.equipmentupgrade",
        "components/characters/player/base/attributes/gun_accuracy_1_corvo.equipmentupgrade",
        "components/characters/player/base/attributes/gun_accuracy_2_corvo.equipmentupgrade",
      },
    },
  },
}

local Blueprint = {
  "models/interactive/valuables/blueprints/blueprint.inventoryitem",
  "models/interactive/valuables/blueprints/blueprint_master.inventoryitem",
  "models/interactive/valuables/blueprints/bonecharm_2slot.inventoryitem",
  "models/interactive/valuables/blueprints/bonecharm_3slot.inventoryitem",
  "models/interactive/valuables/blueprints/boots_silentrunning.inventoryitem",
  "models/interactive/valuables/blueprints/boots_silentsprinting.inventoryitem",
  "models/interactive/valuables/blueprints/crossbow_accuracy.inventoryitem",
  "models/interactive/valuables/blueprints/crossbow_ancienthowl.inventoryitem",
  "models/interactive/valuables/blueprints/crossbow_areacombustion.inventoryitem",
  "models/interactive/valuables/blueprints/crossbow_boltcapacity1.inventoryitem",
  "models/interactive/valuables/blueprints/crossbow_boltcapacity2.inventoryitem",
  "models/interactive/valuables/blueprints/crossbow_burningvenomdart.inventoryitem",
  "models/interactive/valuables/blueprints/crossbow_extendedrange.inventoryitem",
  "models/interactive/valuables/blueprints/crossbow_hardbolt.inventoryitem",
  "models/interactive/valuables/blueprints/crossbow_howlingbolt.inventoryitem",
  "models/interactive/valuables/blueprints/crossbow_incendiarybolt.inventoryitem",
  "models/interactive/valuables/blueprints/crossbow_instantsleepdart.inventoryitem",
  "models/interactive/valuables/blueprints/crossbow_lowfrequency.inventoryitem",
  "models/interactive/valuables/blueprints/crossbow_reloadspeed.inventoryitem",
  "models/interactive/valuables/blueprints/grenade_ammo.inventoryitem",
  "models/interactive/valuables/blueprints/grenade_impactgrenade.inventoryitem",
  "models/interactive/valuables/blueprints/grenade_stickygrenade.inventoryitem",
  "models/interactive/valuables/blueprints/master_armor.inventoryitem",
  "models/interactive/valuables/blueprints/master_crossbow.inventoryitem",
  "models/interactive/valuables/blueprints/master_crossbow_ammo.inventoryitem",
  "models/interactive/valuables/blueprints/master_crossbow_corvo.inventoryitem",
  "models/interactive/valuables/blueprints/master_crossbow_emily.inventoryitem",
  "models/interactive/valuables/blueprints/master_crossbow_firelock.inventoryitem",
  "models/interactive/valuables/blueprints/master_crossbow_nailgun.inventoryitem",
  "models/interactive/valuables/blueprints/master_crossbow_railgun.inventoryitem",
  "models/interactive/valuables/blueprints/master_crossbow_snipe.inventoryitem",
  "models/interactive/valuables/blueprints/master_grenade.inventoryitem",
  "models/interactive/valuables/blueprints/master_pistol.inventoryitem",
  "models/interactive/valuables/blueprints/master_pistol_corvo.inventoryitem",
  "models/interactive/valuables/blueprints/master_pistol_emily.inventoryitem",
  "models/interactive/valuables/blueprints/master_sword.inventoryitem",
  "models/interactive/valuables/blueprints/pistol_accuracy1.inventoryitem",
  "models/interactive/valuables/blueprints/pistol_accuracy2.inventoryitem",
  "models/interactive/valuables/blueprints/pistol_ammostorage1.inventoryitem",
  "models/interactive/valuables/blueprints/pistol_ammostorage2.inventoryitem",
  "models/interactive/valuables/blueprints/pistol_armoredshot.inventoryitem",
  "models/interactive/valuables/blueprints/pistol_explosivebullets.inventoryitem",
  "models/interactive/valuables/blueprints/pistol_explosiveclusters.inventoryitem",
  "models/interactive/valuables/blueprints/pistol_magazine1.inventoryitem",
  "models/interactive/valuables/blueprints/pistol_magazine2.inventoryitem",
  "models/interactive/valuables/blueprints/pistol_magazine3.inventoryitem",
  "models/interactive/valuables/blueprints/pistol_magnetizedbullet.inventoryitem",
  "models/interactive/valuables/blueprints/pistol_reloadspeed1.inventoryitem",
  "models/interactive/valuables/blueprints/pistol_reloadspeed2.inventoryitem",
  "models/interactive/valuables/blueprints/springrazor_ammo.inventoryitem",
  "models/interactive/valuables/blueprints/springrazor_doubleslice.inventoryitem",
  "models/interactive/valuables/blueprints/springrazor_radiusmax.inventoryitem",
  "models/interactive/valuables/blueprints/spyglass_zoom.inventoryitem",
  "models/interactive/valuables/blueprints/stunmine_chainlightning.inventoryitem",
  "models/interactive/valuables/blueprints/stunmine_charge1.inventoryitem",
  "models/interactive/valuables/blueprints/stunmine_charge2.inventoryitem",
  "models/interactive/valuables/blueprints/sword_crossing.inventoryitem",
  "models/interactive/valuables/blueprints/sword_fastunsheathe.inventoryitem",
}

local Enhancement = {
  "components/characters/player/base/attributes/adept_parry.inventoryitem",
  "components/characters/player/base/attributes/bonecharmcrafting_1.inventoryitem",
  "components/characters/player/base/attributes/bonecharmcrafting_2.inventoryitem",
  "components/characters/player/base/attributes/bonecharmcrafting_3.inventoryitem",
  "components/characters/player/base/attributes/bonecharmcrafting_4.inventoryitem",
  "components/characters/player/base/attributes/bonecharmcrafting_trait_mastery.inventoryitem",
  "components/characters/player/base/attributes/bonecharmcrafting_trait_synergy.inventoryitem",
  "components/characters/player/base/attributes/brisk_eye.inventoryitem",
  "components/characters/player/base/attributes/extended_health.inventoryitem",
  "components/characters/player/base/attributes/fall_damage_reduction.inventoryitem",
  "components/characters/player/base/attributes/improved_health_regen.inventoryitem",
  "components/characters/player/base/attributes/improved_sprint.inventoryitem",
  "components/characters/player/base/attributes/projectile_deflection.inventoryitem",
  "components/characters/player/base/attributes/reflexes_slide_shooter.inventoryitem",
  "components/characters/player/base/attributes/strength_death_throw.inventoryitem",
  "components/characters/player/base/attributes/strength_greater.inventoryitem",
  "components/characters/player/base/attributes/super_jump.inventoryitem",
}

local EnhancementOffensive = {
  "components/characters/player/base/attributes/bloodthirsty.inventoryitem",
  "components/characters/player/base/attributes/bloodthirsty_adrenaline_burst.inventoryitem",
  "components/characters/player/base/attributes/bloodthirsty_greater.inventoryitem",
  "components/characters/player/base/attributes/finesse_greater_assassination.inventoryitem",
  "components/characters/player/base/attributes/projectile_perfect_deflection.inventoryitem",
  "components/characters/player/base/attributes/shadow_kill.inventoryitem",
  "components/characters/player/base/attributes/shadow_kill_bloody_swarm.inventoryitem",
  "components/characters/player/base/attributes/shadow_kill_greater.inventoryitem",
}

local ID_PARENT        = 568047 -- Upgrades / Downgrades

local UP_PWRMIN        = 568176 -- Get only 1st tier of each Power
local UP_PWRMAX        = 568192 -- Get most of the Power upgrades
local UP_PWR           = 571036 -- Unlock Blink &amp; Far Reach
local RM_PWR           = 568181 -- Remove all the Powers
local UP_ENH           = 568179 -- Get most of the Enhancements
local RM_ENH           = 568197 -- Remove Enhancements
local UP_BP            = 568193 -- Get Blueprints
local RM_BP            = 568194 -- Remove Blueprints
local UP_EQ            = 568178 -- Upgrade Equipment, except for Masterworks
local DN_EQ            = 568180 -- Remove all the Equipment (and Masterwork) upgrades

local UP_MW_E_RAIL     = 568149 -- Piercing Insult
local UP_MW_E_SNIPE    = 568150 -- Long Distance Lover
local RM_MW_E_CROSS    = 568152 -- Deactivate

local UP_MW_C_NAIL     = 568145 -- Coffin Nails
local UP_MW_C_LOCK     = 568146 -- The Dealer
local RM_MW_C_CROSS    = 568151 -- Deactivate

local UP_MW_ANC        = 568133 -- Ancient Howl Bolt
local UP_MW_LOW        = 568141 -- Deep Howl Bolt
local RM_MW_HWL        = 568143 -- Deactivate

local UP_MW_E_BURST    = 568153 -- The Red Siblings
local UP_MW_E_AUTO     = 568154 -- The Insistent Gentleman
local RM_MW_E_PISTOL   = 568156 -- Deactivate

local UP_MW_C_SNIPE    = 568160 -- The Determined Traveler
local UP_MW_C_SHOTGUN  = 568161 -- The Crimson Painter
local RM_MW_C_PISTOL   = 568159 -- Deactivate

local UP_MW_ARMOR      = 568138 -- Collector's Carapace
local UP_MW_CAMO       = 568165 -- Moth Dust Wrappings
local RM_MW_ARMOR      = 568166 -- Deactivate

local UP_MW_GRINDBLADE = 568139 -- Monkey Wrench
local UP_MW_BONEBLADE  = 568171 -- Occult Kiss
local RM_MW_BLADE      = 568169 -- Deactivate

local UP_MW_GRRADIUS   = 568140 -- The Expansive Lady
local UP_MW_GRMUFFLED  = 568172 -- Discreet Inquiry
local RM_MW_GRENADE    = 568170 -- Deactivate

local UP_SWORD         = 568182 -- Get Sword
local UP_PISTOL        = 571006 -- Get Pistol
local UP_CROSS         = 571007 -- Get Crossbow
local RM_SWORD         = 571008 -- Remove Sword
local RM_PISTOL        = 571009 -- Remove Pistol
local RM_CROSS         = 571010 -- Remove Crossbow
local UP_GEAR          = 571003 -- Get Equipment
local RM_GEAR          = 568195 -- Remove Equipment


local idorder = {
  UP_PWRMIN, UP_PWRMAX, UP_PWR, RM_PWR, UP_ENH, RM_ENH, UP_BP, RM_BP, UP_EQ, DN_EQ,
  UP_MW_E_RAIL, UP_MW_E_SNIPE, RM_MW_E_CROSS,
  UP_MW_C_NAIL, UP_MW_C_LOCK, RM_MW_C_CROSS,
  UP_MW_ANC, UP_MW_LOW, RM_MW_HWL,
  UP_MW_E_BURST, UP_MW_E_AUTO, RM_MW_E_PISTOL,
  UP_MW_C_SNIPE, UP_MW_C_SHOTGUN, RM_MW_C_PISTOL,
  UP_MW_ARMOR, UP_MW_CAMO, RM_MW_ARMOR,
  UP_MW_GRINDBLADE, UP_MW_BONEBLADE, RM_MW_BLADE,
  UP_MW_GRRADIUS, UP_MW_GRMUFFLED, RM_MW_GRENADE,
  UP_SWORD, UP_PISTOL, UP_CROSS, RM_SWORD, RM_PISTOL, RM_CROSS, UP_GEAR, RM_GEAR,
}

local ActionMap = {
  [UP_PWRMIN]        =  {Power, PowerUpgrade, 0,      -- Get only 1st tier of each Power
                         Item.rune, Item.mpotion},
  [UP_PWRMAX]        =  {Power, PowerUpgrade,         -- Get most of the Power upgrades
                         Item.rune, Item.mpotion,
                         PowerUpgradeLethal, 0},
  [UP_PWR]           =  {Power.base},                 -- Unlock Blink &amp; Far Reach
  [RM_PWR]           =  {Power, 0},                   -- Remove all the Powers
  [UP_ENH]           =  {Enhancement, EnhancementOffensive, 0},  -- Get most of the Enhancements
  [RM_ENH]           =  {Enhancement, 0},                        -- Remove Enhancements
  [UP_BP]            =  {Blueprint},                             -- Get Blueprints
  [RM_BP]            =  {Blueprint, 0},                          -- Remove Blueprints
  [UP_EQ]            =  {EquipmentUpgrade},                      -- Upgrade Equipment, except for Masterworks
  [DN_EQ]            =  {EquipmentUpgrade, 0, MWUpgrade, 0},     -- Remove all the Equipment (and Masterwork) upgrades

  [UP_MW_E_RAIL]     =  {Masterwork.rail, Masterwork.snipee, 0,     -- Piercing Insult
                         Masterwork.dependence.cross.emily},
  [UP_MW_E_SNIPE]    =  {Masterwork.snipee, Masterwork.rail, 0,     -- Long Distance Lover
                         Masterwork.dependence.cross.emily},
  [RM_MW_E_CROSS]    =  {Masterwork.rail, 0, Masterwork.snipee, 0}, -- Deactivate

  [UP_MW_C_NAIL]     =  {Masterwork.nail, Masterwork.lock, 0,       -- Coffin Nails
                         Masterwork.dependence.cross.corvo},
  [UP_MW_C_LOCK]     =  {Masterwork.lock, Masterwork.nail, 0,       -- The Dealer
                         Masterwork.dependence.cross.corvo},
  [RM_MW_C_CROSS]    =  {Masterwork.nail, 0, Masterwork.lock, 0},   -- Deactivate

  [UP_MW_ANC]        =  {Masterwork.ancient, Masterwork.lowfq, 0,          -- Ancient Howl Bolt
                         Masterwork.dependence.cross.bolt, Item.ammo.howl},
  [UP_MW_LOW]        =  {Masterwork.lowfq, Masterwork.ancient, 0,          -- Deep Howl Bolt
                         Masterwork.dependence.cross.bolt, Item.ammo.howl},
  [RM_MW_HWL]        =  {Masterwork.ancient, 0, Masterwork.lowfq, 0},  -- Deactivate

  [UP_MW_E_BURST]    =  {Masterwork.burst, Masterwork.auto, 0,         -- The Red Siblings
                         Masterwork.dependence.pistol.emily},
  [UP_MW_E_AUTO]     =  {Masterwork.auto, Masterwork.burst, 0,         -- The Insistent Gentleman
                         Masterwork.dependence.pistol.emily},
  [RM_MW_E_PISTOL]   =  {Masterwork.burst, 0, Masterwork.auto, 0},     -- Deactivate

  [UP_MW_C_SNIPE]    =  {Masterwork.snipec, Masterwork.shotgun, 0,     -- The Determined Traveler
                         Masterwork.dependence.pistol.corvo},
  [UP_MW_C_SHOTGUN]  =  {Masterwork.shotgun, Masterwork.snipec, 0,     -- The Crimson Painter
                         Masterwork.dependence.pistol.corvo},
  [RM_MW_C_PISTOL]   =  {Masterwork.snipec, 0, Masterwork.shotgun, 0}, -- Deactivate

  [UP_MW_ARMOR]      =  {Masterwork.armore, Masterwork.armorc,         -- Collector's Carapace
                         Masterwork.camoe, 0, Masterwork.camoc, 0},
  [UP_MW_CAMO]       =  {Masterwork.camoe, Masterwork.camoc,           -- Moth Dust Wrappings
                         Masterwork.armore, 0, Masterwork.armorc, 0},
  [RM_MW_ARMOR]      =  {Masterwork.armore, 0, Masterwork.armorc, 0,
                         Masterwork.camoe, 0, Masterwork.camoc, 0},    -- Deactivate

  [UP_MW_GRINDBLADE] =  {Masterwork.grind, Masterwork.bone, 0},        -- Monkey Wrench
  [UP_MW_BONEBLADE]  =  {Masterwork.bone, Masterwork.grind, 0},        -- Occult Kiss
  [RM_MW_BLADE]      =  {Masterwork.grind, 0, Masterwork.bone, 0},     -- Deactivate

  [UP_MW_GRRADIUS]   =  {Masterwork.radius, Masterwork.muffled, 0},    -- The Expansive Lady
  [UP_MW_GRMUFFLED]  =  {Masterwork.muffled, Masterwork.radius, 0},    -- Discreet Inquiry
  [RM_MW_GRENADE]    =  {Masterwork.radius, 0, Masterwork.muffled, 0}, -- Deactivate

  [UP_SWORD]         =  {Weapons.sword, Item.hpotion},  -- Get Sword
  [UP_PISTOL]        =  {Weapons.pistol, Item.hpotion}, -- Get Pistol
  [UP_CROSS]         =  {Weapons.cross, Item.hpotion},  -- Get Crossbow
  [RM_SWORD]         =  {Weapons.sword, 0},             -- Remove Sword
  [RM_PISTOL]        =  {Weapons.pistol, 0},            -- Remove Pistol
  [RM_CROSS]         =  {Weapons.cross, 0},             -- Remove Crossbow
  [UP_GEAR]          =  {Equipment, Item.ammo,          -- Get Equipment
                         Item.mpotion, Item.hpotion},   -- Get Equipment
  [RM_GEAR]          =  {Equipment, 0},                 -- Remove Equipment
}

local function readPtr (addr,...)
  addr = readQword(addr)
  if addr then
    for _,offset in ipairs{...} do
      addr = readQword(addr+offset)
      if not addr then return nil end
    end
  end
  return addr
end

local Items = {Power, PowerUpgrade, Equipment, EquipmentUpgrade, Blueprint, Enhancement}

local function GetAction (str, object, upgrade)
  local action = str and object.items[str] or -1
  if action &gt; -1 then
    return (upgrade == nil or upgrade == 1) and action or 0
  end
  return -1
end

local GetMemoryRecord = (function()
  local al = getAddressList()
  return al.getMemoryRecordByID
end) ()

local function CollectActions ()
  local changes = {}
  local chain, entry, action
  for _,id in ipairs(idorder) do
    if GetMemoryRecord(id).Active then
      chain = ActionMap[id]
      i = 1
      while i &lt;= #chain do
        entry = chain[i]
        if i+1 &lt;= #chain and type(chain[i+1]) == 'number' then
          action = chain[i+1]
          i = i + 2
        else
          action = 1
          i = i + 1
        end
        for _,item in ipairs(entry) do
          changes[item] = action == 1 and 1 or 0
        end
      end
    end
  end
  return changes
end

local function WalkRecords (addr)
  local _RECORDSIZE = 0x38
  local _COUNT   = 0x20
  local _MAX     = 0x24
  local _UPGRADE = 0x28

  local actions = CollectActions()
  local count, max, item, action, itype

  while readQword(addr) ~= 0 do
    item = readString(readPtr(addr, 8), 128)
    itype = readString(readPtr(addr, 10, 8), 128)
    change = actions[item]
    if change then
      if change == 0 then
        writeInteger(addr+_UPGRADE, 0)
        writeInteger(addr+_COUNT, 0)
      else
        if itype == "equipmentUpgrade" then
          writeInteger(addr+_UPGRADE, 1)
        end
        count = readInteger(addr+_COUNT)
        max = readInteger(addr+_MAX)
        count = math.max( math.min(max, 200), count)
        writeInteger(addr+_COUNT, count)
      end
    end
    addr = addr + _RECORDSIZE
  end
end

local function DeactivateAll ()
  local function Deactivate (mr, deactivateMe)
    for i = 0, mr.Count-1 do
      Deactivate(mr.Child[i], true)
    end
    if deactivateMe then mr.Active = false end
  end
  Deactivate(GetMemoryRecord(ID_PARENT), false)
end

local function ChangeRecords ()
  local wt = createTimer()
  wt.OnTimer = function(timer)
    if memrec.Active then
      local addr = getAddressSafe"[[[[[[Dishonored2.exe+3BEF360]]+8]+60]+8]+8]"
      if not addr then return end

      local id = readString(addr, 128)
      if not id or id:len() ~= 58 then return end

      id = id:sub(30, 34)
      if id ~= 'emily' and id ~= 'corvo' then return end

      addr = getAddressSafe"[[[[[Dishonored2.exe+3BEF360]]+8]+60]+38]"
      if addr == nil then return end

      timer.destroy()
      WalkRecords(addr)
      DeactivateAll()
    else
      timer.destroy()
    end
  end
  wt.Interval = 1000
end


if syntaxcheck then return end
ChangeRecords()

{$asm}


[DISABLE]


</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>567968</ID>
      <Description>"Full auto-replenishment of Mana"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$STRICT}

define(address,"Dishonored2.exe"+888356)
define(bytes,F3 0F 10 44 D0 24)

[ENABLE]

assert(address,bytes)
alloc(newmem,$100,"Dishonored2.exe"+888356)

label(code)
label(return)
label(manaAmount)

newmem:
manaAmount:
  dd (float)120

code:
  movss xmm0,[manaAmount]
  jmp   return

address:
  jmp code
  nop
return:

[DISABLE]

address:
  db bytes
  // movss xmm0,[rax+rdx*8+24]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+888356

"Dishonored2.exe"+888331: 0F 85 EA 00 00 00        -  jne Dishonored2.exe+888421
"Dishonored2.exe"+888337: 4C 8B 43 48              -  mov r8,[rbx+48]
"Dishonored2.exe"+88833B: 0F 29 7C 24 20           -  movaps [rsp+20],xmm7
"Dishonored2.exe"+888340: 4D 85 C0                 -  test r8,r8
"Dishonored2.exe"+888343: 74 48                    -  je Dishonored2.exe+88838D
"Dishonored2.exe"+888345: 48 63 43 6C              -  movsxd  rax,dword ptr [rbx+6C]
"Dishonored2.exe"+888349: 83 F8 FF                 -  cmp eax,-01
"Dishonored2.exe"+88834C: 7E 10                    -  jle Dishonored2.exe+88835E
"Dishonored2.exe"+88834E: 48 8D 14 80              -  lea rdx,[rax+rax*4]
"Dishonored2.exe"+888352: 49 8B 40 48              -  mov rax,[r8+48]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+888356: F3 0F 10 44 D0 24        -  movss xmm0,[rax+rdx*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+88835C: EB 03                    -  jmp Dishonored2.exe+888361
"Dishonored2.exe"+88835E: 0F 57 C0                 -  xorps xmm0,xmm0
"Dishonored2.exe"+888361: 48 63 43 70              -  movsxd  rax,dword ptr [rbx+70]
"Dishonored2.exe"+888365: F3 0F 58 C6              -  addss xmm0,xmm6
"Dishonored2.exe"+888369: 0F 28 F0                 -  movaps xmm6,xmm0
"Dishonored2.exe"+88836C: 83 F8 FF                 -  cmp eax,-01
"Dishonored2.exe"+88836F: 7E 10                    -  jle Dishonored2.exe+888381
"Dishonored2.exe"+888371: 48 8D 14 80              -  lea rdx,[rax+rax*4]
"Dishonored2.exe"+888375: 49 8B 40 48              -  mov rax,[r8+48]
"Dishonored2.exe"+888379: F3 0F 10 44 D0 24        -  movss xmm0,[rax+rdx*8+24]
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>567998</ID>
          <Description>"Set this when in the Stilton's house"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(address,"Dishonored2.exe"+8886D0)
define(bytes,48 8B 05 91 86 E8 01)

[ENABLE]

assert(address,bytes)
alloc(newmem,$100,address)

label(code)
label(return)

newmem:

code:
  mov  rax,[Dishonored2.exe+2710D68]

  // mana states bits:
  // 0: mana usage's locked (allows use powers even if your mana's empty)
  // 1: mana regen's locked
  // 2: mana regen's paused
  // 3: potion's used
  // 4: in potion's regen state

  test [rcx+30],2   // if mana regeneration's locked
  jnz  short @F
  jmp  return

@@:
  and byte ptr [rcx+30],FD
  mov [rcx+2C],(float)120  // one-time mana injection
  mov [rcx+20],(float)120  // mana regen amount
  jmp return

address:
  jmp code
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // mov rax,[Dishonored2.exe+2710D68]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+8886D0

"Dishonored2.exe"+8886C5: F3 C3                       - repe  ret 
"Dishonored2.exe"+8886C7: CC                          -  int 3 
"Dishonored2.exe"+8886C8: CC                          -  int 3 
"Dishonored2.exe"+8886C9: CC                          -  int 3 
"Dishonored2.exe"+8886CA: CC                          -  int 3 
"Dishonored2.exe"+8886CB: CC                          -  int 3 
"Dishonored2.exe"+8886CC: CC                          -  int 3 
"Dishonored2.exe"+8886CD: CC                          -  int 3 
"Dishonored2.exe"+8886CE: CC                          -  int 3 
"Dishonored2.exe"+8886CF: CC                          -  int 3 
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+8886D0: 48 8B 05 91 86 E8 01        -  mov rax,[Dishonored2.exe+2710D68]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+8886D7: 0F 57 D2                    -  xorps xmm2,xmm2
"Dishonored2.exe"+8886DA: 48 8B 90 A0 7B 1F 00        -  mov rdx,[rax+001F7BA0]
"Dishonored2.exe"+8886E1: 83 BA A4 00 00 00 00        -  cmp dword ptr [rdx+000000A4],00
"Dishonored2.exe"+8886E8: 75 3D                       -  jne Dishonored2.exe+888727
"Dishonored2.exe"+8886EA: 48 8B 41 08                 -  mov rax,[rcx+08]
"Dishonored2.exe"+8886EE: F3 0F 10 50 6C              -  movss xmm2,[rax+6C]
"Dishonored2.exe"+8886F3: 48 63 41 70                 -  movsxd  rax,dword ptr [rcx+70]
"Dishonored2.exe"+8886F7: 83 F8 FF                    -  cmp eax,-01
"Dishonored2.exe"+8886FA: 7E 1F                       -  jle Dishonored2.exe+88871B
"Dishonored2.exe"+8886FC: 4C 8B 41 48                 -  mov r8,[rcx+48]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>571028</ID>
          <Description>"Lesser cooldown"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(address, "Dishonored2.exe"+88882C)
define(bytes, F3 0F 10 40 70)

[ENABLE]

assert(address,bytes)
alloc(newmem, 128, "Dishonored2.exe"+88882C)

label(code)
label(return)

label(mnCooldown)
registerSymbol(mnCooldown)

newmem:

code:
  movss xmm0,[mnCooldown]
  jmp return

mnCooldown:
  dd (float)1.5

address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // movss xmm0,[rax+70]

unregisterSymbol(mnCooldown)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 14088882C

140888819: CC                 - int 3 
14088881A: CC                 - int 3 
14088881B: CC                 - int 3 
14088881C: CC                 - int 3 
14088881D: CC                 - int 3 
14088881E: CC                 - int 3 
14088881F: CC                 - int 3 
140888820: 80 61 30 EF        - and byte ptr [rcx+30],-11
140888824: 48 8B 41 08        - mov rax,[rcx+08]
140888828: 4C 8B 49 48        - mov r9,[rcx+48]
// ---------- INJECTING HERE ----------
14088882C: F3 0F 10 40 70     - movss xmm0,[rax+70]
// ---------- DONE INJECTING  ----------
140888831: F3 0F 11 44 24 08  - movss [rsp+08],xmm0
140888837: 4D 85 C9           - test r9,r9
14088883A: 74 36              - je 140888872
14088883C: 48 63 41 74        - movsxd  rax,dword ptr [rcx+74]
140888840: 83 F8 FF           - cmp eax,-01
140888843: 7E 20              - jle 140888865
140888845: 48 8D 14 80        - lea rdx,[rax+rax*4]
140888849: 49 8B 41 48        - mov rax,[r9+48]
14088884D: F3 0F 10 4C D0 24  - movss xmm1,[rax+rdx*8+24]
140888853: F3 0F 58 C1        - addss xmm0,xmm1
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>571029</ID>
              <Description>"Cooldown"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>mnCooldown</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>568022</ID>
          <Description>"Restoration speed"</Description>
          <Options moHideChildren="1"/>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(address,"Dishonored2.exe"+888753)
define(bytes,F3 42 0F 10 4C C0 24)

[ENABLE]

assert(address,bytes)
alloc(newmem,$100,"Dishonored2.exe"+888753)

label(code)
label(return)
label(mnSpeedMult)
registerSymbol(mnSpeedMult)

newmem:
mnSpeedMult:
  dq (float)1.0

code:
  movss xmm1,[rax+r8*8+24]
  mulss xmm1,[mnSpeedMult]
  jmp return

address:
  jmp code
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // movss xmm1,[rax+r8*8+24]

unregisterSymbol(mnSpeedMult)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+888753

"Dishonored2.exe"+888730: 48 8B 41 08                 -  mov rax,[rcx+08]
"Dishonored2.exe"+888734: 4C 8B 49 48                 -  mov r9,[rcx+48]
"Dishonored2.exe"+888738: F3 0F 10 40 74              -  movss xmm0,[rax+74]
"Dishonored2.exe"+88873D: 4D 85 C9                    -  test r9,r9
"Dishonored2.exe"+888740: 74 21                       -  je Dishonored2.exe+888763
"Dishonored2.exe"+888742: 48 63 41 78                 -  movsxd  rax,dword ptr [rcx+78]
"Dishonored2.exe"+888746: 83 F8 FF                    -  cmp eax,-01
"Dishonored2.exe"+888749: 7E 11                       -  jle Dishonored2.exe+88875C
"Dishonored2.exe"+88874B: 4C 8D 04 80                 -  lea r8,[rax+rax*4]
"Dishonored2.exe"+88874F: 49 8B 41 48                 -  mov rax,[r9+48]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+888753: F3 42 0F 10 4C C0 24        -  movss xmm1,[rax+r8*8+24]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+88875A: EB 03                       -  jmp Dishonored2.exe+88875F
"Dishonored2.exe"+88875C: 0F 57 C9                    -  xorps xmm1,xmm1
"Dishonored2.exe"+88875F: F3 0F 59 C1                 -  mulss xmm0,xmm1
"Dishonored2.exe"+888763: F6 41 30 08                 -  test byte ptr [rcx+30],08
"Dishonored2.exe"+888767: F3 0F 10 0D E5 8E 7E 01     -  movss xmm1,[Dishonored2.exe+2071654]
"Dishonored2.exe"+88876F: 74 30                       -  je Dishonored2.exe+8887A1
"Dishonored2.exe"+888771: 48 8B 05 F0 85 E8 01        -  mov rax,[Dishonored2.exe+2710D68]
"Dishonored2.exe"+888778: 80 B8 90 7B 1F 00 00        -  cmp byte ptr [rax+001F7B90],00
"Dishonored2.exe"+88877F: 74 20                       -  je Dishonored2.exe+8887A1
"Dishonored2.exe"+888781: 48 8B 90 98 7B 1F 00        -  mov rdx,[rax+001F7B98]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>571025</ID>
              <Description>"Multiplier"</Description>
              <ShowAsSigned>0</ShowAsSigned>
              <VariableType>Float</VariableType>
              <Address>mnSpeedMult</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>567800</ID>
      <Description>"Chaos"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>000000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>568007</ID>
          <Description>"Detect current chaos (wait for a message)"</Description>
          <LastState/>
          <Color>000000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(address,"Dishonored2.exe"+A3878C)
define(bytes,48 89 4D 88 45 33 F6)
define(pArkCpntPlayerChaos, Dishonored2.exe+3C2DA90)
define(dyncast, Dishonored2.exe+9FAAC0)

[ENABLE]

{$lua}

-----------------------------------

local function SeekBounds()
  local nsig = getAddress"Dishonored2.exe" + 0x1E96948  -- vfptr to arkGameflowNodeMission vtable
  local bt = {}
  for i=1,8 do bt[i],nsig = nsig%0x100,nsig//0x100 end
  local ssig = string.format("%.2X %.2X %.2X %.2X %.2X %.2X %.2X %.2X", unpack(bt))..
                  " * * * * 02 00 00 00 "..string.rep("* ", 38).."00 00 * * 00 00"
  local alist = AOBScan(ssig, "+W-X-C", 2, "0")
  local sa
  if alist and alist.Count == 1 then
    sa = getAddress(alist[0])
  end
  if sa then
    return readInteger(sa+0x34),readInteger(sa+0x38)
  end
  return nil
end

-----------------------------------

local function ChaosInput(chaosPtr, high, vhigh)
  if not chaosPtr or not high then
    local errmsg = "Chaos score and/or ranges not found\n\n"
                 .."Make sure you are in control of your character (can move, turn, etc)\n\n"
                 .."If you see opening cutscenes, wait till all they end and try to activate this script again.\n\n"
                 .."If you see end mission statistics screen, it's too late.\nLoad an earlier save and try again.\n\n"
                 .."If, nevertheless, script doesn't work, probably, you are unlucky to run into a bug."
    showMessage(errmsg)
  else
    local chs = readInteger(chaosPtr+0x24) &amp; 0xFFFFFFFF
    local nb = {'', '', ''}
    local level = chs &lt; high and 1  or  chs &lt; vhigh and 2  or  3
    nb[level] = string.format("\t  &lt;-- you are here now (%u)", chs)
    local msg = "The game will use these ranges\nfor evaluation chaos level at the end of the current mission:\n\n"
              .."Low chaos:\t\t0 to %i" .. nb[1] .. "\n"
              .."High chaos:\t\t%i to %i" .. nb[2] .. "\n"
              .."Very high chaos:\tif chaos score ≥ %i" .. nb[3] .. "\n\n"
              .."You can set desired chaos level\nat any time of gameplay after opening cutscenes\nand before end mission statistics screen.\n\n"
              .."Current chaos score:"
    msg = msg:format(high-1, high, vhigh-1, vhigh)
    while true do
      local chaos = tostring(chs)
      chaos = inputQuery("Chaos", msg, chaos)
      if not chaos then break end
      if not chaos:match"^%s*[0-9]+%s*$" then
        local msg = string.format('ERROR.\nChaos score must be an unsigned integer number, not "%s"', chaos)
        showMessage(msg)
      else
        chs_ = tonumber(chaos)
        if chs_ ~= chs then
          writeInteger(chaosPtr+0x24, chs_)
          local chsType = chs_ &lt; high and "Low"  or  chs_ &lt; vhigh and "High"  or  "Very high"
          local msg = string.format("Chaos score was changed to %u (%s chaos level)", chs_, chsType)
          showMessage(msg)
        end
        break
      end
    end
  end
end

-----------------------------------

local function ScanAfterAAScript()
  local st = getTickCount()
  local timer = createTimer()
  timer.OnTimer = function(timer)
    if memrec.Active then
      if getTickCount() - st &gt; 10000 then
        timer.destroy()
        memrec.Active = false
        ChaosInput()
        return
      end
      if getAddressSafe"chaosScriptFiredSM" == nil or readQword"chaosScriptFiredSM" ~= 1 then return end
      if getAddressSafe"chaosPtrSM" == nil then return end
      local chaosPtr = readQword"chaosPtrSM"
      if chaosPtr == 0 then return end
      timer.Enabled = false
      memrec.Active = false
      local high,vhigh = SeekBounds()
      ChaosInput(chaosPtr, high, vhigh)
    end
    timer.destroy()
  end
  timer.Interval = 500
end

-----------------------------------

if not syntaxcheck then ScanAfterAAScript() end

{$asm}

assert(address, bytes)
alloc(newmem, $100, address)

label(code)
label(skip)
label(cleanup)
label(return)

label(chaosScriptFiredSM)
registerSymbol(chaosScriptFiredSM)

label(chaosPtrSM)
registerSymbol(chaosPtrSM)

newmem:
chaosScriptFiredSM:
  dq 0
chaosPtrSM:
  dq 0

code:
  mov  r14,[chaosScriptFiredSM]
  test r14,r14
  jnz  skip

  push rax
  push rbx
  push rcx
  push rdx
  push r8
  push r9
  push r10
  push r11
  sub  rsp,20
  mov  rcx,[rcx+312FF8]
  mov  rdx,pArkCpntPlayerChaos
  xor  r8d,r8d
  call dyncast
  test rax,rax
  jz   cleanup
  mov  rcx, 1
  mov  [chaosScriptFiredSM],rcx
  mov  [chaosPtrSM],rax
cleanup:
  add  rsp,20
  pop  r11
  pop  r10
  pop  r9
  pop  r8
  pop  rdx
  pop  rcx
  pop  rbx
  pop  rax

skip:
  mov [rbp-78],rcx
  xor r14d,r14d
  jmp return

address:
  jmp code
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // mov [rbp-78],rcx
  // xor r14d,r14d

unregisterSymbol(chaosPtrSM)
unregisterSymbol(chaosScriptFiredSM)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+A3878C

"Dishonored2.exe"+A38759: B8 48 19 00 00              -  mov eax,00001948
"Dishonored2.exe"+A3875E: E8 2D 87 94 00              -  call Dishonored2.exe+1380E90
"Dishonored2.exe"+A38763: 48 2B E0                    -  sub rsp,rax
"Dishonored2.exe"+A38766: 48 C7 45 80 FE FF FF FF     -  mov qword ptr [rbp-80],FFFFFFFE
"Dishonored2.exe"+A3876E: 4D 8B E0                    -  mov r12,r8
"Dishonored2.exe"+A38771: 48 8B FA                    -  mov rdi,rdx
"Dishonored2.exe"+A38774: 48 8B F1                    -  mov rsi,rcx
"Dishonored2.exe"+A38777: 48 8B 1D EA 85 CD 01        -  mov rbx,[Dishonored2.exe+2710D68]
"Dishonored2.exe"+A3877E: 48 89 9D A8 18 00 00        -  mov [rbp+000018A8],rbx
"Dishonored2.exe"+A38785: 48 89 0D DC 85 CD 01        -  mov [Dishonored2.exe+2710D68],rcx
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+A3878C: 48 89 4D 88                 -  mov [rbp-78],rcx
"Dishonored2.exe"+A38790: 45 33 F6                    -  xor r14d,r14d
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+A38793: 4D 85 C0                    -  test r8,r8
"Dishonored2.exe"+A38796: 75 7E                       -  jne Dishonored2.exe+A38816
"Dishonored2.exe"+A38798: 48 8D 4D 90                 -  lea rcx,[rbp-70]
"Dishonored2.exe"+A3879C: E8 9F CF 62 FF              -  call Dishonored2.exe+65740
"Dishonored2.exe"+A387A1: 90                          -  nop
"Dishonored2.exe"+A387A2: 48 8D BE 58 0E 34 00        -  lea rdi,[rsi+00340E58]
"Dishonored2.exe"+A387A9: 48 8B D0                    -  mov rdx,rax
"Dishonored2.exe"+A387AC: 48 8B CF                    -  mov rcx,rdi
"Dishonored2.exe"+A387AF: E8 4C 5B FF FF              -  call Dishonored2.exe+A2E300
"Dishonored2.exe"+A387B4: 90                          -  nop
}

</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>567965</ID>
      <Description>"Stealth"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>000000</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>568017</ID>
          <Description>"Vision"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>000000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>567966</ID>
              <Description>"Hide (Ctrl-Shift-I)"</Description>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$STRICT}

define(navigation,"Dishonored2.exe"+9E6F75)  // address within one of virt. functions of arkPlayerStateNavigation class
define(bytes,A9 FF FF FF 7F)

define(proximity_test,"Dishonored2.exe"+4E96D7)
define(proximity_bytes,0F B6 5F 78 F3 0F 10 47 74)

[ENABLE]

assert(navigation, bytes)
assert(proximity_test,proximity_bytes)

alloc(newmem,$100, navigation)

label(hook)
label(return)

newmem:

hook:
  push rcx
  mov  rcx,[rsi+358] // player's arkCpntObservable instance
  mov  rcx,[rcx+8]
  mov  dword ptr [rcx+6C],7      // m_obsVis var of arkObservableVisibility_t type, i guess
                                 //  0: OBS_VIS_ORIGIN
                                 //  1: OBS_VIS_BOUNDS_CENTER
                                 //  2: OBS_VIS_PLAYER     &lt;-- this value was here
                                 //  3: OBS_VIS_NPC
                                 //  4: OBS_VIS_SWARM
                                 //  5: OBS_VIS_POINTS_LIST
                                 //  6: OBS_VIS_MESMERIZE
  mov  dword ptr [rcx+70],0  // m_visibleDistance
  pop  rcx
  test eax,7FFFFFFF
  jmp  return

navigation:
  jmp  hook
return:

proximity_test:
  mov  bx,1  // bloodbriars will ignore player's proximity

[DISABLE]

navigation:
  db bytes
  // test eax,7FFFFFFF

proximity_test:
  db proximity_bytes
  // movzx ebx,byte ptr [rdi+78]
  // movss xmm0,[rdi+74]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9E6F75

"Dishonored2.exe"+9E6F4C: F3 0F 59 C2              -  mulss xmm0,xmm2
"Dishonored2.exe"+9E6F50: F3 0F 59 CA              -  mulss xmm1,xmm2
"Dishonored2.exe"+9E6F54: F3 0F 11 45 97           -  movss [rbp-69],xmm0
"Dishonored2.exe"+9E6F59: F3 0F 10 45 9F           -  movss xmm0,[rbp-61]
"Dishonored2.exe"+9E6F5E: 8B 45 97                 -  mov eax,[rbp-69]
"Dishonored2.exe"+9E6F61: F3 0F 59 C2              -  mulss xmm0,xmm2
"Dishonored2.exe"+9E6F65: F3 0F 11 4D 9B           -  movss [rbp-65],xmm1
"Dishonored2.exe"+9E6F6A: F3 0F 11 45 9F           -  movss [rbp-61],xmm0
"Dishonored2.exe"+9E6F6F: 0B 45 9B                 -  or eax,[rbp-65]
"Dishonored2.exe"+9E6F72: 0B 45 9F                 -  or eax,[rbp-61]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9E6F75: A9 FF FF FF 7F           -  test eax,7FFFFFFF
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9E6F7A: 41 0F 95 C5              -  setne r13l
"Dishonored2.exe"+9E6F7E: 44 38 6B 48              -  cmp [rbx+48],r13l
"Dishonored2.exe"+9E6F82: 74 72                    -  je Dishonored2.exe+9E6FF6
"Dishonored2.exe"+9E6F84: 48 63 43 5C              -  movsxd  rax,dword ptr [rbx+5C]
"Dishonored2.exe"+9E6F88: 83 F8 FF                 -  cmp eax,-01
"Dishonored2.exe"+9E6F8B: 7E 13                    -  jle Dishonored2.exe+9E6FA0
"Dishonored2.exe"+9E6F8D: 48 8D 14 80              -  lea rdx,[rax+rax*4]
"Dishonored2.exe"+9E6F91: 49 8B 46 48              -  mov rax,[r14+48]
"Dishonored2.exe"+9E6F95: F3 0F 10 44 D0 24        -  movss xmm0,[rax+rdx*8+24]
"Dishonored2.exe"+9E6F9B: 0F 2F C7                 -  comiss xmm0,xmm7
}

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+4E96D7

"Dishonored2.exe"+4E96A7: 48 8D 44 24 20        -  lea rax,[rsp+20]
"Dishonored2.exe"+4E96AC: EB 0D                 -  jmp Dishonored2.exe+4E96BB
"Dishonored2.exe"+4E96AE: 48 8D 54 24 20        -  lea rdx,[rsp+20]
"Dishonored2.exe"+4E96B3: 49 8B CF              -  mov rcx,r15
"Dishonored2.exe"+4E96B6: E8 B5 2A 51 00        -  call Dishonored2.exe+9FC170
"Dishonored2.exe"+4E96BB: F3 0F 10 7F 6C        -  movss xmm7,[rdi+6C]
"Dishonored2.exe"+4E96C0: F3 44 0F 10 47 70     -  movss xmm8,[rdi+70]
"Dishonored2.exe"+4E96C6: F3 44 0F 10 18        -  movss xmm11,[rax]
"Dishonored2.exe"+4E96CB: F3 44 0F 10 60 04     -  movss xmm12,[rax+04]
"Dishonored2.exe"+4E96D1: F3 44 0F 10 50 08     -  movss xmm10,[rax+08]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+4E96D7: 0F B6 5F 78           -  movzx ebx,byte ptr [rdi+78]
"Dishonored2.exe"+4E96DB: F3 0F 10 47 74        -  movss xmm0,[rdi+74]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+4E96E0: 8B 8F 80 00 00 00     -  mov ecx,[rdi+00000080]
"Dishonored2.exe"+4E96E6: 8B 47 7C              -  mov eax,[rdi+7C]
"Dishonored2.exe"+4E96E9: 89 44 24 20           -  mov [rsp+20],eax
"Dishonored2.exe"+4E96ED: 89 4C 24 24           -  mov [rsp+24],ecx
"Dishonored2.exe"+4E96F1: F3 0F 11 7C 24 28     -  movss [rsp+28],xmm7
"Dishonored2.exe"+4E96F7: F3 0F 11 44 24 2C     -  movss [rsp+2C],xmm0
"Dishonored2.exe"+4E96FD: 4C 8D 4C 24 30        -  lea r9,[rsp+30]
"Dishonored2.exe"+4E9702: 4C 8D 44 24 20        -  lea r8,[rsp+20]
"Dishonored2.exe"+4E9707: 48 8D 56 20           -  lea rdx,[rsi+20]
"Dishonored2.exe"+4E970B: 49 8B CF              -  mov rcx,r15
}
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>16</Key>
                    <Key>17</Key>
                    <Key>73</Key>
                  </Keys>
                  <ID>0</ID>
                  <ActivateSound TTS="EN">Invisibility's on</ActivateSound>
                </Hotkey>
                <Hotkey>
                  <Action>Deactivate</Action>
                  <Keys>
                    <Key>16</Key>
                    <Key>17</Key>
                    <Key>86</Key>
                  </Keys>
                  <ID>1</ID>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
            <CheatEntry>
              <ID>567967</ID>
              <Description>"Uncover (Ctrl-Shift-V)"</Description>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$STRICT}

define(address,"Dishonored2.exe"+9E6F75)
define(bytes,A9 FF FF FF 7F)

[ENABLE]

{$lua}
local function Deactivate()
  local _ = createTimer()
  _.OnTimer = function(timer)
    if readQword"visScriptFiredSM" == 1 then
      timer.destroy()
      writeQword("visScriptFiredSM",0)
      memrec.Active = false
      return
    end
  end
  _.Interval = 100
end

if not syntaxcheck then Deactivate() end
{$asm}

assert(address, bytes)
alloc(newmem,$100, address)

label(hook)
label(return)

label(visScriptFiredSM)
registerSymbol(visScriptFiredSM)

newmem:
visScriptFiredSM:
  dq 0

hook:
  push rcx
  cmp  [visScriptFiredSM],1
  je   short @F
  mov  rcx,[rsi+358] // player's arkCpntObservable instance
  mov  rcx,[rcx+8]
  mov  dword ptr [rcx+6C],2  //  2: OBS_VIS_PLAYER, see covering script
  mov  dword ptr [rcx+70],(float)-1
  mov  [visScriptFiredSM],1
@@:
  pop  rcx
  test eax,7FFFFFFF
  jmp  return

address:
  jmp hook
return:

[DISABLE]

address:
  db bytes
  // test eax,7FFFFFFF

unregisterSymbol(visScriptFiredSM)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9E6F75

"Dishonored2.exe"+9E6F4C: F3 0F 59 C2              -  mulss xmm0,xmm2
"Dishonored2.exe"+9E6F50: F3 0F 59 CA              -  mulss xmm1,xmm2
"Dishonored2.exe"+9E6F54: F3 0F 11 45 97           -  movss [rbp-69],xmm0
"Dishonored2.exe"+9E6F59: F3 0F 10 45 9F           -  movss xmm0,[rbp-61]
"Dishonored2.exe"+9E6F5E: 8B 45 97                 -  mov eax,[rbp-69]
"Dishonored2.exe"+9E6F61: F3 0F 59 C2              -  mulss xmm0,xmm2
"Dishonored2.exe"+9E6F65: F3 0F 11 4D 9B           -  movss [rbp-65],xmm1
"Dishonored2.exe"+9E6F6A: F3 0F 11 45 9F           -  movss [rbp-61],xmm0
"Dishonored2.exe"+9E6F6F: 0B 45 9B                 -  or eax,[rbp-65]
"Dishonored2.exe"+9E6F72: 0B 45 9F                 -  or eax,[rbp-61]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9E6F75: A9 FF FF FF 7F           -  test eax,7FFFFFFF
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9E6F7A: 41 0F 95 C5              -  setne r13l
"Dishonored2.exe"+9E6F7E: 44 38 6B 48              -  cmp [rbx+48],r13l
"Dishonored2.exe"+9E6F82: 74 72                    -  je Dishonored2.exe+9E6FF6
"Dishonored2.exe"+9E6F84: 48 63 43 5C              -  movsxd  rax,dword ptr [rbx+5C]
"Dishonored2.exe"+9E6F88: 83 F8 FF                 -  cmp eax,-01
"Dishonored2.exe"+9E6F8B: 7E 13                    -  jle Dishonored2.exe+9E6FA0
"Dishonored2.exe"+9E6F8D: 48 8D 14 80              -  lea rdx,[rax+rax*4]
"Dishonored2.exe"+9E6F91: 49 8B 46 48              -  mov rax,[r14+48]
"Dishonored2.exe"+9E6F95: F3 0F 10 44 D0 24        -  movss xmm0,[rax+rdx*8+24]
"Dishonored2.exe"+9E6F9B: 0F 2F C7                 -  comiss xmm0,xmm7
}
</AssemblerScript>
              <Hotkeys>
                <Hotkey>
                  <Action>Activate</Action>
                  <Keys>
                    <Key>16</Key>
                    <Key>17</Key>
                    <Key>86</Key>
                  </Keys>
                  <ID>0</ID>
                  <ActivateSound TTS="EN">Invisibility's off</ActivateSound>
                </Hotkey>
              </Hotkeys>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>568032</ID>
          <Description>"Sound"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>000000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>568031</ID>
              <Description>""Silent" navigation"</Description>
              <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$STRICT}

define(address,"Dishonored2.exe"+700194)
define(bytes,4C 63 7F 08 8B 4E 78)

[ENABLE]

assert(address,bytes)
alloc(newmem,$100,address)

label(code)
label(return)
label(playerTag)

newmem:
playerTag:
  db 'player1',0

code:
  movsxd r15,dword ptr [rdi+08]
  mov  ecx,[rsi+78]

  push r12
  mov  r12,[r12+30]
  cmp  r12,[playerTag]
  pop  r12
  jne  short @F
  or   ecx,1c000   // = 1&lt;&lt;14 | 1&lt;&lt;15 | 1 &lt;&lt;16
                    //      E: ARK_AI_SND_FOOTSTEP_FALL,
@@:                 //      F: ARK_AI_SND_FOOTSTEP_RUN,
  jmp  return       //   0x10: ARK_AI_SND_FOOTSTEP_SPRINT

address:
  jmp code
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // movsxd  r15,dword ptr [rdi+08]
  // mov ecx,[rsi+78]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+700194

"Dishonored2.exe"+70016A: 48 8B F1                 -  mov rsi,rcx
"Dishonored2.exe"+70016D: BB 02 00 00 00           -  mov ebx,00000002
"Dishonored2.exe"+700172: 44 8B C3                 -  mov r8d,ebx
"Dishonored2.exe"+700175: 48 8D 15 A4 7F 52 03     -  lea rdx,[Dishonored2.exe+3C28120]
"Dishonored2.exe"+70017C: 49 8B CC                 -  mov rcx,r12
"Dishonored2.exe"+70017F: E8 3C A9 2F 00           -  call Dishonored2.exe+9FAAC0
"Dishonored2.exe"+700184: 4C 8B E8                 -  mov r13,rax
"Dishonored2.exe"+700187: 48 89 45 48              -  mov [rbp+48],rax
"Dishonored2.exe"+70018B: 48 85 C0                 -  test rax,rax
"Dishonored2.exe"+70018E: 0F 84 BC 08 00 00        -  je Dishonored2.exe+700A50
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+700194: 4C 63 7F 08              -  movsxd  r15,dword ptr [rdi+08]
"Dishonored2.exe"+700198: 8B 4E 78                 -  mov ecx,[rsi+78]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+70019B: 44 0F A3 F9              -  bt ecx,r15d
"Dishonored2.exe"+70019F: 0F 82 AB 08 00 00        -  jb Dishonored2.exe+700A50
"Dishonored2.exe"+7001A5: 45 85 FF                 -  test r15d,r15d
"Dishonored2.exe"+7001A8: 75 1E                    -  jne Dishonored2.exe+7001C8
"Dishonored2.exe"+7001AA: 48 8B 56 10              -  mov rdx,[rsi+10]
"Dishonored2.exe"+7001AE: 4D 8B 44 24 20           -  mov r8,[r12+20]
"Dishonored2.exe"+7001B3: 48 8B 52 20              -  mov rdx,[rdx+20]
"Dishonored2.exe"+7001B7: 48 8D 0D 42 61 7B 01     -  lea rcx,[Dishonored2.exe+1EB6300]
"Dishonored2.exe"+7001BE: E8 AD 7C 95 FF           -  call Dishonored2.exe+57E70
"Dishonored2.exe"+7001C3: E9 88 08 00 00           -  jmp Dishonored2.exe+700A50
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>568015</ID>
                  <Description>"No footsteps"</Description>
                  <LastState/>
                  <Color>000000</Color>
                  <VariableType>Auto Assembler Script</VariableType>
                  <AssemblerScript>define(address,"Dishonored2.exe"+8BB868)
define(bytes,80 B9 85 0C 00 00 00)

[ENABLE]

assert(address,bytes)

address:
//cmp byte ptr [rcx+00000C85],00  &lt;- original code
  test eax,0  // footsteps are disabled
  nop
  nop

[DISABLE]

address:
  db bytes
  // cmp byte ptr [rcx+00000C85],00

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+8BB868

"Dishonored2.exe"+8BB859: CC                             -  int 3 
"Dishonored2.exe"+8BB85A: CC                             -  int 3 
"Dishonored2.exe"+8BB85B: CC                             -  int 3 
"Dishonored2.exe"+8BB85C: CC                             -  int 3 
"Dishonored2.exe"+8BB85D: CC                             -  int 3 
"Dishonored2.exe"+8BB85E: CC                             -  int 3 
"Dishonored2.exe"+8BB85F: CC                             -  int 3 
"Dishonored2.exe"+8BB860: 40 57                          -  push rdi
"Dishonored2.exe"+8BB862: 41 56                          -  push r14
"Dishonored2.exe"+8BB864: 48 83 EC 48                    -  sub rsp,48
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+8BB868: 80 B9 85 0C 00 00 00           -  cmp byte ptr [rcx+00000C85],00
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+8BB86F: 48 89 6C 24 70                 -  mov [rsp+70],rbp
"Dishonored2.exe"+8BB874: 0F 29 7C 24 20                 -  movaps [rsp+20],xmm7
"Dishonored2.exe"+8BB879: 0F 57 FF                       -  xorps xmm7,xmm7
"Dishonored2.exe"+8BB87C: 48 8B F9                       -  mov rdi,rcx
"Dishonored2.exe"+8BB87F: 4C 8D 35 92 0F CE 01           -  lea r14,[Dishonored2.exe+259C818]
"Dishonored2.exe"+8BB886: 0F 84 55 01 00 00              -  je Dishonored2.exe+8BB9E1
"Dishonored2.exe"+8BB88C: 0F 29 74 24 30                 -  movaps [rsp+30],xmm6
"Dishonored2.exe"+8BB891: F3 0F 10 B1 78 0C 00 00        -  movss xmm6,[rcx+00000C78]
"Dishonored2.exe"+8BB899: 0F 2F F7                       -  comiss xmm6,xmm7
"Dishonored2.exe"+8BB89C: 0F 86 3A 01 00 00              -  jbe Dishonored2.exe+8BB9DC
}
</AssemblerScript>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>568033</ID>
          <Description>"Touch"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>000000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>568024</ID>
              <Description>"Thick-skinned enemies"</Description>
              <Options moDeactivateChildrenAsWell="1"/>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$STRICT}

define(passive_address,"Dishonored2.exe"+701994)
define(passive_bytes,0F 8C 10 02 00 00)

define(active_address,"Dishonored2.exe"+701E5B)
define(active_bytes,48 8B D8 48 85 C0)
define(active_return2,Dishonored2.exe+70246B)  // see active_code listing below

[ENABLE]

assert(passive_address,passive_bytes)
assert(active_address,active_bytes)
alloc(newmem,$100,active_address)

passive_address:
  db 90 E9  // nop; jmp *

//------------------------------------------

label(active_code)
label(active_return)
label(playerTag)
label(playerSword)
label(ignore_danger)

newmem:
playerTag:
  db 'player1',0
playerSword:
  db 'ply_swor'

active_code:
  test rax,rax
  jz   short @F

  mov  rbx,[rax+10]
  mov  rbx,[rbx+30]
  cmp  rbx,[playerTag]
  je   short ignore_danger

  cmp  rbx,[playerSword]
  je   short ignore_danger

@@:
  mov  rbx,rax
  test rax,rax
  jmp  active_return

ignore_danger:
  xor rax,rax
  jmp active_return2

active_address:
  jmp active_code
  nop
active_return:

[DISABLE]

passive_address:
  db passive_bytes
  // jl Dishonored2.exe+701BAA


active_address:
  db active_bytes
  // mov rbx,rax
  // test rax,rax

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+701994

"Dishonored2.exe"+701964: 41 56                             -  push r14
"Dishonored2.exe"+701966: 41 57                             -  push r15
"Dishonored2.exe"+701968: 48 8D A8 58 FF FF FF              -  lea rbp,[rax-000000A8]
"Dishonored2.exe"+70196F: 48 81 EC 90 01 00 00              -  sub rsp,00000190
"Dishonored2.exe"+701976: 48 C7 85 80 00 00 00 FE FF FF FF  -  mov qword ptr [rbp+00000080],FFFFFFFE
"Dishonored2.exe"+701981: 48 89 58 08                       -  mov [rax+08],rbx
"Dishonored2.exe"+701985: 48 89 70 10                       -  mov [rax+10],rsi
"Dishonored2.exe"+701989: 48 89 78 18                       -  mov [rax+18],rdi
"Dishonored2.exe"+70198D: 48 8B D9                          -  mov rbx,rcx
"Dishonored2.exe"+701990: 83 79 30 00                       -  cmp dword ptr [rcx+30],00
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+701994: 0F 8C 10 02 00 00                 -  jl Dishonored2.exe+701BAA
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+70199A: 4C 8B 72 08                       -  mov r14,[rdx+08]
"Dishonored2.exe"+70199E: 4D 8B 3E                          -  mov r15,[r14]
"Dishonored2.exe"+7019A1: 48 8B 79 10                       -  mov rdi,[rcx+10]
"Dishonored2.exe"+7019A5: 41 B8 02 00 00 00                 -  mov r8d,00000002
"Dishonored2.exe"+7019AB: 48 8D 15 6E 4F 50 03              -  lea rdx,[Dishonored2.exe+3C06920]
"Dishonored2.exe"+7019B2: 49 8B CF                          -  mov rcx,r15
"Dishonored2.exe"+7019B5: E8 06 91 2F 00                    -  call Dishonored2.exe+9FAAC0
"Dishonored2.exe"+7019BA: 48 8B 88 90 00 00 00              -  mov rcx,[rax+00000090]
"Dishonored2.exe"+7019C1: 48 85 C9                          -  test rcx,rcx
"Dishonored2.exe"+7019C4: 74 29                             -  je Dishonored2.exe+7019EF
}

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+701E5B

"Dishonored2.exe"+701E2A: 48 8B 87 60 03 00 00     -  mov rax,[rdi+00000360]
"Dishonored2.exe"+701E31: 48 85 C0                 -  test rax,rax
"Dishonored2.exe"+701E34: 0F 84 31 06 00 00        -  je Dishonored2.exe+70246B     &lt;-------- active_return2 address
"Dishonored2.exe"+701E3A: 48 8B 40 18              -  mov rax,[rax+18]
"Dishonored2.exe"+701E3E: 48 8B 78 10              -  mov rdi,[rax+10]
"Dishonored2.exe"+701E42: 4C 8B 6B 10              -  mov r13,[rbx+10]
"Dishonored2.exe"+701E46: 41 B8 02 00 00 00        -  mov r8d,00000002
"Dishonored2.exe"+701E4C: 48 8D 15 CD 62 52 03     -  lea rdx,[Dishonored2.exe+3C28120]
"Dishonored2.exe"+701E53: 48 8B CF                 -  mov rcx,rdi
"Dishonored2.exe"+701E56: E8 65 8C 2F 00           -  call Dishonored2.exe+9FAAC0
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+701E5B: 48 8B D8                 -  mov rbx,rax
"Dishonored2.exe"+701E5E: 48 85 C0                 -  test rax,rax
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+701E61: 4C 8B E6                 -  mov r12,rsi
"Dishonored2.exe"+701E64: 74 04                    -  je Dishonored2.exe+701E6A
"Dishonored2.exe"+701E66: 4C 8B 60 08              -  mov r12,[rax+08]
"Dishonored2.exe"+701E6A: 4C 89 64 24 20           -  mov [rsp+20],r12
"Dishonored2.exe"+701E6F: B8 01 00 00 00           -  mov eax,00000001
"Dishonored2.exe"+701E74: 89 85 48 01 00 00        -  mov [rbp+00000148],eax
"Dishonored2.exe"+701E7A: 44 8B C0                 -  mov r8d,eax
"Dishonored2.exe"+701E7D: 48 8D 15 1C EC E4 01     -  lea rdx,[Dishonored2.exe+2550AA0]
"Dishonored2.exe"+701E84: 48 8B CF                 -  mov rcx,rdi
"Dishonored2.exe"+701E87: E8 34 8C 2F 00           -  call Dishonored2.exe+9FAAC0
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>568034</ID>
          <Description>"Hounds"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <Color>000000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>568018</ID>
              <Description>"Hounds can't smell you"</Description>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>define(address,"Dishonored2.exe"+4EAECF)
define(bytes,84 C0 0F 84 26 02 00 00)

[ENABLE]

assert(address,bytes)

address:
  xor al,al

[DISABLE]

address:
  db bytes
  // test al,al
  // je Dishonored2.exe+4EB0FD

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+4EAECF

"Dishonored2.exe"+4EAE9E: 90                             -  nop 
"Dishonored2.exe"+4EAE9F: 48 8B BD 08 01 00 00           -  mov rdi,[rbp+00000108]
"Dishonored2.exe"+4EAEA6: 48 85 FF                       -  test rdi,rdi
"Dishonored2.exe"+4EAEA9: 0F 84 A1 02 00 00              -  je Dishonored2.exe+4EB150
"Dishonored2.exe"+4EAEAF: 48 8B 9D C8 01 00 00           -  mov rbx,[rbp+000001C8]
"Dishonored2.exe"+4EAEB6: 66 66 0F 1F 84 00 00 00 00 00  -  nop [rax+rax+00000000]
"Dishonored2.exe"+4EAEC0: 48 8B 77 10                    -  mov rsi,[rdi+10]
"Dishonored2.exe"+4EAEC4: 49 8B D4                       -  mov rdx,r12
"Dishonored2.exe"+4EAEC7: 48 8B CF                       -  mov rcx,rdi
"Dishonored2.exe"+4EAECA: E8 31 46 0B 00                 -  call Dishonored2.exe+59F500
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+4EAECF: 84 C0                          -  test al,al
"Dishonored2.exe"+4EAED1: 0F 84 26 02 00 00              -  je Dishonored2.exe+4EB0FD
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+4EAED7: 48 8B 4F 08                    -  mov rcx,[rdi+08]
"Dishonored2.exe"+4EAEDB: 41 80 7F 30 00                 -  cmp byte ptr [r15+30],00
"Dishonored2.exe"+4EAEE0: 75 1A                          -  jne Dishonored2.exe+4EAEFC
"Dishonored2.exe"+4EAEE2: 41 80 BE E0 0F 00 00 00        -  cmp byte ptr [r14+00000FE0],00
"Dishonored2.exe"+4EAEEA: 74 0A                          -  je Dishonored2.exe+4EAEF6
"Dishonored2.exe"+4EAEEC: 41 80 BE 28 09 00 00 00        -  cmp byte ptr [r14+00000928],00
"Dishonored2.exe"+4EAEF4: 75 06                          -  jne Dishonored2.exe+4EAEFC
"Dishonored2.exe"+4EAEF6: 41 0F 28 D9                    -  movaps xmm3,xmm9
"Dishonored2.exe"+4EAEFA: EB 09                          -  jmp Dishonored2.exe+4EAF05
"Dishonored2.exe"+4EAEFC: 49 8B 47 08                    -  mov rax,[r15+08]
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>568021</ID>
              <Description>"Dormant gravehounds can't sense you"</Description>
              <LastState/>
              <Color>000000</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$STRICT}

define(address,"Dishonored2.exe"+590A09)
define(bytes,F3 0F 10 8E 80 00 00 00)

[ENABLE]

assert(address,bytes)

address:
  xorps xmm1,xmm1         // activation radius = 0
  db 90 90 90 90 90


[DISABLE]

address:
  db bytes
  // movss xmm1,[rsi+80]  // m_activationRadius

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+590A09

"Dishonored2.exe"+5909D3: C3                       -  ret 
"Dishonored2.exe"+5909D4: F3 0F 10 87 00 03 00 00  -  movss xmm0,[rdi+00000300]
"Dishonored2.exe"+5909DC: F3 0F 10 8F 04 03 00 00  -  movss xmm1,[rdi+00000304]
"Dishonored2.exe"+5909E4: 48 89 74 24 48           -  mov [rsp+48],rsi
"Dishonored2.exe"+5909E9: 48 8B 71 08              -  mov rsi,[rcx+08]
"Dishonored2.exe"+5909ED: 4C 8D 4C 24 20           -  lea r9,[rsp+20]
"Dishonored2.exe"+5909F2: 48 8B D7                 -  mov rdx,rdi
"Dishonored2.exe"+5909F5: F3 0F 11 44 24 20        -  movss [rsp+20],xmm0
"Dishonored2.exe"+5909FB: F3 0F 10 87 08 03 00 00  -  movss xmm0,[rdi+00000308]
"Dishonored2.exe"+590A03: F3 0F 11 4C 24 24        -  movss [rsp+24],xmm1
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+590A09: F3 0F 10 8E 80 00 00 00  -  movss xmm1,[rsi+00000080]
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+590A11: F3 0F 11 44 24 28        -  movss [rsp+28],xmm0
"Dishonored2.exe"+590A17: F3 0F 11 4C 24 2C        -  movss [rsp+2C],xmm1
"Dishonored2.exe"+590A1D: E8 BE F4 FF FF           -  call Dishonored2.exe+58FEE0
"Dishonored2.exe"+590A22: 48 8B 15 3F 03 18 02     -  mov rdx,[Dishonored2.exe+2710D68]
"Dishonored2.exe"+590A29: 48 8B 8A F8 2F 31 00     -  mov rcx,[rdx+00312FF8]
"Dishonored2.exe"+590A30: 4C 8B C8                 -  mov r9,rax
"Dishonored2.exe"+590A33: 48 85 C9                 -  test rcx,rcx
"Dishonored2.exe"+590A36: 74 07                    -  je Dishonored2.exe+590A3F
"Dishonored2.exe"+590A38: 48 8B 89 78 03 00 00     -  mov rcx,[rcx+00000378]
"Dishonored2.exe"+590A3F: 48 85 C9                 -  test rcx,rcx
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>571019</ID>
      <Description>"Reset stats for kills and detections"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>000000</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$STRICT}

define(address,"Dishonored2.exe"+7A8244)
define(bytes, 41 89 10 B0 01)

[ENABLE]

assert(address, bytes)
alloc(newmem, $200, address)

label(return)
label(loop)
label(exit)
label(_ptr_)
label(idx)

label(sharedDone)
registerSymbol(sharedDone)

newmem:
  push rdx
  push r8

  mov  rax, [Dishonored2.exe+2710D68]
  add  rax, 1f77c8
  mov  [_ptr_], rax

  mov  rbp, idx

loop:
  mov  edi, dword ptr [rbp]
  cmp  edi, 0cc
  jne  @f
  mov  [sharedDone], 1
  jmp  exit

@@:
  mov  rcx, Dishonored2.exe+288bc60
  mov  rax, [rcx]
  call [rax+e0]
  test rax, rax
  jz   exit

  mov  rcx, [_ptr_]
  call Dishonored2.exe+7A8600
  test eax, eax
  js   exit

  mov  rcx, [_ptr_]
  movsxd rdx, dword ptr [rcx+204]
  imul rdx, 2f
  add  rdx, rdi
  mov  rax, [rcx+30]
  mov  ebx, [rcx+rdi*4+44],   // a stat for playthrough
  sub  [rcx+rdi*4+100], ebx   // fix the global stat: global's -= playthrough's
  xor  rbx, rbx
  cmp  [rcx+rdi*4+100], ebx
  jns  @f
  mov  [rcx+rdi*4+100], ebx   // something went wrong (inconsistent records?), resetting the global stat

@@:                           // reset stats
  mov  [rcx+rdi*4+44], ebx    //  for playthrough
  mov  [rax+rdx*4+4], ebx     //  for current mission

  add  rbp, 4
  jmp  loop

exit:
  pop r8
  pop rdx

// original code
  mov [r8], edx
  mov al, 1
  jmp return

  align 8
_ptr_:
  dq 0
sharedDone:
  dq 0
idx:
// dd 00 // ARK_PLAYER_STATISTIC_NONE
// dd 01 // ARK_PLAYER_STATISTIC_GOLDFOUND
// dd 02 // ARK_PLAYER_STATISTIC_PICKPOCKET_GOLDFOUND
// dd 03 // ARK_PLAYER_STATISTIC_RUNEFOUND
// dd 04 // ARK_PLAYER_STATISTIC_BONECHARMFOUND
// dd 05 // ARK_PLAYER_STATISTIC_BONECHARMTRAIT_FOUND
// dd 06 // ARK_PLAYER_STATISTIC_BONECHARM_CRAFTED
// dd 07 // ARK_PLAYER_STATISTIC_PAINTINGFOUND
// dd 08 // ARK_PLAYER_STATISTIC_BLUEPRINTFOUND
   dd 09 // ARK_PLAYER_STATISTIC_ALARMSTRIGGERED
   dd 0a // ARK_PLAYER_STATISTIC_BODYFOUND
   dd 0b // ARK_PLAYER_STATISTIC_HOSTILEKILL
   dd 0c // ARK_PLAYER_STATISTIC_AWARE_HOSTILEKILL
   dd 0d // ARK_PLAYER_STATISTIC_UNAWARE_HOSTILEKILL
   dd 0e // ARK_PLAYER_STATISTIC_CIVILIANKILL
   dd 0f // ARK_PLAYER_STATISTIC_BUSTED
// dd 10 // ARK_PLAYER_STATISTIC_SHRINESFOUND
// dd 11 // ARK_PLAYER_STATISTIC_COMPLETIONTIME
// dd 12 // ARK_PLAYER_STATISTIC_CHAOSSCORE
// dd 13 // ARK_PLAYER_STATISTIC_CHAOSLEVEL
// dd 14 // ARK_PLAYER_STATISTIC_TOTAL_NPC_IN_LEVEL
   dd 15 // ARK_PLAYER_STATISTIC_PLAYEREXPOSED
// dd 16 // ARK_PLAYER_STATISTIC_USE_HEALTH_POTION
// dd 17 // ARK_PLAYER_STATISTIC_USE_MANA_POTION
// dd 18 // ARK_PLAYER_STATISTIC_MAX_COINS
// dd 19 // ARK_PLAYER_STATISTIC_MAX_BONECHARMS
// dd 1a // ARK_PLAYER_STATISTIC_MAX_RUNES
// dd 1b // ARK_PLAYER_STATISTIC_MAX_PAINTINGS
// dd 1c // ARK_PLAYER_STATISTIC_MAX_BLUEPRINTS
// dd 1d // ARK_PLAYER_STATISTIC_MAX_OUTSIDERSHRINES
   dd 1e // ARK_PLAYER_STATISTIC_DROPKILL
   dd 1f // ARK_PLAYER_STATISTIC_DROPTAKEDOWN
// dd 20 // ARK_PLAYER_STATISTIC_DEATH
// dd 21 // ARK_PLAYER_STATISTIC_GAME_PROGRESS
// dd 22 // ARK_PLAYER_STATISTIC_PLAYTHROUGH_COUNT
// dd 23 // ARK_PLAYER_STATISTIC_HEART_BARK_PLAYED
// dd 24 // ARK_PLAYER_STATISTIC_TIME_PLAYED
// dd 25 // ARK_PLAYER_STATISTIC_FAVORITE_POWER
// dd 26 // ARK_PLAYER_STATISTIC_FAVORITE_WEAPON
// dd 27 // ARK_PLAYER_STATISTIC_MOST_PURCHASED_ITEM
   dd 28 // ARK_PLAYER_STATISTIC_ASSASSINATIONS
   dd 29 // ARK_PLAYER_STATISTIC_NON_LETHAL_ASSASSINATIONS
   dd 2a // ARK_PLAYER_STATISTIC_GLOBAL_KILL_RATIO
   dd 2b // ARK_PLAYER_STATISTIC_TOTAL_NONLETHAL_KILL
   dd 2c // ARK_PLAYER_STATISTIC_GLOBAL_NON_LETHAL_RATIO
   dd 2d // ARK_PLAYER_STATISTIC_GLOBAL_TOTAL_KILL
// dd 2e // ARK_PLAYER_STATISTIC_MAX

  dd cc cc

address:
  jmp newmem
return:

{$lua}

local function WaitForResult ()
  local wt = createTimer()
  wt.OnTimer = function(timer)
    if memrec.Active then
      local ptrDone = getAddressSafe("sharedDone")
      if not ptrDone or readQword(ptrDone) ~= 1 then return end

      timer.destroy()
      memrec.Active = false
    else
      timer.destroy()
    end
    timer.destroy()
  end
  wt.Interval = 500
end


if syntaxcheck then return end
WaitForResult()
{$asm}

[DISABLE]

address:
  db bytes
  // mov [r8],edx
  // mov al,01

unregisterSymbol(sharedDone)
dealloc(newmem)


{
// ORIGINAL CODE - INJECTION POINT: 1407A8244

1407A8220: 48 8B C5              - mov rax,rbp
1407A8223: EB 1F                 - jmp 1407A8244
1407A8225: 8B 54 AF 44           - mov edx,[rdi+rbp*4+44]
1407A8229: 48 8B C5              - mov rax,rbp
1407A822C: EB 16                 - jmp 1407A8244
1407A822E: 48 63 8F 04 02 00 00  - movsxd  rcx,dword ptr [rdi+00000204]
1407A8235: 48 8B 47 30           - mov rax,[rdi+30]
1407A8239: 48 6B C9 2F           - imul rcx,rcx,2F
1407A823D: 48 03 CD              - add rcx,rbp
1407A8240: 8B 54 88 04           - mov edx,[rax+rcx*4+04]
// ---------- INJECTING HERE ----------
1407A8244: 41 89 10              - mov [r8],edx
// ---------- DONE INJECTING  ----------
1407A8247: B0 01                 - mov al,01
1407A8249: 48 8B 5C 24 30        - mov rbx,[rsp+30]
1407A824E: 48 8B 6C 24 38        - mov rbp,[rsp+38]
1407A8253: 48 8B 74 24 40        - mov rsi,[rsp+40]
1407A8258: 48 83 C4 20           - add rsp,20
1407A825C: 5F                    - pop rdi
1407A825D: C3                    - ret
1407A825E: 66 90                 - nop 2
1407A8260: 01 82 7A 00 0D 82     - add [rdx-7DF2FF86],eax
1407A8266: 7A 00                 - jp 1407A8268
}

</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>571020</ID>
          <Description>"++ Return to the game (resume it, if it's paused), then go to the stats screen."</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>0000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>571022</ID>
          <Description>"++ If you don't see any changes, check wether the script has ended (deactivated)."</Description>
          <LastState Value="" RealAddress="00000000"/>
          <Color>0000FF</Color>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>567814</ID>
      <Description>"Experimental stuff"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <Color>C0C0C0</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>567907</ID>
          <Description>"Object's LOD x10 (requires "cold" load)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(address, "Dishonored2.exe"+9F33DB)
define(bytes, F3 0F 11 80 C0 18 00 00)

[ENABLE]

assert(address, bytes)
alloc(newmem, $100, address)

label(code)
label(return)
label(maxVisRange)
label(minVisRange)
label(visRangeFactor)

newmem:
maxVisRange:
  dd (float)1000   // 1000 m
minVisRange:
  dd (float)1      // 1 m
visRangeFactor:
  dq (float)10

code:
// IF (minVisRange &lt; maxVisibleRange &lt; maxVisRange) THEN maxVisibleRange = maxVisibleRange*visRangeFactor

  comiss xmm0,[minVisRange]
  jbe @F
  comiss xmm0,[maxVisRange]
  jae @F
  mulss xmm0,[visRangeFactor]
@@:
  movss [rax+18C0],xmm0
  jmp return

address:
  jmp code
  nop
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // movss [rax+000018C0],xmm0

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9F33DB

"Dishonored2.exe"+9F33AA: 80 A0 BC 18 00 00 F7              -  and byte ptr [rax+000018BC],-09
"Dishonored2.exe"+9F33B1: 80 E1 01                          -  and cl,01
"Dishonored2.exe"+9F33B4: C0 E1 03                          -  shl cl,03
"Dishonored2.exe"+9F33B7: 08 88 BC 18 00 00                 -  or [rax+000018BC],cl
"Dishonored2.exe"+9F33BD: 49 8B 4D 00                       -  mov rcx,[r13+00]
"Dishonored2.exe"+9F33C1: 48 8B 01                          -  mov rax,[rcx]
"Dishonored2.exe"+9F33C4: 49 8D 95 B0 00 00 00              -  lea rdx,[r13+000000B0]
"Dishonored2.exe"+9F33CB: FF 50 60                          -  call qword ptr [rax+60]
"Dishonored2.exe"+9F33CE: F3 41 0F 10 85 AC 00 00 00        -  movss xmm0,[r13+000000AC]
"Dishonored2.exe"+9F33D7: 49 8B 45 00                       -  mov rax,[r13+00]
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9F33DB: F3 0F 11 80 C0 18 00 00           -  movss [rax+000018C0],xmm0
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9F33E3: 49 8B 95 E0 00 00 00              -  mov rdx,[r13+000000E0]
"Dishonored2.exe"+9F33EA: 48 85 D2                          -  test rdx,rdx
"Dishonored2.exe"+9F33ED: 74 14                             -  je Dishonored2.exe+9F3403
"Dishonored2.exe"+9F33EF: 48 83 C2 50                       -  add rdx,50
"Dishonored2.exe"+9F33F3: 49 8B 4D 00                       -  mov rcx,[r13+00]
"Dishonored2.exe"+9F33F7: 48 81 C1 50 19 00 00              -  add rcx,00001950
"Dishonored2.exe"+9F33FE: E8 DD 87 9E FF                    -  call Dishonored2.exe+3DBBE0
"Dishonored2.exe"+9F3403: 45 33 F6                          -  xor r14d,r14d
"Dishonored2.exe"+9F3406: 41 8B FE                          -  mov edi,r14d
"Dishonored2.exe"+9F3409: 41 F7 85 D8 00 00 00 FF FF FF 00  -  test [r13+000000D8],FFFFFF
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>56127</ID>
          <Description>"Exclude fall damage"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(address,"Dishonored2.exe"+9E2FC0)
define(bytes,40 53 48 83 EC 50)

[ENABLE]

assert(address,bytes)

address:
  xorps xmm0, xmm0
  ret
  nop
  nop

[DISABLE]

address:
  db bytes
  // push rbx
  // sub rsp,50

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9E2FC0

"Dishonored2.exe"+9E2FAF: 41 5F                       -  pop r15
"Dishonored2.exe"+9E2FB1: 41 5E                       -  pop r14
"Dishonored2.exe"+9E2FB3: 41 5C                       -  pop r12
"Dishonored2.exe"+9E2FB5: 5F                          -  pop rdi
"Dishonored2.exe"+9E2FB6: 5E                          -  pop rsi
"Dishonored2.exe"+9E2FB7: 5B                          -  pop rbx
"Dishonored2.exe"+9E2FB8: 5D                          -  pop rbp
"Dishonored2.exe"+9E2FB9: E9 02 01 00 00              -  jmp Dishonored2.exe+9E30C0
"Dishonored2.exe"+9E2FBE: CC                          -  int 3 
"Dishonored2.exe"+9E2FBF: CC                          -  int 3 
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9E2FC0: 40 53                       -  push rbx
"Dishonored2.exe"+9E2FC2: 48 83 EC 50                 -  sub rsp,50
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9E2FC6: 4C 8B 51 18                 -  mov r10,[rcx+18]
"Dishonored2.exe"+9E2FCA: 48 63 81 A4 00 00 00        -  movsxd  rax,dword ptr [rcx+000000A4]
"Dishonored2.exe"+9E2FD1: 0F 29 74 24 40              -  movaps [rsp+40],xmm6
"Dishonored2.exe"+9E2FD6: 0F 29 7C 24 30              -  movaps [rsp+30],xmm7
"Dishonored2.exe"+9E2FDB: 44 0F 29 44 24 20           -  movaps [rsp+20],xmm8
"Dishonored2.exe"+9E2FE1: 0F 28 F1                    -  movaps xmm6,xmm1
"Dishonored2.exe"+9E2FE4: 48 8B D9                    -  mov rbx,rcx
"Dishonored2.exe"+9E2FE7: F3 45 0F 10 82 5C 01 00 00  -  movss xmm8,[r10+0000015C]
"Dishonored2.exe"+9E2FF0: F3 41 0F 10 BA 64 01 00 00  -  movss xmm7,[r10+00000164]
"Dishonored2.exe"+9E2FF9: 83 F8 FF                    -  cmp eax,-01
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>56129</ID>
          <Description>"Exclude fall damage v.2 (no catfall)"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{$STRICT}

define(address,"Dishonored2.exe"+9E29C2)
define(bytes,F3 0F 11 87 88 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$100,"Dishonored2.exe"+9E29C2)

label(code)
label(return)

newmem:
  dd (float)0
code:
  movss xmm0, [newmem]
  movss [rdi+88],xmm0
  jmp return

address:
  jmp code
  nop
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // movss [rdi+00000088],xmm0

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9E29C2

"Dishonored2.exe"+9E2981: F3 0F 10 87 94 00 00 00     -  movss xmm0,[rdi+00000094]
"Dishonored2.exe"+9E2989: F3 44 0F 10 87 88 00 00 00  -  movss xmm8,[rdi+00000088]
"Dishonored2.exe"+9E2992: 48 8B 83 00 03 00 00        -  mov rax,[rbx+00000300]
"Dishonored2.exe"+9E2999: 4C 8B 83 08 03 00 00        -  mov r8,[rbx+00000308]
"Dishonored2.exe"+9E29A0: 4C 8B B3 F8 02 00 00        -  mov r14,[rbx+000002F8]
"Dishonored2.exe"+9E29A7: 48 8B 73 10                 -  mov rsi,[rbx+10]
"Dishonored2.exe"+9E29AB: 48 89 45 6F                 -  mov [rbp+6F],rax
"Dishonored2.exe"+9E29AF: 4C 8D A6 00 03 00 00        -  lea r12,[rsi+00000300]
"Dishonored2.exe"+9E29B6: F3 41 0F 5C 44 24 08        -  subss xmm0,[r12+08]
"Dishonored2.exe"+9E29BD: F3 41 0F 58 C0              -  addss xmm0,xmm8
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9E29C2: F3 0F 11 87 88 00 00 00     -  movss [rdi+00000088],xmm0
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9E29CA: F3 0F 10 05 D2 EF 68 01     -  movss xmm0,[Dishonored2.exe+20719A4]
"Dishonored2.exe"+9E29D2: 41 8B 04 24                 -  mov eax,[r12]
"Dishonored2.exe"+9E29D6: 89 87 8C 00 00 00           -  mov [rdi+0000008C],eax
"Dishonored2.exe"+9E29DC: 41 8B 44 24 04              -  mov eax,[r12+04]
"Dishonored2.exe"+9E29E1: 89 87 90 00 00 00           -  mov [rdi+00000090],eax
"Dishonored2.exe"+9E29E7: 41 8B 44 24 08              -  mov eax,[r12+08]
"Dishonored2.exe"+9E29EC: 89 87 94 00 00 00           -  mov [rdi+00000094],eax
"Dishonored2.exe"+9E29F2: 41 0F 2F 80 B0 02 00 00     -  comiss xmm0,[r8+000002B0]
"Dishonored2.exe"+9E29FA: 77 0E                       -  ja Dishonored2.exe+9E2A0A
"Dishonored2.exe"+9E29FC: 49 8B 40 48                 -  mov rax,[r8+48]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>567825</ID>
          <Description>"Movement settings (activate, make relevant moves in the game, return here)"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>567839</ID>
              <Description>"Jumping"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$STRICT}

define(address,"Dishonored2.exe"+9E5792)
define(bytes,48 83 EC 20 48 8B D9)

[ENABLE]

assert(address, bytes)
alloc(newmem, $100, address)

label(hook)
label(return)
label(jmpSetAddrSM)
registerSymbol(jmpSetAddrSM)

newmem:
jmpSetAddrSM:
  dq 0

hook:
  mov [jmpSetAddrSM],rcx
  sub rsp,20
  mov rbx,rcx
  jmp return

address:
  jmp hook
  nop
  nop
return:

[DISABLE]

address:
  db bytes
  // sub rsp,20
  // mov rbx,rcx

unregisterSymbol(jmpSetAddrSM)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9E5792

"Dishonored2.exe"+9E5782: 88 43 68                       -  mov [rbx+68],al
"Dishonored2.exe"+9E5785: 48 83 C4 20                    -  add rsp,20
"Dishonored2.exe"+9E5789: 5B                             -  pop rbx
"Dishonored2.exe"+9E578A: C3                             -  ret 
"Dishonored2.exe"+9E578B: CC                             -  int 3 
"Dishonored2.exe"+9E578C: CC                             -  int 3 
"Dishonored2.exe"+9E578D: CC                             -  int 3 
"Dishonored2.exe"+9E578E: CC                             -  int 3 
"Dishonored2.exe"+9E578F: CC                             -  int 3 
"Dishonored2.exe"+9E5790: 40 53                          -  push rbx
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9E5792: 48 83 EC 20                    -  sub rsp,20
"Dishonored2.exe"+9E5796: 48 8B D9                       -  mov rbx,rcx
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9E5799: E8 A2 C7 FC FF                 -  call Dishonored2.exe+9B1F40
"Dishonored2.exe"+9E579E: 80 7B 69 00                    -  cmp byte ptr [rbx+69],00
"Dishonored2.exe"+9E57A2: 4C 8B 53 10                    -  mov r10,[rbx+10]
"Dishonored2.exe"+9E57A6: 4C 8B 4B 18                    -  mov r9,[rbx+18]
"Dishonored2.exe"+9E57AA: 4D 8B 9A 00 03 00 00           -  mov r11,[r10+00000300]
"Dishonored2.exe"+9E57B1: 74 09                          -  je Dishonored2.exe+9E57BC
"Dishonored2.exe"+9E57B3: 41 8B 81 60 01 00 00           -  mov eax,[r9+00000160]
"Dishonored2.exe"+9E57BA: EB 16                          -  jmp Dishonored2.exe+9E57D2
"Dishonored2.exe"+9E57BC: 80 7B 68 00                    -  cmp byte ptr [rbx+68],00
"Dishonored2.exe"+9E57C0: 74 09                          -  je Dishonored2.exe+9E57CB
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>567840</ID>
                  <Description>"Max. forward speed"</Description>
                  <VariableType>Float</VariableType>
                  <Address>jmpSetAddrSM</Address>
                  <Offsets>
                    <Offset>74</Offset>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>567844</ID>
                  <Description>"Max. backward speed"</Description>
                  <VariableType>Float</VariableType>
                  <Address>jmpSetAddrSM</Address>
                  <Offsets>
                    <Offset>7C</Offset>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>567845</ID>
                  <Description>"Max. strafe speed"</Description>
                  <VariableType>Float</VariableType>
                  <Address>jmpSetAddrSM</Address>
                  <Offsets>
                    <Offset>80</Offset>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>567847</ID>
                  <Description>"Height"</Description>
                  <VariableType>Float</VariableType>
                  <Address>jmpSetAddrSM</Address>
                  <Offsets>
                    <Offset>15C</Offset>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>567942</ID>
                  <Description>"Height (sprinting)"</Description>
                  <VariableType>Float</VariableType>
                  <Address>jmpSetAddrSM</Address>
                  <Offsets>
                    <Offset>160</Offset>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>567943</ID>
                  <Description>"Height (crouching)"</Description>
                  <VariableType>Float</VariableType>
                  <Address>jmpSetAddrSM</Address>
                  <Offsets>
                    <Offset>164</Offset>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>567848</ID>
                  <Description>"Superjump height increase"</Description>
                  <VariableType>Float</VariableType>
                  <Address>jmpSetAddrSM</Address>
                  <Offsets>
                    <Offset>168</Offset>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>567849</ID>
                  <Description>"Superjump successive"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>jmpSetAddrSM</Address>
                  <Offsets>
                    <Offset>16C</Offset>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>567944</ID>
                  <Description>"Max. velocity"</Description>
                  <VariableType>Float</VariableType>
                  <Address>jmpSetAddrSM</Address>
                  <Offsets>
                    <Offset>174</Offset>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>567946</ID>
                  <Description>"Steepness"</Description>
                  <VariableType>Float</VariableType>
                  <Address>jmpSetAddrSM</Address>
                  <Offsets>
                    <Offset>178</Offset>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>567850</ID>
                  <Description>"Superjump max. velocity"</Description>
                  <VariableType>Float</VariableType>
                  <Address>jmpSetAddrSM</Address>
                  <Offsets>
                    <Offset>17C</Offset>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>567945</ID>
                  <Description>"Superjump steepness"</Description>
                  <VariableType>Float</VariableType>
                  <Address>jmpSetAddrSM</Address>
                  <Offsets>
                    <Offset>180</Offset>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>567846</ID>
                  <Description>"Base address"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>8 Bytes</VariableType>
                  <Address>jmpSetAddrSM</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>567837</ID>
              <Description>"Falling"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$STRICT}

define(address,"Dishonored2.exe"+9E2615)
define(bytes, 48 89 74 24 18)

[ENABLE]

assert(address,bytes)
alloc(newmem, $100,address)

label(hook)
label(return)
label(fallSetAddrSM)
registerSymbol(fallSetAddrSM)

newmem:
fallSetAddrSM:
  dq 0

hook:
  mov [fallSetAddrSM],rcx
  mov [rsp+18],rsi
  jmp return

address:
  jmp hook
return:

[DISABLE]

address:
  db bytes
  // mov [rsp+18],rsi

unregisterSymbol(fallSetAddrSM)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9E2615

"Dishonored2.exe"+9E2607: CC                             -  int 3 
"Dishonored2.exe"+9E2608: CC                             -  int 3 
"Dishonored2.exe"+9E2609: CC                             -  int 3 
"Dishonored2.exe"+9E260A: CC                             -  int 3 
"Dishonored2.exe"+9E260B: CC                             -  int 3 
"Dishonored2.exe"+9E260C: CC                             -  int 3 
"Dishonored2.exe"+9E260D: CC                             -  int 3 
"Dishonored2.exe"+9E260E: CC                             -  int 3 
"Dishonored2.exe"+9E260F: CC                             -  int 3 
"Dishonored2.exe"+9E2610: 48 89 5C 24 10                 -  mov [rsp+10],rbx
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9E2615: 48 89 74 24 18                 -  mov [rsp+18],rsi
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9E261A: 57                             -  push rdi
"Dishonored2.exe"+9E261B: 48 83 EC 20                    -  sub rsp,20
"Dishonored2.exe"+9E261F: 48 8B D9                       -  mov rbx,rcx
"Dishonored2.exe"+9E2622: E8 19 F9 FC FF                 -  call Dishonored2.exe+9B1F40
"Dishonored2.exe"+9E2627: 48 8B 7B 10                    -  mov rdi,[rbx+10]
"Dishonored2.exe"+9E262B: 48 8B 57 10                    -  mov rdx,[rdi+10]
"Dishonored2.exe"+9E262F: 4C 8B 43 18                    -  mov r8,[rbx+18]
"Dishonored2.exe"+9E2633: 48 8B 8F 00 03 00 00           -  mov rcx,[rdi+00000300]
"Dishonored2.exe"+9E263A: 8B 82 00 03 00 00              -  mov eax,[rdx+00000300]
"Dishonored2.exe"+9E2640: 89 83 8C 00 00 00              -  mov [rbx+0000008C],eax
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>567838</ID>
                  <Description>"Max. forward speed"</Description>
                  <VariableType>Float</VariableType>
                  <Address>fallSetAddrSM</Address>
                  <Offsets>
                    <Offset>74</Offset>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>567854</ID>
                  <Description>"Max. backward speed"</Description>
                  <VariableType>Float</VariableType>
                  <Address>fallSetAddrSM</Address>
                  <Offsets>
                    <Offset>7C</Offset>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>567853</ID>
                  <Description>"Max. strafe speed"</Description>
                  <VariableType>Float</VariableType>
                  <Address>fallSetAddrSM</Address>
                  <Offsets>
                    <Offset>80</Offset>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>567851</ID>
                  <Description>"Base address"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>8 Bytes</VariableType>
                  <Address>fallSetAddrSM</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>567841</ID>
              <Description>"Running"</Description>
              <Options moHideChildren="1"/>
              <LastState/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{$STRICT}

define(address,"Dishonored2.exe"+9E6D03)
define(bytes,48 89 58 18 55)

[ENABLE]

assert(address,bytes)
alloc(newmem,$100,address)

label(hook)
label(return)
label(runSetAddrSM)
registerSymbol(runSetAddrSM)

newmem:
runSetAddrSM:
  dq 0

hook:
  mov [runSetAddrSM],rcx
  mov [rax+18],rbx
  push rbp
  jmp return

address:
  jmp hook
return:

[DISABLE]

address:
  db bytes
  // mov [rax+18],rbx
  // push rbp

unregisterSymbol(runSetAddrSM)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "Dishonored2.exe"+9E6D03

"Dishonored2.exe"+9E6CF7: CC                       -  int 3 
"Dishonored2.exe"+9E6CF8: CC                       -  int 3 
"Dishonored2.exe"+9E6CF9: CC                       -  int 3 
"Dishonored2.exe"+9E6CFA: CC                       -  int 3 
"Dishonored2.exe"+9E6CFB: CC                       -  int 3 
"Dishonored2.exe"+9E6CFC: CC                       -  int 3 
"Dishonored2.exe"+9E6CFD: CC                       -  int 3 
"Dishonored2.exe"+9E6CFE: CC                       -  int 3 
"Dishonored2.exe"+9E6CFF: CC                       -  int 3 
"Dishonored2.exe"+9E6D00: 48 8B C4                 -  mov rax,rsp
// ---------- INJECTING HERE ----------
"Dishonored2.exe"+9E6D03: 48 89 58 18              -  mov [rax+18],rbx
"Dishonored2.exe"+9E6D07: 55                       -  push rbp
// ---------- DONE INJECTING  ----------
"Dishonored2.exe"+9E6D08: 56                       -  push rsi
"Dishonored2.exe"+9E6D09: 57                       -  push rdi
"Dishonored2.exe"+9E6D0A: 41 54                    -  push r12
"Dishonored2.exe"+9E6D0C: 41 55                    -  push r13
"Dishonored2.exe"+9E6D0E: 41 56                    -  push r14
"Dishonored2.exe"+9E6D10: 41 57                    -  push r15
"Dishonored2.exe"+9E6D12: 48 8D 68 A1              -  lea rbp,[rax-5F]
"Dishonored2.exe"+9E6D16: 48 81 EC C0 00 00 00     -  sub rsp,000000C0
"Dishonored2.exe"+9E6D1D: 48 8B 71 10              -  mov rsi,[rcx+10]
"Dishonored2.exe"+9E6D21: 48 8B 79 18              -  mov rdi,[rcx+18]
}
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>567842</ID>
                  <Description>"Max. forward speed"</Description>
                  <VariableType>Float</VariableType>
                  <Address>runSetAddrSM</Address>
                  <Offsets>
                    <Offset>74</Offset>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>567856</ID>
                  <Description>"Max. backward speed"</Description>
                  <VariableType>Float</VariableType>
                  <Address>runSetAddrSM</Address>
                  <Offsets>
                    <Offset>7C</Offset>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>567857</ID>
                  <Description>"Max. strafe speed"</Description>
                  <VariableType>Float</VariableType>
                  <Address>runSetAddrSM</Address>
                  <Offsets>
                    <Offset>80</Offset>
                    <Offset>18</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>567855</ID>
                  <Description>"Base address"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>8 Bytes</VariableType>
                  <Address>runSetAddrSM</Address>
                  <Offsets>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
